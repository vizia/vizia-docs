var searchIndex = JSON.parse('{\
"vizia":{"doc":"Vizia","t":"","n":["Application","ROBOTO_BOLD","ROBOTO_ITALIC","ROBOTO_REGULAR","TABLER_ICONS","always_on_top","binding","borrow","borrow_mut","context","decorations","environment","events","fonts","from","get_proxy","icon","icons","ignore_default_theme","image","include_style","inner_size","input","into","layout","localization","max_inner_size","maximized","min_inner_size","minimized","model","modifiers","new","on_idle","position","resizable","resource","run","set_text_config","should_poll","style","title","transparent","try_from","try_into","type_id","util","vg","view","views","visible","vsync","vzip","window","AndLens","Binding","Data","Index","IntoLens","Lens","LensExt","Map","MapRef","MapRefState","MapState","OrLens","RatioLens","Res","Setter","Source","Source","StaticLens","Target","Then","UnwrapLens","Wrapper","and","apply","bitand","bitand","bitand","bitand","bitor","bitor","bitor","bitor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get_fallible","get_val","get_val_fallible","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","idx","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into_lens","map","map_ref","new","new","new","new","new","new","new","new","null_value","null_value","or","same","set_or_bind","swap","then","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap","view","view","view","view","view","view","view","view","view","view","view","view","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AccessContext","AccessNode","CURRENT","Context","ContextProxy","DataContext","DrawContext","EmitContext","EventContext","EventLoopClosed","EventProxy","MAPS","MAP_MANAGER","ProxyEmitError","ResourceContext","TreeProps","Unsupported","add_animation","add_child","add_font_mem","add_global_listener","add_listener","add_listener","add_stylesheet","add_timer","add_timer","add_translation","backdrop_filter","background_color","background_color","background_images","background_size","border_bottom_left_radius","border_bottom_left_shape","border_bottom_right_radius","border_bottom_right_shape","border_color","border_top_left_radius","border_top_left_shape","border_top_right_radius","border_top_right_shape","border_width","border_width","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","bounds","box_shadows","build_path","cache","cancel_scheduled","cancel_scheduled","cancel_scheduled","capture","caret_color","child_bottom","child_left","child_right","child_top","clip_region","clip_region","clone","clone_into","current","current","current","data","data","data","data","default","default_font","display","draw_backdrop_filter","draw_background","draw_border","draw_inset_box_shadows","draw_outline","draw_shadows","draw_text","draw_text_and_selection","draw_text_caret","draw_text_selection","emit","emit","emit","emit","emit_custom","emit_custom","emit_custom","emit_to","emit_to","emit_to","emit_to","environment","environment","event_proxy","first_child","first_child","fmt","fmt","fmt","focus","focus","focus_next","focus_prev","focus_with_visibility","focus_with_visibility","focused","font_color","font_size","font_size","from","from","from","from","from","from","from","from","get_clipboard","get_proxy","get_view","has_drop_data","hovered","ignore_default_theme","into","into","into","into","into","into","into","into","is_active","is_animating","is_checked","is_cursor_icon_locked","is_disabled","is_draggable","is_focused","is_hovered","is_over","is_placeholder_shown","is_read_only","is_valid","labelled_by","last_child","load_image","load_image","load_image","lock_cursor_icon","logical_to_physical","logical_to_physical","make_clone","modifiers","modifiers","modify","modify_timer","modify_timer","mouse","mouse","mutate_window","mutate_window","needs_redraw","needs_redraw","needs_relayout","needs_relayout","needs_restyle","needs_restyle","new","new","new","new_from_parent","new_with_current","nth_child","null_value","numeric_value","opacity","outline_color","outline_offset","outline_width","parent","parent","physical_to_logical","physical_to_logical","play_animation","play_animation_for","raw_window_handle","raw_window_handle","redraw","release","reload_styles","remove_user_themes","resolve_entity_identifier","resolve_entity_identifier","scale_factor","scale_factor","scale_factor","schedule_emit","schedule_emit","schedule_emit","schedule_emit_custom","schedule_emit_custom","schedule_emit_custom","schedule_emit_to","schedule_emit_to","schedule_emit_to","selection_color","send","set_active","set_backdrop_filter","set_background_color","set_bottom","set_bounds","set_bounds","set_character_lengths","set_character_positions","set_character_widths","set_checked","set_clip_path","set_clipboard","set_default_action_verb","set_default_font","set_display","set_drop_data","set_hidden","set_hover","set_id","set_image_loader","set_language","set_language","set_left","set_live","set_max_numeric_value","set_min_numeric_value","set_name","set_numeric_value","set_numeric_value_jump","set_numeric_value_step","set_opacity","set_overflowx","set_overflowy","set_placeholder_shown","set_pointer_events","set_read_only","set_read_write","set_right","set_role","set_role","set_rotate","set_scale","set_text","set_text_direction","set_text_selection","set_theme_mode","set_top","set_transform","set_transform_origin","set_translate","set_user_scale_factor","set_valid","set_value","set_visibility","set_window_size","set_word_lengths","set_z_index","spawn","spawn","spawn","spawn","start_timer","start_timer","stop_timer","stop_timer","text_align","text_value","text_wrap","timer_is_running","timer_is_running","to_owned","to_string","to_string_local","toggle_class","transform","transform","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock_cursor_icon","user_scale_factor","user_scale_factor","visibility","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","window_has_focus","window_size","window_size","with_current","with_current","AppTheme","BuiltIn","DarkMode","Environment","EnvironmentEvent","LightMode","SetLocale","SetThemeMode","System","Theme","ThemeMode","ToggleThemeMode","UseSystemLocale","app_theme","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","environment_derived_lenses","eq","eq","equals","equals","event","fmt","fmt","from","from","from","from","from","get_current_theme","into","into","into","into","into","locale","new","null_value","null_value","sys_theme","theme","theme_derived_lenses","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","as_any","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","caret_timer","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","equals","equals","equals","equals","fmt","fmt","fmt","fmt","from","from","from","from","get_val","get_val_fallible","hash","hash","hash","hash","into","into","into","into","locale","new","new","new","new","root","set_or_bind","theme","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","view","view","view","view","vzip","vzip","vzip","vzip","app_theme","as_any","as_any","as_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","eq","eq","eq","equals","equals","equals","fmt","fmt","fmt","from","from","from","hash","hash","hash","into","into","into","new","new","new","root","sys_theme","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","view","view","view","vzip","vzip","vzip","ActionRequest","CharInput","Debug","Direct","Drop","Event","EventMeta","FocusIn","FocusNext","FocusOut","FocusPrev","GeometryChanged","GrabCursor","KeyDown","KeyUp","MouseCaptureEvent","MouseCaptureOutEvent","MouseDoubleClick","MouseDown","MouseEnter","MouseLeave","MouseMove","MouseOut","MouseOver","MouseScroll","MouseTripleClick","MouseUp","Press","PressDown","Propagation","Redraw","Relayout","ReloadStyles","Restyle","SetAlwaysOnTop","SetCursor","SetCursorPosition","SetDecorations","SetMaxSize","SetMaximized","SetMinSize","SetMinimized","SetPosition","SetResizable","SetSize","SetTitle","SetVisible","Start","Stop","Subtree","ThemeChanged","Tick","TimedEventHandle","Timer","TimerAction","Up","WindowClose","WindowEvent","as_any","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","consume","consume","default","direct","eq","eq","eq","eq","equals","equals","equals","equals","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","map","new","null_value","origin","origin","propagate","propagation","take","target","target","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","mouse","mouse","ROBOTO_BOLD","ROBOTO_ITALIC","ROBOTO_REGULAR","TABLER_ICONS","ICON_123","ICON_ADJUSTMENTS_ALT","ICON_ARROWS_SORT","ICON_ARROW_AUTOFIT_CONTENT","ICON_ARROW_AUTOFIT_DOWN","ICON_ARROW_AUTOFIT_HEIGHT","ICON_ARROW_AUTOFIT_LEFT","ICON_ARROW_AUTOFIT_RIGHT","ICON_ARROW_AUTOFIT_UP","ICON_ARROW_AUTOFIT_WIDTH","ICON_ARROW_BACK","ICON_ARROW_BACK_UP","ICON_ARROW_BACK_UP_DOUBLE","ICON_ARROW_BADGE_DOWN","ICON_ARROW_BADGE_LEFT","ICON_ARROW_BADGE_RIGHT","ICON_ARROW_BADGE_UP","ICON_ARROW_BAR_DOWN","ICON_ARROW_BAR_LEFT","ICON_ARROW_BAR_RIGHT","ICON_ARROW_BAR_TO_DOWN","ICON_ARROW_BAR_TO_LEFT","ICON_ARROW_BAR_TO_RIGHT","ICON_ARROW_BAR_TO_UP","ICON_ARROW_BAR_UP","ICON_ARROW_BEAR_LEFT","ICON_ARROW_BEAR_LEFT_2","ICON_ARROW_BEAR_RIGHT","ICON_ARROW_BEAR_RIGHT_2","ICON_ARROW_BIG_DOWN","ICON_ARROW_BIG_DOWN_LINE","ICON_ARROW_BIG_DOWN_LINES","ICON_ARROW_BIG_LEFT","ICON_ARROW_BIG_LEFT_LINE","ICON_ARROW_BIG_LEFT_LINES","ICON_ARROW_BIG_RIGHT","ICON_ARROW_BIG_RIGHT_LINE","ICON_ARROW_BIG_RIGHT_LINES","ICON_ARROW_BIG_UP","ICON_ARROW_BIG_UP_LINE","ICON_ARROW_BIG_UP_LINES","ICON_BAT","ICON_BOOKMARK","ICON_BOOKMARKS","ICON_BOOKMARKS_OFF","ICON_BOOKMARK_OFF","ICON_BOX_ALIGN_BOTTOM","ICON_BOX_ALIGN_BOTTOM_FILLED","ICON_BOX_ALIGN_BOTTOM_LEFT","ICON_BOX_ALIGN_BOTTOM_LEFT_FILLED","ICON_BOX_ALIGN_BOTTOM_RIGHT","ICON_BOX_ALIGN_BOTTOM_RIGHT_FILLED","ICON_BOX_ALIGN_LEFT","ICON_BOX_ALIGN_LEFT_FILLED","ICON_BOX_ALIGN_RIGHT","ICON_BOX_ALIGN_RIGHT_FILLED","ICON_BOX_ALIGN_TOP","ICON_BOX_ALIGN_TOP_FILLED","ICON_BOX_ALIGN_TOP_LEFT","ICON_BOX_ALIGN_TOP_LEFT_FILLED","ICON_BOX_ALIGN_TOP_RIGHT","ICON_BOX_ALIGN_TOP_RIGHT_FILLED","ICON_BOX_MARGIN","ICON_BOX_MULTIPLE_0","ICON_BOX_MULTIPLE_1","ICON_BOX_MULTIPLE_2","ICON_BOX_MULTIPLE_3","ICON_BOX_MULTIPLE_4","ICON_BOX_MULTIPLE_5","ICON_BOX_MULTIPLE_6","ICON_BOX_MULTIPLE_7","ICON_BOX_MULTIPLE_8","ICON_BOX_MULTIPLE_9","ICON_CALENDAR","ICON_CALENDAR_TIME","ICON_CAT","ICON_CHECK","ICON_CHEVRON_DOWN","ICON_CHEVRON_DOWN_LEFT","ICON_CHEVRON_DOWN_RIGHT","ICON_CHEVRON_LEFT","ICON_CHEVRON_RIGHT","ICON_CHEVRON_UP","ICON_CHEVRON_UP_LEFT","ICON_CHEVRON_UP_RIGHT","ICON_CIRCLE_NUMBER_0","ICON_CIRCLE_NUMBER_1","ICON_CIRCLE_NUMBER_2","ICON_CIRCLE_NUMBER_3","ICON_CIRCLE_NUMBER_4","ICON_CIRCLE_NUMBER_5","ICON_CIRCLE_NUMBER_6","ICON_CIRCLE_NUMBER_7","ICON_CIRCLE_NUMBER_8","ICON_CIRCLE_NUMBER_9","ICON_CLIPBOARD","ICON_CLOCK","ICON_COLUMNS_1","ICON_COLUMNS_2","ICON_COLUMNS_3","ICON_COLUMN_INSERT_LEFT","ICON_COLUMN_INSERT_RIGHT","ICON_COMMAND","ICON_COPY","ICON_CURSOR_TEXT","ICON_CUT","ICON_DEER","ICON_DOG","ICON_EDIT","ICON_EDIT_CIRCLE","ICON_EDIT_CIRCLE_OFF","ICON_EDIT_OFF","ICON_EYE","ICON_EYE_OFF","ICON_FILE_PENCIL","ICON_FILTER","ICON_FILTER_BOLT","ICON_FILTER_CANCEL","ICON_FILTER_CHECK","ICON_FILTER_CODE","ICON_FILTER_COG","ICON_FILTER_DISCOUNT","ICON_FILTER_DOLLAR","ICON_FILTER_DOWN","ICON_FILTER_EDIT","ICON_FILTER_EXCLAMATION","ICON_FILTER_HEART","ICON_FILTER_MINUS","ICON_FILTER_OFF","ICON_FILTER_PAUSE","ICON_FILTER_PIN","ICON_FILTER_PLUS","ICON_FILTER_QUESTION","ICON_FILTER_SEARCH","ICON_FILTER_SHARE","ICON_FILTER_STAR","ICON_FILTER_UP","ICON_FILTER_X","ICON_FISH","ICON_FISH_BONE","ICON_FISH_OFF","ICON_FOLDER","ICON_FOLDERS","ICON_FOLDERS_OFF","ICON_FOLDER_BOLT","ICON_FOLDER_CANCEL","ICON_FOLDER_CHECK","ICON_FOLDER_CODE","ICON_FOLDER_COG","ICON_FOLDER_DOLLAR","ICON_FOLDER_DOWN","ICON_FOLDER_EXCLAMATION","ICON_FOLDER_FILLED","ICON_FOLDER_HEART","ICON_FOLDER_MINUS","ICON_FOLDER_OFF","ICON_FOLDER_OPEN","ICON_FOLDER_PAUSE","ICON_FOLDER_PIN","ICON_FOLDER_PLUS","ICON_FOLDER_QUESTION","ICON_FOLDER_SEARCH","ICON_FOLDER_SHARE","ICON_FOLDER_STAR","ICON_FOLDER_SYMLINK","ICON_FOLDER_UP","ICON_FOLDER_X","ICON_GRID_DOTS","ICON_HEXAGON_NUMBER_0","ICON_HEXAGON_NUMBER_1","ICON_HEXAGON_NUMBER_2","ICON_HEXAGON_NUMBER_3","ICON_HEXAGON_NUMBER_4","ICON_HEXAGON_NUMBER_5","ICON_HEXAGON_NUMBER_6","ICON_HEXAGON_NUMBER_7","ICON_HEXAGON_NUMBER_8","ICON_HEXAGON_NUMBER_9","ICON_LAYOUT_2","ICON_LAYOUT_ALIGN_BOTTOM","ICON_LAYOUT_ALIGN_CENTER","ICON_LAYOUT_ALIGN_LEFT","ICON_LAYOUT_ALIGN_MIDDLE","ICON_LAYOUT_ALIGN_RIGHT","ICON_LAYOUT_ALIGN_TOP","ICON_LAYOUT_DISTRIBUTE_HORIZONTAL","ICON_LAYOUT_DISTRIBUTE_VERTICAL","ICON_LAYOUT_LIST","ICON_LETTER_CASE","ICON_LETTER_CASE_LOWER","ICON_LETTER_CASE_TOGGLE","ICON_LETTER_CASE_UPPER","ICON_LIST","ICON_LIST_SEARCH","ICON_LIST_TREE","ICON_MENU","ICON_MENU_2","ICON_MINUS","ICON_MOON","ICON_PENCIL","ICON_PENCIL_MINUS","ICON_PENCIL_OFF","ICON_PENCIL_PLUS","ICON_PIG","ICON_PIG_MONEY","ICON_PIG_OFF","ICON_PLAYER_PAUSE","ICON_PLAYER_PAUSE_FILLED","ICON_PLAYER_PLAY","ICON_PLAYER_PLAY_FILLED","ICON_PLAYER_RECORD","ICON_PLAYER_RECORD_FILLED","ICON_PLAYER_SKIP_BACK","ICON_PLAYER_SKIP_BACK_FILLED","ICON_PLAYER_SKIP_FORWARD","ICON_PLAYER_SKIP_FORWARD_FILLED","ICON_PLAYER_STOP","ICON_PLAYER_STOP_FILLED","ICON_PLAYLIST","ICON_PLAYLIST_ADD","ICON_PLAYLIST_OFF","ICON_PLAYLIST_X","ICON_PLUS","ICON_POINTER","ICON_REPEAT","ICON_REPEAT_OFF","ICON_ROW_INSERT_BOTTOM","ICON_ROW_INSERT_TOP","ICON_SEARCH","ICON_SETTINGS_AUTOMATION","ICON_SHARE","ICON_SHARE_2","ICON_SHARE_3","ICON_SLICE","ICON_SORT_0_9","ICON_SORT_9_0","ICON_SORT_ASCENDING","ICON_SORT_ASCENDING_2","ICON_SORT_ASCENDING_LETTERS","ICON_SORT_ASCENDING_NUMBERS","ICON_SORT_A_Z","ICON_SORT_DESCENDING","ICON_SORT_DESCENDING_2","ICON_SORT_DESCENDING_LETTERS","ICON_SORT_DESCENDING_NUMBERS","ICON_SORT_Z_A","ICON_SPACING_HORIZONTAL","ICON_SPACING_VERTICAL","ICON_SPIDER","ICON_SQUARE_PLUS","ICON_STAR_FILLED","ICON_SUN","ICON_TAG","ICON_TAGS","ICON_TAGS_OFF","ICON_TAG_OFF","ICON_TEXT_WRAP","ICON_TEXT_WRAP_DISABLED","ICON_TRASH","ICON_WAVE_SAW_TOOL","ICON_WAVE_SINE","ICON_WAVE_SQUARE","ICON_WEIGHT","ICON_X","A8","AnimationDecoder","Avif","Bgr8","Bgra8","Bmp","CHANNEL_COUNT","COLOR_MODEL","COLOR_TYPE","ColorType","DEFAULT_MAX_VALUE","DEFAULT_MIN_VALUE","Dds","Decoding","Delay","DynamicImage","EncodableLayout","Encoding","Err","ExtendedColorType","Farbfeld","FlatSamples","Frame","Frames","GenericImage","GenericImageView","Gif","GrayAlphaImage","GrayImage","Hdr","Ico","ImageBuffer","ImageDecoder","ImageDecoderRect","ImageEncoder","ImageError","ImageFormat","ImageLuma16","ImageLuma8","ImageLumaA16","ImageLumaA8","ImageOutputFormat","ImageResult","ImageRgb16","ImageRgb32F","ImageRgb8","ImageRgba16","ImageRgba32F","ImageRgba8","IoError","Jpeg","L1","L16","L16","L2","L4","L8","L8","La1","La16","La16","La2","La4","La8","La8","Limits","Luma","LumaA","Ok","OpenExr","Parameter","Pixel","Pixel","PixelWithColorType","Pixels","Png","Png","Pnm","Primitive","Progress","Qoi","Reader","Rgb","Rgb1","Rgb16","Rgb16","Rgb2","Rgb32F","Rgb32F","Rgb32FImage","Rgb4","Rgb8","Rgb8","RgbImage","Rgba","Rgba1","Rgba16","Rgba16","Rgba2","Rgba32F","Rgba32F","Rgba32FImage","Rgba4","Rgba8","Rgba8","RgbaImage","SubImage","Subpixel","Tga","Tiff","Unknown","Unsupported","Unsupported","WebP","adjust_contrast","apply","apply","apply","apply","apply","apply2","apply2","apply2","apply2","apply2","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_without_alpha","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_bytes","as_bytes","as_flat_samples","as_flat_samples_f32","as_flat_samples_mut","as_flat_samples_u16","as_flat_samples_u8","as_luma16","as_luma8","as_luma_alpha16","as_luma_alpha8","as_mut","as_mut_luma16","as_mut_luma8","as_mut_luma_alpha16","as_mut_luma_alpha8","as_mut_rgb16","as_mut_rgb32f","as_mut_rgb8","as_mut_rgba16","as_mut_rgba32f","as_mut_rgba8","as_mut_slice","as_raw","as_ref","as_rgb16","as_rgb32f","as_rgb8","as_rgba16","as_rgba32f","as_rgba8","as_slice","as_view","as_view_mut","as_view_with_mut_samples","bits_per_pixel","blend","blend","blend","blend","blend","blend_pixel","blend_pixel","blend_pixel","blur","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","bounds","bounds","brighten","buffer","buffer_mut","bytes_per_pixel","can_read","can_write","change_bounds","channel_count","channel_count","channels","channels","channels","channels","channels","channels4","channels4","channels4","channels4","channels4","channels_mut","channels_mut","channels_mut","channels_mut","channels_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","collect_frames","color","color_hint","color_type","convert","copy_from","copy_within","copy_within","crop","crop_imm","current","default","default","delay","deref","deref","deref_mut","deref_mut","dimensions","dimensions","dimensions","dimensions","dimensions","enumerate_pixels","enumerate_pixels_mut","enumerate_rows","enumerate_rows_mut","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","expand_palette","extensions_str","extents","filter3x3","fits","fliph","flipv","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_channels","from_channels","from_channels","from_channels","from_channels","from_decoder","from_extension","from_fn","from_mime_type","from_numer_denom_ms","from_parts","from_path","from_pixel","from_raw","from_saturating_duration","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_mut","from_slice_mut","from_slice_mut","from_slice_mut","from_slice_mut","from_vec","get_mut_sample","get_pixel","get_pixel","get_pixel","get_pixel","get_pixel_checked","get_pixel_mut","get_pixel_mut","get_pixel_mut","get_pixel_mut","get_pixel_mut_checked","get_sample","grayscale","guess_format","has_aliased_samples","has_alpha","has_color","hash","hash","hash","hash","hash","hash","hash","hash","height","height","height","huerotate","icc_profile","image_dimensions","image_mut_slice","image_slice","in_bounds","in_bounds","in_bounds_index","index","index","index","index","index","index","index","index_ignoring_bounds","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","inner","inner_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_buffer","into_bytes","into_flat_samples","into_frames","into_iter","into_iter","into_luma16","into_luma8","into_luma_alpha16","into_luma_alpha8","into_raw","into_reader","into_rgb16","into_rgb32f","into_rgb8","into_rgba16","into_rgba32f","into_rgba8","into_vec","invert","invert","invert","invert","invert","invert","is_normal","layout","left","load","load_from_memory","load_from_memory_with_format","map","map","map","map","map","map2","map2","map2","map2","map2","map_with_alpha","map_with_alpha","map_with_alpha","map_with_alpha","map_with_alpha","map_without_alpha","min_length","new","new","new","new","new_luma16","new_luma8","new_luma_a16","new_luma_a8","new_rgb16","new_rgb32f","new_rgb8","new_rgba16","new_rgba32f","new_rgba8","next","next","null_value","null_value","numer_denom_ms","open","original_color_type","partial_cmp","pixels","pixels","pixels_mut","put_pixel","put_pixel","put_pixel","put_pixel","read_image","read_image_with_progress","read_rect","read_rect_with_progress","remaining","resize","resize_exact","resize_to_fill","rotate180","rotate270","rotate90","rows","rows_mut","sample_layout","samples","save","save","save_buffer","save_buffer_with_format","save_with_format","save_with_format","scanline_bytes","set_limits","shrink_to","source","strides_cwh","sub_image","sub_image","thumbnail","thumbnail_exact","to_bytes","to_image","to_luma","to_luma","to_luma","to_luma","to_luma","to_luma16","to_luma32f","to_luma8","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha16","to_luma_alpha32f","to_luma_alpha8","to_mime_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_rgb","to_rgb","to_rgb","to_rgb","to_rgb","to_rgb16","to_rgb32f","to_rgb8","to_rgba","to_rgba","to_rgba","to_rgba","to_rgba","to_rgba16","to_rgba32f","to_rgba8","to_string","to_string_local","to_vec","top","total","total_bytes","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_buffer","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsafe_get_pixel","unsafe_get_pixel","unsafe_put_pixel","unsafe_put_pixel","unsharpen","view","view","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","width","width","width","with_monocolor","write_buffer_with_format","write_image","write_to","write_to","write_with_encoder","write_with_encoder","ALT","AVRInput","AVRPower","Abort","Accept","Again","Again","AllCandidates","Alphanumeric","Alt","AltGraph","AltLeft","AltRight","AppSwitch","ArrowDown","ArrowDown","ArrowLeft","ArrowLeft","ArrowRight","ArrowRight","ArrowUp","ArrowUp","Attn","AudioBalanceLeft","AudioBalanceRight","AudioBassBoostDown","AudioBassBoostToggle","AudioBassBoostUp","AudioFaderFront","AudioFaderRear","AudioSurroundModeNext","AudioTrebleDown","AudioTrebleUp","AudioVolumeDown","AudioVolumeDown","AudioVolumeMute","AudioVolumeMute","AudioVolumeUp","AudioVolumeUp","Backquote","Backslash","Backspace","Backspace","BracketLeft","BracketRight","BrightnessDown","BrightnessDown","BrightnessUp","BrightnessUp","BrowserBack","BrowserBack","BrowserFavorites","BrowserFavorites","BrowserForward","BrowserForward","BrowserHome","BrowserHome","BrowserRefresh","BrowserRefresh","BrowserSearch","BrowserSearch","BrowserStop","BrowserStop","CTRL","Call","Camera","CameraFocus","Cancel","CapsLock","CapsLock","ChannelDown","ChannelUp","Character","Clear","Close","ClosedCaptionToggle","Code","CodeInput","ColorF0Red","ColorF1Green","ColorF2Yellow","ColorF3Blue","ColorF4Grey","ColorF5Brown","Comma","Compose","ContextMenu","ContextMenu","Control","ControlLeft","ControlRight","Convert","Convert","Copy","Copy","CrSel","Cut","Cut","DVR","Dead","Delete","Delete","Digit0","Digit1","Digit2","Digit3","Digit4","Digit5","Digit6","Digit7","Digit8","Digit9","Dimmer","DisplaySwap","DisplayToggleIntExt","Eisu","Eject","Eject","End","End","EndCall","Enter","Enter","Equal","EraseEof","Escape","Escape","ExSel","Execute","Exit","F1","F1","F10","F10","F11","F11","F12","F12","F13","F13","F14","F14","F15","F15","F16","F16","F17","F17","F18","F18","F19","F19","F2","F2","F20","F20","F21","F21","F22","F22","F23","F23","F24","F24","F3","F3","F4","F4","F5","F5","F6","F6","F7","F7","F8","F8","F9","F9","FavoriteClear0","FavoriteClear1","FavoriteClear2","FavoriteClear3","FavoriteRecall0","FavoriteRecall1","FavoriteRecall2","FavoriteRecall3","FavoriteStore0","FavoriteStore1","FavoriteStore2","FavoriteStore3","FinalMode","Find","Find","Fn","Fn","FnLock","FnLock","GoBack","GoHome","GroupFirst","GroupLast","GroupNext","GroupPrevious","Guide","GuideNextDay","GuidePreviousDay","HangulMode","HanjaMode","Hankaku","HeadsetHook","Help","Help","Hibernate","Hiragana","Hiragana","HiraganaKatakana","Home","Home","Hyper","Hyper","Info","Insert","Insert","InsertAction","InstantReplay","IntlBackslash","IntlRo","IntlYen","JunjaMode","KanaMode","KanaMode","KanjiMode","Katakana","Katakana","Key","Key11","Key12","KeyA","KeyB","KeyC","KeyD","KeyE","KeyF","KeyG","KeyH","KeyI","KeyJ","KeyK","KeyL","KeyM","KeyN","KeyO","KeyP","KeyQ","KeyR","KeyS","KeyT","KeyU","KeyV","KeyW","KeyX","KeyY","KeyZ","KeyboardLayoutSelect","Keymap","KeymapEntry","KeymapEvent","LOGO","Lang1","Lang2","Lang3","Lang4","Lang5","LastNumberRedial","LaunchApp1","LaunchApp2","LaunchApplication1","LaunchApplication2","LaunchAssistant","LaunchCalendar","LaunchContacts","LaunchControlPanel","LaunchMail","LaunchMail","LaunchMediaPlayer","LaunchMusicPlayer","LaunchPhone","LaunchScreenSaver","LaunchScreenSaver","LaunchSpreadsheet","LaunchWebBrowser","LaunchWebCam","LaunchWordProcessor","Left","Link","ListProgram","LiveContent","Lock","LogOff","MailForward","MailForward","MailReply","MailReply","MailSend","MailSend","MannerMode","MediaApps","MediaAudioTrack","MediaClose","MediaFastForward","MediaFastForward","MediaLast","MediaPause","MediaPause","MediaPlay","MediaPlay","MediaPlayPause","MediaPlayPause","MediaRecord","MediaRecord","MediaRewind","MediaRewind","MediaSelect","MediaSkipBackward","MediaSkipForward","MediaStepBackward","MediaStepForward","MediaStop","MediaStop","MediaTopMenu","MediaTrackNext","MediaTrackNext","MediaTrackPrevious","MediaTrackPrevious","Meta","MetaLeft","MetaRight","MicrophoneMuteToggle","MicrophoneToggle","MicrophoneVolumeDown","MicrophoneVolumeMute","MicrophoneVolumeUp","Middle","Minus","ModeChange","Modifiers","MouseButton","MouseButtonData","MouseState","NavigateIn","NavigateNext","NavigateOut","NavigatePrevious","New","NextCandidate","NextFavoriteChannel","NextUserProfile","NonConvert","NonConvert","Notification","NumLock","NumLock","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","NumpadAdd","NumpadBackspace","NumpadClear","NumpadClearEntry","NumpadComma","NumpadDecimal","NumpadDivide","NumpadEnter","NumpadEqual","NumpadHash","NumpadMemoryAdd","NumpadMemoryClear","NumpadMemoryRecall","NumpadMemoryStore","NumpadMemorySubtract","NumpadMultiply","NumpadParenLeft","NumpadParenRight","NumpadStar","NumpadSubtract","OnDemand","Open","Open","Other","PageDown","PageDown","PageUp","PageUp","Pairing","Paste","Paste","Pause","Pause","Period","PinPDown","PinPMove","PinPToggle","PinPUp","Play","PlaySpeedDown","PlaySpeedReset","PlaySpeedUp","Power","Power","PowerOff","PreviousCandidate","Print","PrintScreen","PrintScreen","PrivacyScreenToggle","Process","Props","Props","Quote","RandomToggle","RcLowBattery","RecordSpeedNext","Redo","RemoveAction","Resume","RfBypass","Right","Romaji","SHIFT","STBInput","STBPower","Save","ScanChannelsToggle","ScreenModeNext","ScrollLock","ScrollLock","Select","Select","SelectTask","Semicolon","Settings","Shift","ShiftLeft","ShiftRight","ShowAllWindows","SingleCandidate","Slash","Sleep","Soft1","Soft2","Soft3","Soft4","Space","SpeechCorrectionList","SpeechInputToggle","SpellCheck","SplitScreenToggle","Standby","Subtitle","Super","Super","Suspend","Symbol","SymbolLock","TV","TV3DMode","TVAntennaCable","TVAudioDescription","TVAudioDescriptionMixDown","TVAudioDescriptionMixUp","TVContentsMenu","TVDataService","TVInput","TVInputComponent1","TVInputComponent2","TVInputComposite1","TVInputComposite2","TVInputHDMI1","TVInputHDMI2","TVInputHDMI3","TVInputHDMI4","TVInputVGA1","TVMediaContext","TVNetwork","TVNumberEntry","TVPower","TVRadioService","TVSatellite","TVSatelliteBS","TVSatelliteCS","TVSatelliteToggle","TVTerrestrialAnalog","TVTerrestrialDigital","TVTimer","Tab","Tab","Teletext","Turbo","Undo","Undo","Unidentified","Unidentified","VideoModeNext","VoiceDial","WakeUp","WakeUp","Wink","Zenkaku","ZenkakuHankaku","ZoomIn","ZoomOut","ZoomToggle","ZoomToggle","action","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","complement","contains","cursorx","cursory","default","default","default","default","default","default","delta","difference","empty","eq","eq","eq","eq","eq","eq","eq","eq","equals","equals","equals","equals","equals","equals","equals","event","export","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame_delta","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_str","from_str","hash","hash","hash","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","is_all","is_empty","left","legacy_charcode","legacy_keycode","middle","new","new","not","null_value","null_value","null_value","null_value","null_value","null_value","on_action","partial_cmp","pos_down","pos_up","pressed","pressed_actions","previous_cursorx","previous_cursory","released","remove","right","set","state","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string_local","to_string_local","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Auto","BoundingBox","Column","GeoChanged","HEIGHT_CHANGED","LayoutType","POSX_CHANGED","POSY_CHANGED","ParentDirected","Percentage","Pixels","PositionType","Row","SelfDirected","Stretch","Units","WIDTH_CHANGED","all","as_any","as_any","as_any","as_any","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","bottom_left","bottom_right","bounds","center","center_bottom","center_left","center_right","center_top","clamp","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","complement","contains","contains","default","default","default","default","difference","empty","eq","eq","eq","eq","equals","equals","equals","equals","expand","expand_horizontal","expand_vertical","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_min_max","from_name","get_val","get_val","get_val","h","height","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into_iter","is_all","is_auto","is_empty","is_percentage","is_pixels","is_stretch","iter","iter_names","left","not","null_value","null_value","null_value","null_value","parse","parse","parse","remove","right","same","same","same","set","set_or_bind","set_or_bind","set_or_bind","shrink","shrink_horizontal","shrink_sides","shrink_vertical","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_px","to_px_clamped","to_string","to_string_local","toggle","top","top_left","top_right","transform","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","vzip","vzip","vzip","vzip","vzip","w","width","x","y","BoundingBox","h","w","x","y","Localized","ToStringLocalized","arg","arg_const","as_any","borrow","borrow_mut","clone","clone_into","eq","equals","from","get_val","into","map","new","same","set_or_bind","to_owned","to_string_local","to_string_local","try_from","try_into","type_id","vzip","Model","build","event","name","AbilityModifiers","AccessibilityModifiers","ActionModifiers","BoxShadowBuilder","HideTooltip","LayoutModifiers","LinearGradientBuilder","ShowTooltip","StyleModifiers","TextModifiers","TooltipEvent","TooltipModel","WindowModifiers","add_stop","always_on_top","backdrop_filter","background_color","background_gradient","background_image","blur","border_bottom_left_radius","border_bottom_left_shape","border_bottom_right_radius","border_bottom_right_shape","border_color","border_corner_shape","border_radius","border_top_left_radius","border_top_left_shape","border_top_right_radius","border_top_right_shape","border_width","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","box_shadow","caret_color","checkable","checked","child_bottom","child_left","child_right","child_space","child_top","class","clip_path","clone","clone","clone_into","clone_into","col_between","color","color","cursor","decorations","default","default","default_action_verb","disabled","display","event","fmt","fmt","focusable","focused","font_family","font_size","font_stretch","font_style","font_weight","from","from","from","from","get_val","get_val","height","hidden","hoverable","icon","id","inner_size","inset","into","into","into","into","layout_type","left","live","max_bottom","max_height","max_inner_size","max_left","max_right","max_size","max_space","max_top","max_width","maximized","min_bottom","min_height","min_inner_size","min_left","min_right","min_size","min_space","min_top","min_width","minimized","name","navigable","new","new","null_value","null_value","numeric_value","on_double_click","on_drag","on_drop","on_focus_in","on_focus_out","on_geo_changed","on_hover","on_hover_out","on_mouse_down","on_mouse_move","on_mouse_up","on_over","on_over_out","on_press","on_press_down","opacity","outline_color","outline_offset","outline_width","overflow","overflowx","overflowy","pointer_events","position","position_type","read_only","read_write","resizable","right","role","rotate","row_between","scale","selection_color","set_or_bind","set_or_bind","size","space","spread","text","text_align","text_value","text_wrap","title","to_owned","to_owned","toggle_class","tooltip","tooltip_model_derived_lenses","tooltip_visible","top","transform","transform_origin","translate","transparent","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","visibility","visible","vsync","vzip","vzip","vzip","vzip","width","with_direction","x_offset","y_offset","z_index","as_any","as_any","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","equals","equals","fmt","fmt","from","from","get_val","get_val_fallible","hash","hash","into","into","new","new","root","set_or_bind","to_owned","to_owned","tooltip_visible","try_from","try_from","try_into","try_into","type_id","type_id","view","view","vzip","vzip","DropWhenNoObservers","DropWhenUnusedForOneFrame","Forever","ImageRetentionPolicy","as_any","borrow","borrow_mut","clone","clone_into","eq","equals","from","into","to_owned","try_from","try_into","type_id","vzip","ALICEBLUE","ANTIQUEWHITE","AQUA","AQUAMARINE","AZURE","Alias","AllScroll","Angle","Angle","Arrow","Auto","Auto","BEIGE","BISQUE","BLACK","BLANCHEDALMOND","BLUE","BLUEVIOLET","BROWN","BURLYWOOD","BackgroundImage","BackgroundSize","Bevel","Black","Blur","Bold","BorderCornerShape","Bottom","BoxShadow","CADETBLUE","CHARTREUSE","CHOCOLATE","CORAL","CORNFLOWERBLUE","CORNSILK","CRIMSON","CYAN","Calc","Cell","Center","Center","Center","Ch","ClipPath","Cm","ColResize","Color","Condensed","Contain","ContextMenu","Copy","Corner","Cover","Crosshair","CssRule","CurrentColor","Cursive","CursorIcon","DARKBLUE","DARKCYAN","DARKGOLDENROD","DARKGRAY","DARKGREEN","DARKGREY","DARKKHAKI","DARKMAGENTA","DARKOLIVEGREEN","DARKORANGE","DARKORCHID","DARKRED","DARKSALMON","DARKSEAGREEN","DARKSLATEBLUE","DARKSLATEGRAY","DARKSLATEGREY","DARKTURQUOISE","DARKVIOLET","DEEPPINK","DEEPSKYBLUE","DIMGRAY","DIMGREY","DODGERBLUE","Default","Deg","DemiBold","Display","EResize","Em","End","EwResize","Ex","Expanded","Explicit","ExtraBlack","ExtraBold","ExtraCondensed","ExtraExpanded","ExtraLight","FIREBRICK","FLORALWHITE","FORESTGREEN","FUCHSIA","Fantasy","Filter","Flex","FontFamily","FontSize","FontStretch","FontStyle","FontWeight","FontWeightKeyword","GAINSBORO","GHOSTWHITE","GOLD","GOLDENROD","GRAY","GREEN","GREENYELLOW","GREY","Generic","GenericFontFamily","Grab","Grabbing","Grad","Gradient","Gradient","Gradient","HONEYDEW","HOTPINK","Hairline","Hand","Heavy","Help","Hidden","Hidden","Horizontal","HorizontalPosition","HorizontalPositionKeyword","INDIANRED","INDIGO","IVORY","Ignored","Image","ImageOrGradient","In","Italic","Justify","KHAKI","Keyframes","LAVENDER","LAVENDERBLUSH","LAWNGREEN","LEMONCHIFFON","LIGHTBLUE","LIGHTCORAL","LIGHTCYAN","LIGHTGOLDENRODYELLOW","LIGHTGRAY","LIGHTGREEN","LIGHTGREY","LIGHTPINK","LIGHTSALMON","LIGHTSEAGREEN","LIGHTSKYBLUE","LIGHTSLATEGRAY","LIGHTSLATEGREY","LIGHTSTEELBLUE","LIGHTYELLOW","LIME","LIMEGREEN","LINEN","Left","Left","Length","Length","Length","Length","LengthOrPercentage","LengthValue","Light","LineDirection","Linear","LinearGradient","MAGENTA","MAROON","MEDIUMAQUAMARINE","MEDIUMBLUE","MEDIUMORCHID","MEDIUMPURPLE","MEDIUMSEAGREEN","MEDIUMSLATEBLUE","MEDIUMSPRINGGREEN","MEDIUMTURQUOISE","MEDIUMVIOLETRED","MIDNIGHTBLUE","MINTCREAM","MISTYROSE","MOCCASIN","Matrix","Matrix","Medium","Mm","Monospace","Move","NAVAJOWHITE","NAVY","NResize","Named","NeResize","NeswResize","NoDrop","None","None","None","None","None","Normal","Normal","Normal","NotAllowed","NsResize","NwResize","NwseResize","OLDLACE","OLIVE","OLIVEDRAB","ORANGE","ORANGERED","ORCHID","Oblique","Opacity","Overflow","PALEGOLDENROD","PALEGREEN","PALETURQUOISE","PALEVIOLETRED","PAPAYAWHIP","PEACHPUFF","PERU","PINK","PLUM","POWDERBLUE","PURPLE","PX_PER_CM","PX_PER_IN","PX_PER_MM","PX_PER_PC","PX_PER_PT","PX_PER_Q","Pc","Percentage","PointerEvents","Position","Progress","Property","Pt","Px","Q","REBECCAPURPLE","RED","REDRAW","REFLOW","RELAYOUT","RESTYLE","RGBA","RGBA","ROSYBROWN","ROYALBLUE","Rad","Radial","Regular","Rem","Right","Right","Rotate","Round","RowResize","SADDLEBROWN","SALMON","SANDYBROWN","SEAGREEN","SEASHELL","SIENNA","SILVER","SKYBLUE","SLATEBLUE","SLATEGRAY","SLATEGREY","SNOW","SPRINGGREEN","SResize","STEELBLUE","SansSerif","Scale","Scale","ScaleX","ScaleY","SeResize","SemiBold","SemiCondensed","SemiExpanded","Serif","Shape","Side","Side","Skew","SkewX","SkewY","Start","Style","Style","SwResize","SystemFlags","TAN","TEAL","THISTLE","TOMATO","TRANSPARENT","TURQUOISE","Text","TextAlign","Thin","Top","Transform","Transition","Translate","Translate","TranslateX","TranslateY","Turn","UltraBlack","UltraBold","UltraCondensed","UltraExpanded","UltraLight","Url","VIOLET","Value","Vertical","VerticalPosition","VerticalPositionKeyword","VerticalText","Vh","Visibility","Visible","Visible","Vmax","Vmin","Vw","WHEAT","WHITE","WHITESMOKE","WResize","Wait","YELLOW","YELLOWGREEN","ZoomIn","ZoomOut","a","a","a","add","add","add","aliceblue","all","alpha","antiquewhite","aqua","aquamarine","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","azure","b","b","b","beige","bisque","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","black","blanchedalmond","blue","blue","blueviolet","blur_radius","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brown","burlywood","c","cadetblue","center","chartreuse","chocolate","clear_style_rules","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color","complement","contains","coral","cornflowerblue","cornsilk","crimson","cyan","d","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_action_verb","delay","difference","dimgray","dimgrey","direction","dodgerblue","duration","e","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","extend","f","firebrick","floralwhite","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forestgreen","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","fuchsia","g","g","gainsboro","get_rgba","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","ghostwhite","gold","goldenrod","gray","green","green","greenyellow","grey","hidden","honeydew","hotpink","hsl","hsla","indianred","indigo","insert","inset","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","is_all","is_center","is_empty","is_gradient","is_zero","iter","iter_names","ivory","khaki","labelled_by","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","live","logical_to_physical","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","mul","mul","mul","name","navajowhite","navy","needs_access_update","needs_access_update","needs_redraw","needs_relayout","needs_restyle","needs_text_layout","new","new","new","new","new","new","not","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","numeric_value","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","peachpuff","peru","physical_to_logical","pink","plum","powderblue","property","purple","px","px","r","r","rebeccapurple","red","red","remove","remove","rgb","rgb","rgba","rgba","role","rosybrown","royalblue","saddlebrown","salmon","same","same","same","same","same","same","sandybrown","scale_factor","seagreen","seashell","set","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","should_redraw","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","spread_radius","springgreen","steelblue","stops","sub","sub_assign","symmetric_difference","tan","teal","text_value","thistle","timing_function","to_degrees","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_pixels","to_px","to_px","to_radians","to_string","to_string_local","to_unit_value","toggle","tomato","transparent","try_add","try_add","try_add","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","turquoise","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","violet","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wheat","white","whitesmoke","x","x","x","x_offset","y","y","y","y_offset","yellow","yellowgreen","zero","height","width","horizontal","vertical","CSS","IntoCssStr","Path","String","borrow","borrow_mut","from","from","from","from_file","from_string","get_style","get_style","into","try_from","try_into","type_id","vzip","Align","Alphabetic","Atlas","Atop","Baseline","Bevel","BlendFactor","Bottom","Butt","Canvas","Center","Color","CompositeOperation","CompositeOperationState","Copy","DestinationAtop","DestinationIn","DestinationOut","DestinationOver","DrawCommand","DstAlpha","DstColor","ErrorKind","EvenOdd","FLIP_Y","Fill","FillRule","FontId","FontInfoExtracionError","FontMetrics","FontParseError","FontSizeTooLargeForAtlas","GENERATE_MIPMAPS","GaussianBlur","GeneralError","GlyphDrawCommands","Gray","Gray8","Hole","Image","Image","ImageError","ImageFilter","ImageFlags","ImageId","ImageIdNotFound","ImageInfo","ImageSource","ImageUpdateOutOfBounds","ImageUpdateWithDifferentFormat","IoError","Left","Lighter","LineCap","LineJoin","Middle","Miter","NEAREST","NativeTexture","NoFontFound","NonZero","One","OneMinusDstAlpha","OneMinusDstColor","OneMinusSrcAlpha","OneMinusSrcColor","PREMULTIPLIED","Paint","Path","PixelFormat","Quad","REPEAT_X","REPEAT_Y","RenderMode","RenderTarget","RenderTargetError","Renderer","Rgb","Rgb8","Rgba","Rgba8","Right","Round","Round","Screen","ShaderCompileError","ShaderLinkError","Solid","Solidity","SourceIn","SourceOut","SourceOver","Square","SrcAlpha","SrcAlphaSaturate","SrcColor","Stroke","TextContext","TextMetrics","Top","Transform2D","UnknownError","UnsuportedImageFromat","Xor","Zero","a","add_font","add_font_dir","add_font_dir","add_font_file","add_font_mem","add_font_mem","add_rect","add_shared_font_with_index","all","alloc_image","alpha_glyphs","anti_alias","arc","arc_to","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","ascender","average_scale","b","bezier_to","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","black","bold","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","box_gradient","break_text","break_text","break_text_vec","break_text_vec","cache_key","circle","clear_rect","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","close","cmp","cmp","cmp","color","color_glyphs","complement","contains","contains_point","create_image","create_image_empty","create_image_from_native_texture","create_image_from_native_texture","curve_to","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","delete_image","delete_image","descender","difference","dimensions","draw_glyph_commands","drop","ellipse","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","expand","extend","fill_path","fill_rule","fill_text","filter_image","flags","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","font_size","format","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","g","get_image","get_image_mut","global_composite_blend_func","global_composite_blend_func_separate","global_composite_operation","glyphs","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","height","height","hex","hsl","hsla","identity","image","image_id","image_info","image_size","image_tint","index","index_mut","insert","intersect_scissor","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","inverse","inversed","is_all","is_black","is_empty","is_empty","italic","iter","iter_names","letter_spacing","line_cap_end","line_cap_start","line_join","line_to","line_to","line_width","linear_gradient","linear_gradient_stops","load_image_file","load_image_mem","measure_font","measure_font","measure_text","measure_text","miter_limit","move_to","move_to","multiply","new","new","new","new","new","new","new_translation","new_with_text_context","not","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","null_value","oblique","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path_bbox","premultiplied","premultiply","quad_to","quad_to","quads","r","radial_gradient","radial_gradient_stops","realloc_image","rect","regular","remove","render","renderer","reset","reset","reset_scissor","reset_transform","resize_shaped_words_cache","resize_shaping_run_cache","restore","rgb","rgba","rgbaf","rgbf","rotate","rotate","rounded_rect","rounded_rect_varying","s0","s1","save","save_with","scale","scale","scissor","screenshot","screenshot","set","set_alpha","set_alphaf","set_anti_alias","set_color","set_distance_tolerance","set_fill_rule","set_font","set_font_size","set_format","set_global_alpha","set_letter_spacing","set_line_cap","set_line_cap_end","set_line_cap_start","set_line_join","set_line_width","set_miter_limit","set_render_target","set_size","set_size","set_stencil_strokes","set_text_align","set_text_baseline","set_transform","size","size","size","skew_x","skew_x","skew_y","skew_y","solidity","stencil_strokes","stroke_path","stroke_text","sub","sub_assign","symmetric_difference","t0","t1","text_align","text_baseline","to_array","to_mat3x4","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string_local","toggle","transform","transform_point","translate","translate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","update_image","update_image","variable","verbs","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weight","white","width","width","width","width","with_anti_alias","with_blend_factors","with_color","with_fill_rule","with_font","with_font_size","with_letter_spacing","with_line_cap","with_line_cap_end","with_line_cap_start","with_line_join","with_line_width","with_miter_limit","with_stencil_strokes","with_text_align","with_text_baseline","x","x0","x1","y","y0","y1","sigma","A8","AnimationDecoder","Avif","Bgr8","Bgra8","Bmp","CHANNEL_COUNT","COLOR_MODEL","COLOR_TYPE","ColorType","DEFAULT_MAX_VALUE","DEFAULT_MIN_VALUE","Dds","Decoding","Delay","DynamicImage","EncodableLayout","Encoding","Err","ExtendedColorType","Farbfeld","FlatSamples","Frame","Frames","GenericImage","GenericImageView","Gif","GrayAlphaImage","GrayImage","Hdr","Ico","ImageBuffer","ImageDecoder","ImageDecoderRect","ImageEncoder","ImageError","ImageFormat","ImageLuma16","ImageLuma8","ImageLumaA16","ImageLumaA8","ImageOutputFormat","ImageResult","ImageRgb16","ImageRgb32F","ImageRgb8","ImageRgba16","ImageRgba32F","ImageRgba8","IoError","Jpeg","L1","L16","L16","L2","L4","L8","L8","La1","La16","La16","La2","La4","La8","La8","Limits","Luma","LumaA","Ok","OpenExr","Parameter","Pixel","Pixel","PixelWithColorType","Pixels","Png","Png","Pnm","Primitive","Progress","Qoi","Reader","Rgb","Rgb1","Rgb16","Rgb16","Rgb2","Rgb32F","Rgb32F","Rgb32FImage","Rgb4","Rgb8","Rgb8","RgbImage","Rgba","Rgba1","Rgba16","Rgba16","Rgba2","Rgba32F","Rgba32F","Rgba32FImage","Rgba4","Rgba8","Rgba8","RgbaImage","SubImage","Subpixel","Tga","Tiff","Unknown","Unsupported","Unsupported","WebP","apply","apply2","apply_with_alpha","apply_without_alpha","as_bytes","blend","blend_pixel","bounds","buffer","channels","channels4","channels_mut","codecs","color_hint","color_type","copy_from","copy_within","dimensions","dimensions","error","flat","from_channels","from_slice","from_slice_mut","get_pixel","get_pixel_mut","guess_format","height","icc_profile","image_dimensions","imageops","in_bounds","into_frames","into_reader","invert","io","layout","load","load_from_memory","load_from_memory_with_format","map","map2","map_with_alpha","map_without_alpha","math","open","original_color_type","pixels","put_pixel","read_image","read_image_with_progress","read_rect","read_rect_with_progress","samples","save_buffer","save_buffer_with_format","scanline_bytes","set_limits","sub_image","to_luma","to_luma_alpha","to_rgb","to_rgba","total_bytes","unsafe_get_pixel","unsafe_put_pixel","view","width","write_buffer_with_format","write_image","ConvertBuffer","EnumeratePixels","EnumeratePixelsMut","EnumerateRows","EnumerateRowsMut","Pixels","PixelsMut","Rows","RowsMut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","convert","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","len","len","len","len","len","len","len","len","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","png","Adaptive","ApngDecoder","Avg","Best","CompressionType","Default","Fast","FilterType","Huffman","NoFilter","Paeth","PngDecoder","PngEncoder","PngReader","Rle","Sub","Up","apng","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","color_type","default","default","dimensions","encode","eq","eq","equals","equals","fmt","fmt","from","from","from","from","from","from","icc_profile","into","into","into","into","into","into","into_frames","into_reader","is_apng","new","new","new_with_quality","null_value","null_value","read","read_image","read_to_end","scanline_bytes","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","with_limits","write_image","Color","Decoding","DecodingError","DimensionError","DimensionMismatch","Encoding","EncodingError","Err","Exact","FailedAlready","Format","Generic","GenericFeature","ImageError","ImageFormatHint","ImageResult","InsufficientMemory","IoError","LimitError","LimitErrorKind","Limits","Name","NoMoreData","Ok","Parameter","ParameterError","ParameterErrorKind","PathExtension","Unknown","Unsupported","Unsupported","UnsupportedError","UnsupportedErrorKind","as_any","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","equals","equals","equals","equals","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format_hint","format_hint","format_hint","from","from","from","from","from","from","from","from","from","from","from","from","from_format_and_kind","from_format_hint","from_format_hint","from_kind","from_kind","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","kind","kind","kind","new","new","source","source","source","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string_local","to_string_local","to_string_local","to_string_local","to_string_local","to_string_local","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","limits","supported","ChannelCountMismatch","ColumnMajorPacked","Error","FlatSamples","ImagePacked","NormalForm","NormalFormRequired","PixelPacked","RowMajorPacked","SampleLayout","TooLarge","Unaliased","View","ViewMut","WrongColor","as_any","as_any","as_any","blend_pixel","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","bounds","channel_stride","channels","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","color_hint","column_major_packed","dimensions","dimensions","eq","eq","eq","equals","equals","equals","extents","fits","flat","flat","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_mut_sample","get_mut_sample","get_pixel","get_pixel","get_pixel_mut","get_sample","get_sample","has_aliased_samples","hash","hash","hash","height","height_stride","image_mut_slice","image_mut_slice","image_slice","image_slice","in_bounds","in_bounds","in_bounds","in_bounds_index","index","index_ignoring_bounds","into","into","into","into","into","into_inner","into_inner","is_normal","layout","min_length","min_length","min_length","partial_cmp","put_pixel","row_major_packed","samples","samples","samples","shrink_to","shrink_to","shrink_to","strides_cwh","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string_local","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_upgrade","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","width","width_stride","BiLevel","CatmullRom","Color","ColorMap","FilterType","Gaussian","Lanczos3","Nearest","Triangle","as_any","blur","borrow","borrow","borrow_mut","borrow_mut","brighten","clone","clone","clone_into","clone_into","colorops","contrast","crop","crop_imm","dither","eq","equals","filter3x3","flip_horizontal","flip_horizontal_in","flip_horizontal_in_place","flip_vertical","flip_vertical_in","flip_vertical_in_place","fmt","from","from","grayscale","grayscale_alpha","grayscale_with_type","grayscale_with_type_alpha","has_lookup","has_lookup","horizontal_gradient","huerotate","index_colors","index_of","index_of","interpolate_bilinear","interpolate_nearest","into","into","invert","lookup","lookup","map_color","map_color","overlay","overlay_bounds","replace","resize","rotate180","rotate180_in","rotate180_in_place","rotate270","rotate270_in","rotate90","rotate90_in","sample_bilinear","sample_nearest","thumbnail","tile","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unsharpen","vertical_gradient","vzip","vzip","BiLevel","Color","ColorMap","brighten","brighten_in_place","contrast","contrast_in_place","dither","grayscale","grayscale_alpha","grayscale_with_type","grayscale_with_type_alpha","has_lookup","huerotate","huerotate_in_place","index_colors","index_of","invert","lookup","map_color","LimitSupport","Limits","Reader","as_any","as_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_dimensions","check_support","clear_format","clone","clone","clone_into","clone_into","decode","default","default","eq","eq","equals","equals","fmt","fmt","format","free","free_usize","from","from","from","hash","hash","into","into","into","into_dimensions","into_inner","limits","max_alloc","max_image_height","max_image_width","new","no_limits","no_limits","null_value","null_value","open","reserve","reserve_usize","set_format","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_format","with_guessed_format","Rect","as_any","borrow","borrow_mut","clone","clone_into","eq","equals","fmt","from","hash","height","into","to_owned","try_from","try_into","type_id","vzip","width","x","y","Img","ImgExt","ImgExtMut","ImgRef","ImgRefMut","ImgVec","PixelsIter","PixelsIterMut","PixelsRefIter","RowsIter","RowsIterMut","as_any","as_contiguous_buf","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buf","buf","buf","buf","buf","buf_mut","clone","clone_into","count","count","eq","eq","eq","eq","eq","eq","eq","equals","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","hash","hash","hash","height","height","height","height","height","height_padded","height_padded","index","index","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","into","into","into","into","into","into","into_buf","into_contiguous_buf","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_owned","len","len","map_buf","new","new_buf","new_stride","next","next","next","next","next","next_back","next_back","nth","nth","pixels","pixels","pixels","pixels_mut","pixels_mut","pixels_ref","rows","rows","rows","rows_mut","rows_mut","rows_padded","rows_padded","rows_padded_mut","rows_padded_mut","size_hint","size_hint","size_hint","stride","stride","stride","stride","stride","sub_image","sub_image","sub_image","sub_image_mut","sub_image_mut","to_contiguous_buf","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","width","width","width","width","width","width_padded","width_padded","ClearRect","Command","CommandType","ConcaveFill","ConvexFill","Drawable","FillColor","FillGradient","FillImage","FillImageGradient","FilterImage","Image","Image","NativeTexture","OpenGl","RenderFilteredImage","RenderTarget","Renderer","Screen","SetRenderTarget","ShaderType","Stencil","StencilStroke","Stroke","TextureCopyUnclipped","Triangles","Vertex","Void","alloc_image","alloc_image","alloc_image","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","create_image_from_native_texture","create_image_from_native_texture","create_image_from_native_texture","default","default","default","delete_image","delete_image","delete_image","drop","eq","eq","equals","equals","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","into","into","into","into","into","into","into","is_opengles","new","new","new_from_function","new_from_function_cstr","null_value","null_value","null_value","partial_cmp","render","render","render","screenshot","screenshot","screenshot","set","set_screen_target","set_size","set_size","set_size","to_f32","to_owned","to_owned","to_owned","to_u8","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u","update_image","update_image","update_image","v","vzip","vzip","vzip","vzip","vzip","vzip","vzip","x","y","color","fill_params","filter","height","params","params","params","params1","params2","stencil_params","target_image","width","x","y","AsPixels","ColorComponentMap","ComponentBytes","ComponentMap","ComponentSlice","FromSlice","Pod","RGB","RGB16","RGB8","RGBA","RGBA16","RGBA8","Zeroable","a","a","a","add","add","add","add","add_assign","add_assign","add_assign","add_assign","alpha","alpha","alt","as_any","as_any","as_bgr","as_bgr_mut","as_bgra","as_bgra_mut","as_bytes","as_bytes_mut","as_gray","as_gray_alpha","as_gray_alpha_mut","as_gray_mut","as_mut","as_mut","as_mut_slice","as_mut_slice","as_mut_slice","as_pixels","as_pixels_mut","as_ref","as_ref","as_rgb","as_rgb_mut","as_rgba","as_rgba_mut","as_slice","as_slice","as_slice","b","b","b","b","b","b","bgr","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","default","div","div","div_assign","div_assign","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","eq","eq","equals","equals","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","g","g","g","g","g","g","hash","hash","into","into","into","into","into","into","is_valid_bit_pattern","is_valid_bit_pattern","iter","iter","map","map","map","map_alpha","map_c","map_c","map_c","map_rgb","mul","mul","mul","mul_assign","mul_assign","mul_assign","new","new","new_alpha","new_alpha","null_value","null_value","partial_cmp","partial_cmp","r","r","r","r","r","r","rgb","rgb_mut","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","to_owned","to_owned","to_string","to_string","to_string_local","to_string_local","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","zeroed","BGR","BGR16","BGR8","BGRA","BGRA16","BGRA8","GRAY16","GRAY8","GRAYA16","GRAYA8","Gray","GrayAlpha","a","a","a","add","add","add","add","add_assign","add_assign","add_assign","add_assign","alpha","alpha","alpha","as_any","as_any","as_any","as_any","as_mut","as_mut","as_mut_slice","as_mut_slice","as_mut_slice","as_mut_slice","as_ref","as_ref","as_slice","as_slice","as_slice","as_slice","b","b","b","b","b","b","bgr","bgr_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","default","default","default","default","deref","div","div","div_assign","div_assign","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","eq","eq","eq","eq","equals","equals","equals","equals","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","g","g","g","g","g","g","gray","gray_mut","hash","hash","hash","hash","into","into","into","into","into","into","into","into","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","iter","iter","map","map","map","map","map_alpha","map_alpha","map_c","map_c","map_c","map_c","map_gray","map_rgb","mul","mul","mul","mul_assign","mul_assign","mul_assign","new","new","new","new","new_alpha","new_alpha","null_value","null_value","null_value","null_value","partial_cmp","partial_cmp","partial_cmp","partial_cmp","r","r","r","r","r","r","rgb","rgb_mut","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string_local","to_string_local","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Canvas","Handle","View","accessibility","bar_color","bind","borrow","borrow_mut","bounds","build","change_page_on_select","context","data","describing","draw","element","entity","event","from","into","keyboard_fraction","keyboard_fraction","lock_focus_to_within","modify","needs_redraw","needs_relayout","needs_restyle","on_blur","on_blur","on_blur","on_build","on_cancel","on_change","on_change","on_change","on_change","on_change","on_changing","on_changing","on_changing","on_clear","on_close","on_decrement","on_decrement","on_double_click","on_drag","on_drop","on_edit","on_focus_in","on_focus_out","on_geo_changed","on_hover","on_hover_out","on_increment","on_increment","on_mouse_down","on_mouse_move","on_mouse_up","on_over","on_over_out","on_press","on_press_down","on_scroll","on_select","on_select","on_select","on_select","on_select","on_submit","on_toggle","on_toggle","parent","placeholder","range","range","scale_factor","scroll_to_cursor","scroll_to_cursor","scroll_to_cursor","show_controls","step","tooltip","try_from","try_into","type_id","validate","value","value","vzip","with_selected","AM","AMOrPM","AnalogTimepicker","AnalogTimepickerEvent","AnalogTimepickerPage","ArcTrack","Binding","Blur","Button","Checkbox","Chevrons","ChildGeo","Chip","Clear","Close","Close","Close","CloseAll","ComboBox","ComboBoxEvent","ComboPopup","Continuous","Copy","Cut","Datepicker","DayTime","Decrement","DecrementHour","DecrementMinutes","DeleteText","DigitalTimepicker","DigitalTimepickerEvent","Discrete","Drag","Dropdown","Element","EndEdit","HStack","Hit","Horizontal","Horizontal","Hours","HoverMenu","Icon","Image","Increment","IncrementHour","IncrementMinutes","InsertText","Knob","KnobMode","Label","List","MenuBar","MenuButton","MenuDivider","MenuEvent","MenuIsOpen","MenuPopup","Minutes","MoveCursor","NamedSlider","Notification","Open","Open","Orientation","PM","ParentGeo","Paste","PickList","PlusMinus","Popup","PopupData","PopupEvent","ProgressBar","RadioButton","Rating","Scroll","ScrollData","ScrollEvent","ScrollView","ScrollX","ScrollY","Scrollbar","Seconds","SelectAll","SelectParagraph","SelectWord","SetFilterText","SetHour","SetHours","SetHovered","SetMinutes","SetMinutes","SetNumItems","SetOnScroll","SetOption","SetPage","SetPlaceholder","SetScrollY","SetSeconds","SetX","SetY","SetZone","Slider","Spinbox","SpinboxEvent","SpinboxIcons","SpinboxKind","StartEdit","Submenu","Submit","Switch","Switch","TabPair","TabView","TextEvent","Textbox","TickKnob","Ticks","Timepicker","ToggleAMOrPM","ToggleAMOrPM","ToggleCaret","ToggleOpen","Tooltip","VStack","Vertical","Vertical","VirtualList","VirtualListEvent","ZStack","accessibility","accessibility","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","combo_box_derived_lenses","container_height","container_width","content","custom","custom","custom","custom","default","default","default","draw","draw","draw","draw","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","header","horizontal","hour","inner_height","inner_width","intermediate","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_open","menu_bar_derived_lenses","menu_button_derived_lenses","minutes","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_multiline","normalized_map","null_value","null_value","null_value","on_scroll","popup_data_derived_lenses","same","same","same","same","same","scroll_x","scroll_y","submenu_derived_lenses","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vertical","virtual_list_derived_lenses","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","zone","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","eq","eq","eq","eq","equals","equals","equals","equals","equals","equals","equals","equals","equals","filter_text","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","hash","hash","hovered","into","into","into","into","into","into","into","into","into","is_open","list_lens","new","new","new","new","new","new","new","new","new","on_select","p","placeholder","root","selected","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","view","view","view","view","view","view","view","view","view","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","as_any","as_any","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","equals","equals","fmt","fmt","from","from","get_val","get_val_fallible","hash","hash","into","into","is_open","new","new","root","set_or_bind","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","view","view","vzip","vzip","as_any","borrow","borrow_mut","clone","clone_into","eq","equals","fmt","from","hash","into","new","root","to_owned","try_from","try_into","type_id","view","vzip","DecibelMap","DisplayDecimals","Five","Four","Frequency","FrequencyDisplayMode","FrequencyMap","GenericMap","HzThenKHz","IntMap","Linear","NormalizedMap","One","OnlyHz","Power","Three","Two","ValueScaling","Zero","amplitude_to_db","amplitude_to_normalized","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clamp_db","clamp_hz","clamp_int","clamp_value","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","db_to_amplitude","db_to_normalized","default","default","display_value","eq","eq","eq","equals","equals","equals","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hz_to_normalized","int_to_normalized","into","into","into","into","into","into","into","max","max","max_db","max_hz","min","min","min_db","min_hz","new","new","new","new","normalized_to_amplitude","normalized_to_db","normalized_to_display","normalized_to_display","normalized_to_display","normalized_to_display","normalized_to_display","normalized_to_hz","normalized_to_int","normalized_to_value","normalized_to_value","null_value","null_value","snap","snap","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value_scaling","value_scaling","value_scaling","value_to_normalized","value_to_normalized","vzip","vzip","vzip","vzip","vzip","vzip","vzip","over_1k","under_1k","as_any","as_any","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","equals","equals","fmt","fmt","from","from","get_val","get_val","get_val_fallible","get_val_fallible","hash","hash","into","into","is_open","new","new","root","set_or_bind","set_or_bind","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","view","view","vzip","vzip","as_any","as_any","as_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","eq","eq","eq","equals","equals","equals","fmt","fmt","fmt","from","from","from","get_val","get_val","get_val_fallible","get_val_fallible","hash","hash","hash","into","into","into","is_open","new","new","new","open_on_hover","root","set_or_bind","set_or_bind","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","view","view","view","vzip","vzip","vzip","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","eq","eq","eq","equals","equals","equals","equals","equals","equals","equals","equals","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_val","get_val","get_val","get_val","get_val","get_val","get_val_fallible","get_val_fallible","get_val_fallible","get_val_fallible","get_val_fallible","get_val_fallible","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","item_height","new","new","new","new","new","new","new","new","num_items","offset","on_change","root","scroll_to_cursor","scrolly","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","view","view","view","view","view","view","view","view","visible_items","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ActionRequest","CharInput","Debug","Drop","DropData","File","FocusIn","FocusNext","FocusOut","FocusPrev","GeometryChanged","GrabCursor","Id","KeyDown","KeyUp","MouseCaptureEvent","MouseCaptureOutEvent","MouseDoubleClick","MouseDown","MouseEnter","MouseLeave","MouseMove","MouseOut","MouseOver","MouseScroll","MouseTripleClick","MouseUp","Press","PressDown","Redraw","Relayout","ReloadStyles","Restyle","SetAlwaysOnTop","SetCursor","SetCursorPosition","SetDecorations","SetMaxSize","SetMaximized","SetMinSize","SetMinimized","SetPosition","SetResizable","SetSize","SetTitle","SetVisible","ThemeChanged","WindowClose","WindowEvent","WindowModifiers","always_on_top","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decorations","fmt","fmt","from","from","from","from","icon","inner_size","into","into","max_inner_size","maximized","min_inner_size","minimized","position","resizable","title","to_owned","to_owned","transparent","try_from","try_from","try_into","try_into","type_id","type_id","visible","vsync","vzip","vzip","mouse","mouse"],"q":[[0,"vizia"],[54,"vizia::binding"],[284,"vizia::context"],[626,"vizia::environment"],[706,"vizia::environment::environment_derived_lenses"],[785,"vizia::environment::theme_derived_lenses"],[842,"vizia::events"],[991,"vizia::events::WindowEvent"],[993,"vizia::fonts"],[997,"vizia::icons"],[1261,"vizia::image"],[2007,"vizia::input"],[2731,"vizia::layout"],[2926,"vizia::layout::bounds"],[2931,"vizia::localization"],[2956,"vizia::model"],[2960,"vizia::modifiers"],[3162,"vizia::modifiers::tooltip_model_derived_lenses"],[3203,"vizia::resource"],[3221,"vizia::style"],[4679,"vizia::style::BackgroundSize"],[4681,"vizia::style::LineDirection"],[4683,"vizia::util"],[4701,"vizia::vg"],[5551,"vizia::vg::ImageFilter"],[5552,"vizia::vg::img"],[5736,"vizia::vg::img::buffer"],[5866,"vizia::vg::img::codecs"],[5867,"vizia::vg::img::codecs::png"],[5967,"vizia::vg::img::error"],[6146,"vizia::vg::img::error::LimitErrorKind"],[6148,"vizia::vg::img::flat"],[6292,"vizia::vg::img::imageops"],[6376,"vizia::vg::img::imageops::colorops"],[6396,"vizia::vg::img::io"],[6465,"vizia::vg::img::math"],[6486,"vizia::vg::imgref"],[6667,"vizia::vg::renderer"],[6814,"vizia::vg::renderer::CommandType"],[6828,"vizia::vg::rgb"],[7039,"vizia::vg::rgb::alt"],[7256,"vizia::view"],[7346,"vizia::views"],[8224,"vizia::views::combo_box_derived_lenses"],[8395,"vizia::views::menu_bar_derived_lenses"],[8436,"vizia::views::menu_button_derived_lenses"],[8455,"vizia::views::normalized_map"],[8611,"vizia::views::normalized_map::FrequencyDisplayMode"],[8613,"vizia::views::popup_data_derived_lenses"],[8657,"vizia::views::submenu_derived_lenses"],[8720,"vizia::views::virtual_list_derived_lenses"],[8890,"vizia::window"],[8980,"vizia::window::WindowEvent"],[8982,"alloc::vec"],[8983,"vizia_window::window_description"],[8984,"core::convert"],[8985,"core::option"],[8986,"core::ops::function"],[8987,"core::ops::function"],[8988,"alloc::string"],[8989,"core::result"],[8990,"core::any"],[8991,"core::clone"],[8992,"core::default"],[8993,"core::fmt"],[8994,"core::fmt"],[8995,"core::hash"],[8996,"core::convert"],[8997,"vizia_core::animation::animation_id"],[8998,"core::convert"],[8999,"core::time"],[9000,"unic_langid_impl"],[9001,"cosmic_text::attrs"],[9002,"core::any"],[9003,"alloc::string"],[9004,"alloc::boxed"],[9005,"vizia_core::animation::animation_id"],[9006,"raw_window_handle"],[9007,"std::time"],[9008,"accesskit"],[9009,"core::ops::deref"],[9010,"core::convert"],[9011,"core::cmp"],[9012,"std::ffi::os_str"],[9013,"std::path"],[9014,"core::ops::index"],[9015,"core::ops::index"],[9016,"std::io"],[9017,"core::cmp"],[9018,"vizia_input::chord"],[9019,"core::iter::traits::collect"],[9020,"vizia_style::values::length::pixels"],[9021,"vizia_style::values::keywords::auto"],[9022,"vizia_style::values::stretch"],[9023,"vizia_style::values::basic::percentage"],[9024,"bitflags::iter"],[9025,"bitflags::iter"],[9026,"vizia_style::error"],[9027,"cssparser::parser"],[9028,"vizia_style::values::gradient"],[9029,"vizia_style::values::rect"],[9030,"vizia_style::values::border::border_radius"],[9031,"vizia_style::values::calc"],[9032,"cssparser::color"],[9033,"cssparser::color"],[9034,"vizia_style::values::position"],[9035,"vizia_style::values::border::border_width_value"],[9036,"vizia_style::values::number_or_percentage"],[9037,"vizia_style::values::easing"],[9038,"vizia_style::traits"],[9039,"std::path"],[9040,"femtovg::image"],[9041,"alloc::ffi::c_str"],[9042,"femtovg::geometry"],[9043,"femtovg::image"],[9044,"femtovg::path"],[9045,"std::io"],[9046,"std::io::buffered::bufreader"],[9047,"core::marker"],[9048,"core::slice::iter"],[9049,"core::slice::iter"],[9050,"core::ops::arith"],[9051,"core::cmp"],[9052,"core::convert"],[9053,"vizia_core::views::scrollview::scroll_data_derived_lenses"]],"d":["Creating a new application creates a root <code>Window</code> and a …","","","","","","Data binding provides a way to link views to model data so …","","","Context types for retained state, used during view …","","A model for system specific state which can be accessed by …","Events for communicating state change to views and models.","","Returns the argument unchanged.","Returns a <code>ContextProxy</code> which can be used to send events …","","A collection of codepoints for built-in icons.","Sets the default built-in theming to be ignored.","Contains types and functions used for loading and …","","","Types used for handling input events such as mouse and …","Calls <code>U::from(self)</code>.","Vizia uses morphorm for layout.","Provides types for adapting an application to a particular …","","","","","Models are used to store application data and can be bound …","Methods on views for changing their properties or for …","","Takes a closure which will be called at the end of every …","","","Resource management for fonts, themes, images, and …","Starts the application and enters the main event loop.","","","Styling determines the appearance of a view.","","","","","","","Contains types and functions used for custom drawing …","Views are used to visually present model data and to act …","Built-in views provided by vizia.","","","","Window management and system events.","","A view with a binding which rebuilds its contents when the …","A trait for fast comparisons of data. Implemented by any …","","","A Lens allows the construction of a reference to a piece …","Helpers for constructing more complex <code>Lens</code>es.","","","","","","","A trait which allows passing a value or a lens to a view …","","","","","","<code>Lens</code> composed of two lenses joined together","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Retrieve a copy of the lensed data from context. This will …","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Used to construct a lens to some data contained within …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A context used for configuring the accessibility features …","Wrapper around an accesskit node builder, a node id, and a …","","The main storage and control object for a Vizia …","A bundle of data representing a snapshot of the context …","A trait for any Context-like object that lets you access …","A context used when drawing.","","A context used when handling events.","The event loop has been closed; the application is exiting.","","","","Errors that might occur when emitting an event via a …","A context used when loading images.","Trait for querying properties of the tree from a context.","The current runtime does not support proxying events.","","Adds a child accessibility node.","","Adds a global listener to the application.","Add a listener to an entity.","Add a listener to an entity.","","Adds a timer to the application.","Adds a timer to the application.","","","","Returns the background color of the view.","","","Returns the border radius for the bottom-left corner of …","Returns the border corner shape for the top-left corner of …","Returns the border radius for the bottom-right corner of …","Returns the border corner shape for the top-left corner of …","","Returns the border radius for the top-left corner of the …","Returns the border corner shape for the top-left corner of …","Returns the border radius for the top-right corner of the …","Returns the border corner shape for the top-left corner of …","Returns the border width of the current view in physical …","Returns the border width of the current view in physical …","","","","","","","","","","","","","","","","","Returns the bounds of the current view.","Returns the bounds of the current view.","Returns the bounds of the current view.","","Get the vector path of the current view.","","Cancel a scheduled event before it is sent.","","","Capture mouse input for the current view.","","Returns the child-bottom space of the current view.","Returns the child-left space of the current view.","Returns the child-right space of the current view.","Returns the child-top space of the current view.","Returns the bounding box of the clip region of the current …","Returns the clip bounds of the current view.","","","Returns the Entity id of the current view.","The “current” entity, generally the entity which is …","","Get model/view data from the context. Returns <code>None</code> if the …","","","","","Returns the lookup pattern to pick the default font.","Returns the display of the current view.","Draw backdrop filters for the current view.","Draw background color or background image (including …","Draw the border of the current view.","Draw inset box shadows for the current view.","Draw the outline of the current view.","Draw non-inset box shadows for the current view.","Draw any text for the current view.","","Draw text caret for the current view.","Draw the selection box for the text of the current view.","Send an event containing the provided message up the tree …","","","","Send a custom event with custom origin and propagation …","","","Send an event containing the provided message directly to …","","","","Returns a reference to the Environment model.","Returns a reference to the Environment model.","","Returns the id of the first_child of the current view.","","","","","Sets application focus to the current view using the …","Sets application focus to the current entity using the …","Moves the keyboard focus to the next navigable view.","","Sets application focus to the current view with the …","Sets application focus to the current entity with the …","Returns the currently focused view.","","Returns the font-size of the current view in physical …","Returns the font-size of the current view in physical …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the contents of the system clipboard.","","","","Returns the currently hovered view.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the current view is active.","Returns true if the current view is currently animating …","Returns true if the current view is checked.","Returns true if the cursor icon is locked.","Returns true if the current view is disabled.","","Returns true if the current view is focused.","Returns true if the current view is being hovered.","Returns true if the mouse cursor is over the current view.","","Returns true if the view is in a read-only state.","","Sets the view, by id name, which labels the current view …","","","","","Prevents the cursor icon from changing until the lock is …","Function to convert logical points to physical pixels.","Converts logical points to physical pixels.","","Returns a reference to the keyboard modifiers state.","Returns a reference to the keyboard modifiers state.","","Modifies the state of an existing timer with the provided …","Modifies the state of an existing timer with the provided …","Returns a reference to the mouse state.","Returns a reference to the mouse state.","","","Marks the current view as needing to be redrawn.","Mark the application as needing to rerun the draw method","Marks the current view as needing a layout computation.","Mark the application as needing to rerun layout …","","Mark the application as needing to recompute view styles","","","Creates a new context.","","","","","Sets a numeric value used for accessibility for the …","Returns the opacity of the current view.","Returns the outline color of the current view.","Returns the outline offset of the current view in physcial …","Returns the outline width of the current view in physical …","Returns the id of the parent of the current view.","","Function to convert physical pixels to logical points.","Convert physical pixels to logical points.","Trigger an animation with the given id to play on the …","Trigger an animation with the given id to play on a target …","","","","Release mouse input capture for the current view.","Reloads the stylesheets linked to the application.","Remove all user themes from the application.","Returns the Entity id associated with the given identifier.","Finds the entity that identifier identifies","Returns the scale factor.","Returns the scale factor.","Returns the scale factor of the display.","Send an event containing the provided message up the tree …","","","Send a custom event with custom origin and propagation …","","","Send an event containing the provided message directly to …","","","","","Set the active state for the current view.","Sets the backdrop filter of the current view.","","","","Sets the accessibility bounds of the node. This is not the …","","","","Sets the checked state of the current view.","Sets the clip path of the current view.","Set the contents of the system clipboard.","Sets the accessibility default action verb of the view.","Sets the global default font for the application.","Sets the display type of the current view.","","Sets whether the view should be explicitely hidden from …","Sets the hover state of the current view.","","","Sets the language used by the application for localization.","Sets the language used by the application for localization.","","Sets the view to be an accessibility live region.","","","Sets the accessibility name of the view.","","","","Sets the opacity of the current view.","Sets the overflow type on the horizontal axis of the …","Sets the overflow type on the vertical axis of the current …","","","","","","Sets the accessibility role of the view.","Sets the role of the node.","Sets the rotation of the current view.","Sets the scale of the current view.","Sets the text of the current view.","Sets the direction of any text within the node.","Sets the specified selection of any text within the node.","Sets the current theme mode.","","Sets the transform of the current view.","Sets the transform origin of the current view.","Sets the translation of the current view.","Change the user scale factor size. A …","Sets the valid state of the current view.","Sets the value of a node.","Sets the visibility of the current view.","Change the window size. A <code>WindowEvent::GeometryChanged</code> …","","Sets the z-index of the current view.","Spawns a thread and provides a ContextProxy for sending …","","","","Starts a timer with the provided timer id.","Starts a timer with the provided timer id.","Stops the timer with the given timer id.","Stops the timer with the given timer id.","","Sets a text value used for accessbility for the current …","Returns whether the current view should have its text …","Returns true if the timer with the provided timer id is …","Returns true if the timer with the provided timer id is …","","","","Toggles the addition/removal of a class name for the …","Returns the 2D transform of the current view.","Returns the transform of the current view.","","","","","","","","","","","","","","","","","","","","","","","","","Releases any cursor icon lock, allowing the cursor icon to …","A scale factor used for uniformly scaling the window …","A scale factor used for uniformly scaling the window …","Returns the visibility of the current view.","","","","","","","","","","Returns the window’s size in logical pixels, before …","The window’s size in logical pixels, before …","","Makes the above black magic more explicit","","builtin vizia themes","","A model for system specific state which can be accessed by …","Events for setting the state in the Environment.","","Set the locale used for the whole application.","Set the default theme mode.","System theme, if we choose this as our theme vizia will …","","","Alternate between dark and light theme modes.","Reset the locale to use the system provided locale.","The current application theme","","","","","","","","","","","","","","","","","","","Derived lenses for <code>Environment</code>.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The locale used for localization.","","","","The current system theme","Current application and system theme.","Derived lenses for <code>Theme</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lens for the field <code>caret_timer</code> on <code>Environment</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Lens for the field <code>locale</code> on <code>Environment</code>.","Creates a new lens for the field <code>locale</code> on <code>Environment</code>. …","Creates a new lens for the field <code>theme</code> on <code>Environment</code>. Use …","Creates a new lens for the field <code>caret_timer</code> on <code>Environment</code>…","","Lens for the whole <code>Environment</code> struct.","","Lens for the field <code>theme</code> on <code>Environment</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Lens for the field <code>app_theme</code> on <code>Theme</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new lens for the field <code>app_theme</code> on <code>Theme</code>. Use …","Creates a new lens for the field <code>sys_theme</code> on <code>Theme</code>. Use …","","Lens for the whole <code>Theme</code> struct.","Lens for the field <code>sys_theme</code> on <code>Theme</code>.","","","","","","","","","","","","","","","","","","","","Emitted when a character is typed.","Prints the debug message to the console.","Events propagate directly to the target entity and to no …","Emitted when a file is dragged and then dropped onto the …","A wrapper around a message, providing metadata on how the …","The metadata of an <code>Event</code>.","","Move keyboard focus to the next navigable view.","","Move keyboard focus to the previous navigable view.","Emitted when an entity changes position or size.","Grabs the mouse cursor, preventing it from leaving the …","Emitted when a keyboard key is pressed.","Emitted when a keyboard key is released.","Emitted when mouse events have been captured.","Emitted when mouse events have been released.","Emitted when a mouse button is double clicked.","Emitted when a mouse button is pressed","Emitted when the mouse cursor enters an entity.","Emitted when the mouse cursor leaves an entity.","Emitted when the mouse cursor is moved","Emitted when the mouse cursor leaves the bounding box of …","Emitted when the mouse cursor enters the bounding box of …","Emitted when the mouse scroll wheel is scrolled.","Emitted when a mouse button is triple clicked","Emitted when a mouse button is released.","Emitted when the primary mouse button or trigger key is …","Emitted when the primary mouse button or trigger key is …","Determines how an event propagates through the tree.","Requests a redraw of the window contents.","Requests a relayout.","Reloads all application stylesheets.","Request a restyle.","Sets whether the window remains on top of other windows.","Sets the mouse cursor icon.","Sets the (x,y) position of the mouse cursor in window …","Sets whether the window has decorations.","Sets the maximum size of the window.","Sets whether the window is maximized.","Sets the minimum size of the window.","Sets whether the window is minimized.","Sets the position of the window.","Sets whether the window is resizable.","Sets the size of the window.","Sets the title of the window.","Sets whether the window is visible.","","","Events propagate starting at the target entity and …","Emited when the system window theme has changed.","","A handle used to cancel a scheduled event before it is …","A handle used to start, stop, and check the running status …","Enum which can be used to determine the reason a timer …","Events propagate up the tree from the target entity from …","Emitted when a window is closed. Can also be emitted by a …","Events generated by the application in response to OS …","","","","","","","","","","","","","","","","","","","","","","","","","Consumes the event to prevent it from continuing on its …","Consumes the event to prevent it from continuing on its …","","Sets the propagation to directly target the <code>entity</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Tries to downcast the event message to the specified type. …","Creates a new event with a specified message.","","Sets the origin of the event.","The entity that produced the event. Entity::null() for OS …","Sets the propagation of the event.","How the event propagates through the tree.","Tries to downcast the event message to the specified type. …","Sets the target of the event.","The entity the event should be sent to (or from in the …ixel is 8-bit alpha","AnimationDecoder trait","An Image in AVIF format.","Pixel contains 8-bit B, G and R channels","Pixel is 8-bit BGR with an alpha channel","An Image in BMP Format","The number of channels of this pixel type.","A string that can help to interpret the meaning each …","This pixel has the format of one of the predefined …","An enumeration over supported color types and bit depths","The maximum value for this type of primitive within the …","The minimum value for this type of primitive within the …","An Image in DDS Format","An error was encountered while decoding.","The delay of a frame relative to the previous one.","A Dynamic Image","Types which are safe to treat as an immutable byte slice …","An error was encountered while encoding.","Contains the error value","An enumeration of color types encountered in image formats.","An Image in farbfeld Format","A flat buffer over a (multi channel) image.","A single animation frame","An implementation dependent iterator, reading the frames …","A trait for manipulating images.","Trait to inspect an image.","An Image in GIF Format","Sendable grayscale + alpha channel image buffer","Sendable grayscale image buffer","An Image in Radiance HDR Format","An Image in ICO Format","Generic image buffer","The trait that all decoders implement","Specialized image decoding not be supported by all formats","The trait all encoders implement","The generic error type for image operations.","An enumeration of supported image formats. Not all formats …","Each pixel in this image is 16-bit Luma","Each pixel in this image is 8-bit Luma","Each pixel in this image is 16-bit Luma with alpha","Each pixel in this image is 8-bit Luma with alpha","An enumeration of supported image formats for encoding.","Result of an image decoding/encoding process","Each pixel in this image is 16-bit Rgb","Each pixel in this image is 32-bit float Rgb","Each pixel in this image is 8-bit Rgb","Each pixel in this image is 16-bit Rgb with alpha","Each pixel in this image is 32-bit float Rgb with alpha","Each pixel in this image is 8-bit Rgb with alpha","An error occurred while interacting with the environment.","An Image in JPEG Format","Pixel is 1-bit luminance","Pixel is 16-bit luminance","Pixel is 16-bit luminance","Pixel is 2-bit luminance","Pixel is 4-bit luminance","Pixel is 8-bit luminance","Pixel is 8-bit luminance","Pixel is 1-bit luminance with an alpha channel","Pixel is 16-bit luminance with an alpha channel","Pixel is 16-bit luminance with an alpha channel","Pixel is 2-bit luminance with an alpha channel","Pixel is 4-bit luminance with an alpha channel","Pixel is 8-bit luminance with an alpha channel","Pixel is 8-bit luminance with an alpha channel","Completing the operation would have required more …","Grayscale colors.","Grayscale colors + alpha channel","Contains the success value","An Image in OpenEXR Format","An error was encountered in input arguments.","A generalized pixel.","The type of pixel.","The pixel with an associated <code>ColorType</code>. Not all possible …","Immutable pixel iterator","An Image in PNG Format","An Image in PNG Format","An Image in general PNM Format","The type of each channel in a pixel. For example, this can …","Represents the progress of an image operation.","An Image in QOI format.","The type of reader produced by <code>into_reader</code>.","RGB colors.","Pixel contains 1-bit R, G and B channels","Pixel is 16-bit RGB","Pixel contains 16-bit R, G and B channels","Pixel contains 2-bit R, G and B channels","Pixel is 32-bit float RGB","Pixel is 32-bit float RGB","An image buffer for 32-bit float RGB pixels, where the …","Pixel contains 4-bit R, G and B channels","Pixel contains 8-bit R, G and B channels","Pixel contains 8-bit R, G and B channels","Sendable Rgb image buffer","RGB colors + alpha channel","Pixel is 1-bit RGB with an alpha channel","Pixel is 16-bit RGBA","Pixel is 16-bit RGB with an alpha channel","Pixel is 2-bit RGB with an alpha channel","Pixel is 32-bit float RGBA","Pixel is 32-bit float RGBA","An image buffer for 32-bit float RGBA pixels, where the …","Pixel is 4-bit RGB with an alpha channel","Pixel is 8-bit RGB with an alpha channel","Pixel is 8-bit RGB with an alpha channel","Sendable Rgb + alpha channel image buffer","A View into another image","The scalar type that is used to store each channel in this …","An Image in TGA Format","An Image in TIFF Format","Pixel is of unknown color type with the specified bits per …","An operation can not be completed by the chosen …","A value for signalling an error: An unsupported format was …","An Image in WEBP Format","Adjust the contrast of this image. <code>contrast</code> is the amount …","Apply the function <code>f</code> to each channel of this pixel.","","","","","Apply the function <code>f</code> to each channel of this pixel and …","","","","","Apply the function <code>f</code> to each channel except the alpha …","","","","","Apply the function <code>f</code> to each channel except the alpha …","","","","","","","","","","","","","Get the bytes of this value.","Return this image’s pixels as a native endian byte slice.","Return a view on the raw sample buffer.","Return a view on the raw sample buffer for 32bit per …","Return a mutable view on the raw sample buffer.","Return a view on the raw sample buffer for 16 bit per …","Return a view on the raw sample buffer for 8 bit per …","Return a reference to an 16bit Grayscale image","Return a reference to an 8bit Grayscale image","Return a reference to an 16bit Grayscale image with an …","Return a reference to an 8bit Grayscale image with an …","Get a mutable reference based version.","Return a mutable reference to an 16bit Grayscale image","Return a mutable reference to an 8bit Grayscale image","Return a mutable reference to an 16bit Grayscale image …","Return a mutable reference to an 8bit Grayscale image with …","Return a mutable reference to an 16bit RGB image","Return a mutable reference to an 32bit RGB image","Return a mutable reference to an 8bit RGB image","Return a mutable reference to an 16bit RGBA image","Return a mutable reference to an 16bit RGBA image","Return a mutable reference to an 8bit RGBA image","View the samples as a slice.","Returns the underlying raw buffer","Get a reference based version.","Return a reference to an 16bit RGB image","Return a reference to an 32bit RGB image","Return a reference to an 8bit RGB image","Return a reference to an 16bit RGBA image","Return a reference to an 32bit RGBA image","Return a reference to an 8bit RGBA image","View the samples as a slice.","View this buffer as an image over some type of pixel.","Interpret this buffer as a mutable image.","View this buffer but keep mutability at a sample level.","Returns the number of bits contained in a pixel of …","Blend the color of a given pixel into ourself, taking into …","","","","","Put a pixel at location (x, y), taking into account alpha …","Put a pixel at location (x, y), taking into account alpha …","","Performs a Gaussian blur on this image. <code>sigma</code> is a measure …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bounding rectangle of this image.","Tuple of bounds in the order of coordinate inputs.","","","Brighten the pixels of this image. <code>value</code> is the amount to …","Returns the image buffer","Returns a mutable image buffer","Returns the number of bytes contained in a pixel of …","Return if the ImageFormat can be decoded by the lib.","Return if the ImageFormat can be encoded by the lib.","Change the coordinates of this subimage.","Returns the number of color channels that make up this …","Get the number of channels for colors of this type.","Returns the components as a slice.","","","","","Returns the channels of this pixel as a 4 tuple. If the …","","","","","Returns the components as a mutable slice","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Steps through the iterator from the current frame until …","Return this image’s color type.","Supplementary color information.","Returns the color type of the image data produced by this …","Examples","Copies all of the pixels from another image into this …","Copies all of the pixels from one part of this image to …","","Return a cut-out of this image delimited by the bounding …","Return a cut-out of this image delimited by the bounding …","A measure of completed decoding.","","","Delay of this frame","","","","","Returns a tuple containing the width and height of the …","The width and height of this image.","","The width and height of this image.","","Enumerates over the pixels of the image. The iterator …","Enumerates over the pixels of the image. The iterator …","Enumerates over the rows of the image. The iterator yields …","Enumerates over the rows of the image. The iterator yields …","","","","","","","","","","","","","","","","","","","","","","","","","Expands a color palette by re-using the existing buffer. …","Return a list of applicable extensions for this format.","Get the dimensions <code>(channels, width, height)</code>.","Filters this image with the specified 3x3 kernel.","Check if a buffer of length <code>len</code> is large enough.","Flip this image horizontally","Flip this image vertically","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Construct a pixel from the 4 channels a, b, c and d. If …","","","","","Decodes an encoded image into a dynamic image.","Return the image format specified by a path’s file …","Constructs a new ImageBuffer by repeated application of …","Return the image format specified by a MIME type.","Create a delay from a ratio of milliseconds.","Constructs a new frame","Return the image format specified by the path’s file …","Constructs a new ImageBuffer by copying a pixel","Constructs a buffer from a generic container (for example …","Convert from a duration, clamped between 0 and an …","Returns a view into a slice.","","","","","Returns mutable view into a mutable slice.","","","","","Creates an image buffer out of an existing buffer. Returns …","Get a mutable reference to a single sample.","Returns the pixel located at (x, y). Indexed from top left.","","Gets a reference to the pixel at location <code>(x, y)</code>","","Gets a reference to the pixel at location <code>(x, y)</code> or …","Gets a reference to the mutable pixel at location <code>(x, y)</code>. …","","Gets a reference to the mutable pixel at location <code>(x, y)</code>","Do not use is function: It is unimplemented!","Gets a reference to the mutable pixel at location <code>(x, y)</code> …","Get a reference to a single sample.","Return a grayscale version of this image. Returns <code>Luma</code> …","Guess image format from memory block","If there are any samples aliasing each other.","Returns if there is an alpha channel.","Returns false if the color scheme is grayscale, true …","","","","","","","","","The height of this image.","The height of this image.","Returns the height of the underlying image","Hue rotate the supplied image. <code>value</code> is the degrees to …","Returns the ICC color profile embedded in the image","Read a tuple containing the (width, height) of the image …","Mutable portion of the buffer that holds sample values.","Return the portion of the buffer that holds sample values.","Returns true if this x, y coordinate is contained inside …","Check that the pixel and the channel index are in bounds.","Get an index provided it is inbouds.","Return a reference to a single sample at specified …","Resolve the index of a particular sample.","","","","","","Get the theoretical position of sample (x, y, channel).","Return a mutable reference to a single sample at specified …","","","","","","Get a reference to the underlying image.","Get a mutable reference to the underlying image.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the image buffer","Return this image’s pixels as a byte vector. If the …","Return the raw sample buffer with its stride an dimension …","Consume the decoder producing a series of frames.","","","Consume the image and returns a Luma image.","Consume the image and returns a Luma image.","Consume the image and returns a LumaA image.","Consume the image and returns a LumaA image.","Returns the underlying raw buffer","Returns a reader that can be used to obtain the bytes of …","Consume the image and returns a RGB image.","Consume the image and returns a RGB image.","Consume the image and returns a RGB image.","Consume the image and returns a RGBA image.","Consume the image and returns a RGBA image.","Consume the image and returns a RGBA image.","Consumes the image buffer and returns the underlying data …","Invert this pixel","","","","","Invert the colors of this image. This method operates …","Check if a buffer fulfills the requirements of a normal …","A <code>repr(C)</code> description of the layout of buffer samples.","Returns the x offset","Create a new image from a Reader.","Create a new image from a byte slice","Create a new image from a byte slice","Apply the function <code>f</code> to each channel of this pixel.","","","","","Apply the function <code>f</code> to each channel of this pixel and …","","","","","Apply the function <code>f</code> to each channel except the alpha …","","","","","Apply the function <code>f</code> to each channel except the alpha …","Get the minimum length of a buffer such that all in-bounds …","Creates a new <code>Frames</code> from an implementation specific …","Constructs a new frame without any delay.","Creates a new image buffer based on a <code>Vec&lt;P::Subpixel&gt;</code>.","Construct a new subimage The coordinates set the position …","Creates a dynamic image backed by a buffer of gray pixels.","Creates a dynamic image backed by a buffer of gray pixels.","Creates a dynamic image backed by a buffer of gray pixels …","Creates a dynamic image backed by a buffer of gray pixels …","Creates a dynamic image backed by a buffer of RGB pixels.","Creates a dynamic image backed by a buffer of RGB pixels.","Creates a dynamic image backed by a buffer of RGB pixels.","Creates a dynamic image backed by a buffer of RGBA pixels.","Creates a dynamic image backed by a buffer of RGBA pixels.","Creates a dynamic image backed by a buffer of RGBA pixels.","","","","","The numerator and denominator of the delay in milliseconds.","Open the image located at the path specified. The image’…","Returns the color type of the image file before decoding","","Returns an Iterator over the pixels of this image. The …","Returns an iterator over the pixels of this image. The …","Returns an iterator over the mutable pixels of this image.","Put a pixel at location (x, y). Indexed from top left.","Puts a pixel at location <code>(x, y)</code>","","","Returns all the bytes in the image.","Same as <code>read_image</code> but periodically calls the provided …","Decode a rectangular section of the image; see …","Decode a rectangular section of the image, periodically …","Calculate a measure for remaining decoding work.","Resize this image using the specified filter algorithm. …","Resize this image using the specified filter algorithm. …","Resize this image using the specified filter algorithm. …","Rotate this image 180 degrees clockwise.","Rotate this image 270 degrees clockwise.","Rotate this image 90 degrees clockwise.","Returns an iterator over the rows of this image.","Returns an iterator over the mutable rows of this image.","Get the format of the buffer when viewed as a matrix of …","Underlying linear container holding sample values.","Saves the buffer to a file at the path specified.","Saves the buffer to a file at the path specified.","Saves the supplied buffer to a file at the path specified.","Saves the supplied buffer to a file at the path specified …","Saves the buffer to a file at the specified path in the …","Saves the buffer to a file at the specified path in the …","Returns the minimum number of bytes that can be …","Set decoding limits for this decoder. See <code>Limits</code> for the …","Shrink the image to the minimum of current and given …","","Get the strides for indexing matrix-like <code>[(c, w, h)]</code>.","Returns a mutable subimage that is a view into this image. …","Create a mutable sub-view of the image.","Scale this image down to fit within a specific size. …","Scale this image down to a specific size. Returns a new …","Return a copy of this image’s pixels as a byte vector. …","Convert this subimage to an ImageBuffer","Convert this pixel to luma","","","","","Returns a copy of this image as a Luma image.","Returns a copy of this image as a Luma image.","Returns a copy of this image as a Luma image.","Convert this pixel to luma with an alpha channel","","","","","Returns a copy of this image as a LumaA image.","Returns a copy of this image as a LumaA image.","Returns a copy of this image as a LumaA image.","Return the MIME type for this image format or “…","","","","","","","","","","","","","","","","","Convert this pixel to RGB","","","","","Returns a copy of this image as an RGB image.","Returns a copy of this image as an RGB image.","Returns a copy of this image as an RGB image.","Convert this pixel to RGB with an alpha channel","","","","","Returns a copy of this image as an RGBA image.","Returns a copy of this image as an RGBA image.","Returns a copy of this image as an RGBA image.","","","Copy the data into an owned vector.","Returns the y offset","A measure of all necessary decoding work.","Returns the total number of bytes in the decoded image.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Move the data into an image buffer.","","","","","","","","","","","","","","","","","","","Returns the pixel located at (x, y). Indexed from top left.","Returns the pixel located at (x, y), ignoring bounds …","Puts a pixel at location (x, y). Indexed from top left.","Puts a pixel at location (x, y), ignoring bounds checking.","Performs an unsharpen mask on this image. <code>sigma</code> is the …","Returns a subimage that is an immutable view into this …","Create a sub-view of the image.","","","","","","","","","","","","","","","","","","","The width of this image.","The width of this image.","Returns the width of the underlying image","Create a monocolor image from a single pixel.","Writes the supplied buffer to a writer in the specified …","Writes all the bytes in an image to the encoder.","Writes the buffer to a writer in the specified format.","Encode this image and write it to <code>w</code>.","Writes the buffer with the given encoder.","Encode this image with the provided encoder.","","Switch the input mode on an external AVR (audio/video …","Toggle the power on an external AVR (audio/video …","","The Accept (Commit, OK) key. Accept current option or …","Found on Sun’s USB keyboard.","The Again key, to redo or repeat an action.","The All Candidates key, to initate the multi-candidate …","The Alphanumeric key.","The Alt (Alternative) key. This key enables the alternate …","The Alternate Graphics (AltGr or AltGraph) key. This key …","Alt, Option or ⌥.","Alt, Option or ⌥. This is labelled AltGr key on many …","The Application switch key, which provides a list of …","↓","The down arrow key, to navigate or traverse downward. (…","←","The left arrow key, to navigate or traverse leftward. (…","→","The right arrow key, to navigate or traverse rightward. (…","↑","The up arrow key, to navigate or traverse upward. (…","The Attention (Attn) key.","Adjust audio balance leftward. (VK_AUDIO_BALANCE_LEFT)","Adjust audio balance rightward. (VK_AUDIO_BALANCE_RIGHT)","Decrease audio bass boost or cycle down through bass boost …","Toggle bass boost on/off. (APPCOMMAND_BASS_BOOST)","Increase audio bass boost or cycle up through bass boost …","Adjust audio fader towards front. (VK_FADER_FRONT)","Adjust audio fader towards rear. (VK_FADER_REAR)","Advance surround audio mode to next available mode. (…","Decrease treble. (APPCOMMAND_TREBLE_DOWN)","Increase treble. (APPCOMMAND_TREBLE_UP)","","Decrease audio volume. (APPCOMMAND_VOLUME_DOWN, …","","Toggle between muted state and prior volume level. (…","","Increase audio volume. (APPCOMMAND_VOLUME_UP, …","`~ on a US keyboard. This is the 半角/全角/漢字 (…","Used for both the US | (on the 101-key layout) and also …","Backspace or ⌫. Labelled Delete on Apple keyboards.","The Backspace key. This key value is also used for the key …","[{ on a US keyboard.","]} on a US keyboard.","Non-standard code value supported by Chromium.","The Brightness Down key. Typically controls the display …","Non-standard code value supported by Chromium.","The Brightness Up key. Typically controls the display …","Some laptops place this key to the left of the ↑ key.","Navigate to previous content or page in current history. (…","","Open the list of browser favorites. (…","Some laptops place this key to the right of the ↑ key.","Navigate to next content or page in current history. (…","","Go to the user’s preferred home page. (…","","Refresh the current page or content. (…","","Call up the user’s preferred search page. (…","","Stop loading the current page or content. (…","","The Call key. (KEYCODE_CALL)","The Camera key. (KEYCODE_CAMERA)","The Camera focus key. (KEYCODE_FOCUS)","The Cancel key.","CapsLock or ⇪","The Caps Lock (Capital) key. Toggle capital character lock …","Select next (numerically or logically) lower channel. (…","Select next (numerically or logically) higher channel. (…","A key string that corresponds to the character typed by …","Remove the currently selected input.","Close the current document or message (Note: This …","Toggle the display of Closed Captions. (VK_CC, …","Code is the physical position of a key.","The Code Input key, to initiate the Code Input mode to …","General purpose color-coded media function key, as index 0 …","General purpose color-coded media function key, as index 1 …","General purpose color-coded media function key, as index 2 …","General purpose color-coded media function key, as index 3 …","General purpose color-coded media function key, as index 4 …","General purpose color-coded media function key, as index 5 …",",&lt; on a US keyboard.","The Compose key, also known as Multi_key on the X Window …","The application context menu key, which is typically found …","Show the application’s context menu. This key is …","The Control or Ctrl key, to enable control modifier …","Control or ⌃","Control or ⌃","Japanese: 変換 (henkan)","The Convert key, to convert the current input method …","Found on Sun’s USB keyboard.","Copy the current selection. (APPCOMMAND_COPY)","The Cursor Select (Crsel) key.","Found on Sun’s USB keyboard.","Cut the current selection. (APPCOMMAND_CUT)","Select Digital Video Rrecorder. (KEYCODE_DVR)","A dead key combining key. It may be any combining key from …","⌦. The forward delete key. Note that on Apple keyboards, …","The Delete (Del) Key. This key value is also used for the …","0) on a US keyboard.","1! on a US keyboard.","2@ on a US keyboard.","3# on a US keyboard.","4$ on a US keyboard.","5% on a US keyboard.","6^ on a US keyboard.","7&amp; on a US keyboard.","8* on a US keyboard.","9( on a US keyboard.","Adjust brightness of device, by toggling between or …","Swap video sources. (VK_DISPLAY_SWAP)","Non-standard code value supported by Chromium.","The Eisu key. This key may close the IME, but its purpose …","Eject or ⏏. This key is placed in the function section …","Toggle removable media to eject (open) and insert (close) …","Page Down, End or ↘","The End key, used with keyboard entry to go to the end of …","The End Call key. (KEYCODE_ENDCALL)","Enter or ↵. Labelled Return on Apple keyboards.","The Enter or ↵ key, to activate current selection or …","=+ on a US keyboard.","The Erase to End of Field key. This key deletes all …","Esc or ⎋","The Esc key. This key was originally used to initiate an …","The Extend Selection (Exsel) key.","The Execute key.","Exit the current application. (VK_EXIT)","F1","The F1 key, a general purpose function key, as index 1.","F10","The F10 key, a general purpose function key, as index 10.","F11","The F11 key, a general purpose function key, as index 11.","F12","The F12 key, a general purpose function key, as index 12.","F13","The F13 key, a general purpose function key, as index 13.","F14","The F14 key, a general purpose function key, as index 14.","F15","The F15 key, a general purpose function key, as index 15.","F16","The F16 key, a general purpose function key, as index 16.","F17","The F17 key, a general purpose function key, as index 17.","F18","The F18 key, a general purpose function key, as index 18.","F19","The F19 key, a general purpose function key, as index 19.","F2","The F2 key, a general purpose function key, as index 2.","F20","The F20 key, a general purpose function key, as index 20.","F21","The F21 key, a general purpose function key, as index 21.","F22","The F22 key, a general purpose function key, as index 22.","F23","The F23 key, a general purpose function key, as index 23.","F24","The F24 key, a general purpose function key, as index 24.","F3","The F3 key, a general purpose function key, as index 3.","F4","The F4 key, a general purpose function key, as index 4.","F5","The F5 key, a general purpose function key, as index 5.","F6","The F6 key, a general purpose function key, as index 6.","F7","The F7 key, a general purpose function key, as index 7.","F8","The F8 key, a general purpose function key, as index 8.","F9","The F9 key, a general purpose function key, as index 9.","Clear program or content stored as favorite 0. (…","Clear program or content stored as favorite 1. (…","Clear program or content stored as favorite 2. (…","Clear program or content stored as favorite 3. (…","Select (recall) program or content stored as favorite 0. (…","Select (recall) program or content stored as favorite 1. (…","Select (recall) program or content stored as favorite 2. (…","Select (recall) program or content stored as favorite 3. (…","Store current program or content as favorite 0. (…","Store current program or content as favorite 1. (…","Store current program or content as favorite 2. (…","Store current program or content as favorite 3. (…","The Final Mode Final key used on some Asian keyboards, to …","Found on Sun’s USB keyboard.","Open the Find dialog. (APPCOMMAND_FIND)","Fn This is typically a hardware key that does not generate …","The Function switch Fn key. Activating this key …","FLock or FnLock. Function Lock key. Found on the Microsoft …","The Function-Lock (FnLock or F-Lock) key. Activating this …","The Back key. (KEYCODE_BACK)","The Home key, which goes to the phone’s main screen. (…","Switch to the first character group. (ISO/IEC 9995)","Switch to the last character group. (ISO/IEC 9995)","Switch to the next character group. (ISO/IEC 9995)","Switch to the previous character group. (ISO/IEC 9995)","Toggle display of program or content guide. (VK_GUIDE, …","If guide is active and displayed, then display next …","If guide is active and displayed, then display previous …","The Hangul (Korean characters) Mode key, to toggle between …","The Hanja (Korean characters) Mode key.","The (Half-Width) Characters key.","The Headset Hook key. (KEYCODE_HEADSETHOOK)","Help. Not present on standard PC keyboards.","Open a help dialog or toggle display of help information. (…","The Hibernate key. This key saves the current state of the …","Use for dedicated ひらがな key found on some Japanese …","The Hiragana (Japanese Kana characters) key.","The Hiragana/Katakana toggle key. (…","Home or ↖","The Home key, used with keyboard entry, to go to start of …","","The Hyper key.","Toggle display of information about currently selected …","Insert or Ins. Not present on Apple keyboards.","The Insert (Ins) key, to toggle between text modes for …","Inserts an entry into the <code>Keymap</code>.","Toggle instant replay. (VK_INSTANT_REPLAY)","Located between the left Shift and Z keys. Labelled | on a …","Located between the / and right Shift keys. Labelled \\\\ろ (…","Located between the = and Backspace keys. Labelled ¥ (yen…","The Junja (Korean characters) Mode key.","Japanese: カタカナ/ひらがな/ローマ字 (…","The Kana Mode (Kana Lock) key. This key is used to enter …","The Kanji (Japanese name for ideographic characters of …","Use for dedicated カタカナ key found on some Japanese …","The Katakana (Japanese Kana characters) key.","Key represents the meaning of a keypress.","The 11 key found on media numpads that have buttons from 1 …","The 12 key found on media numpads that have buttons from 1 …","a on a US keyboard. Labelled q on an AZERTY (e.g., French) …","b on a US keyboard.","c on a US keyboard.","d on a US keyboard.","e on a US keyboard.","f on a US keyboard.","g on a US keyboard.","h on a US keyboard.","i on a US keyboard.","j on a US keyboard.","k on a US keyboard.","l on a US keyboard.","m on a US keyboard.","n on a US keyboard.","o on a US keyboard.","p on a US keyboard.","q on a US keyboard. Labelled a on an AZERTY (e.g., French) …","r on a US keyboard.","s on a US keyboard.","t on a US keyboard.","u on a US keyboard.","v on a US keyboard.","w on a US keyboard. Labelled z on an AZERTY (e.g., French) …","x on a US keyboard.","y on a US keyboard. Labelled z on a QWERTZ (e.g., German) …","z on a US keyboard. Labelled w on an AZERTY (e.g., French) …","Non-standard code value supported by Chromium.","A keymap that associates key chords with actions.","An entry inside of a <code>Keymap</code>.","An event used to interact with a <code>Keymap</code> at runtime.","","Korean: HangulMode 한/영 (han/yeong)Japanese (Mac …","Korean: Hanja 한자 (hanja)Japanese (Mac keyboard): 英数…","Japanese (word-processing keyboard): Katakana","Japanese (word-processing keyboard): Hiragana","Japanese (word-processing keyboard): Zenkaku/Hankaku","The Last Number Redial key.","Sometimes labelled My Computer on the keyboard","Sometimes labelled Calculator on the keyboard","The first generic “LaunchApplication” key. This is …","The second generic “LaunchApplication” key. This is …","Non-standard code value supported by Chromium.","The “Calendar” key. (KEYCODE_CALENDAR)","The “Contacts” key. (KEYCODE_CONTACTS)","Non-standard code value supported by Chromium.","","The “Mail” key. (APPCOMMAND_LAUNCH_MAIL)","The “Media Player” key. (APPCOMMAND_LAUNCH_MEDIA_SELECT…","The “Music Player” key.","The “Phone” key.","Non-standard code value supported by Chromium.","The “Screen Saver” key.","The “Spreadsheet” key.","The “Web Browser” key.","The “WebCam” key.","The “Word Processor” key.","The left mouse button.","Launch linked content, if available and appropriate. (…","List the current program. (VK_LIST)","Toggle display listing of currently available live content …","Lock or unlock current content or program. (VK_LOCK)","The LogOff key.","Non-standard code value supported by Chromium.","Open an editor to forward the current message. (…","Non-standard code value supported by Chromium.","Open an editor to reply to the current message. (…","Non-standard code value supported by Chromium.","Send the current message. (APPCOMMAND_SEND_MAIL)","Toggle between manner mode state: silent, vibrate, ring, …","Show a list of media applications: audio/video players and …","Audio track key. (KEYCODE_MEDIA_AUDIO_TRACK)","Close the current media, for example to close a CD or DVD …","Non-standard code value supported by Chromium.","Initiate or continue forward playback at faster than …","Select previously selected channel or media. (VK_LAST, …","Non-standard code value supported by Chromium.","Pause the currently playing media. (APPCOMMAND_MEDIA_PAUSE…","Non-standard code value supported by Chromium.","Initiate or continue media playback at normal speed, if …","","Toggle media between play and pause states. (…","Non-standard code value supported by Chromium.","Initiate or resume recording of currently selected media. (…","Non-standard code value supported by Chromium.","Initiate or continue reverse playback at faster than …","","Skip backward to next content or program. (…","Skip forward to next content or program. (VK_SKIP, …","Step backward to next content or program. (…","Step forward to next content or program. (…","","Stop media playing, pausing, forwarding, rewinding, or …","Media top menu. (KEYCODE_MEDIA_TOP_MENU)","","Seek to next media or program track. (…","","Seek to previous media or program track. (…","The Meta key, to enable meta modifier function for …","The Windows, ⌘, Command or other OS symbol key.","The Windows, ⌘, Command or other OS symbol key.","Non-standard code value supported by Chromium.","Toggle the microphone on/off. (APPCOMMAND_MIC_ON_OFF_TOGGLE…","Decrease microphone volume. (…","Mute the microphone. (APPCOMMAND_MICROPHONE_VOLUME_MUTE, …","Increase microphone volume. (…","The middle mouse button.","-_ on a US keyboard.","The Mode Change key, to toggle between or cycle through …","The state of the modifier keys.","A mouse button.","Data which describes the current state of a mouse button.","The current state of the mouse cursor and buttons.","Navigate in. (KEYCODE_NAVIGATE_IN)","Navigate to next key. (KEYCODE_NAVIGATE_NEXT)","Navigate out. (KEYCODE_NAVIGATE_OUT)","Navigate to previous key. (KEYCODE_NAVIGATE_PREVIOUS)","Open a new document or message. (APPCOMMAND_NEW)","The Next Candidate function key.","Cycle to next favorite channel (in favorites list). (…","Cycle to next user profile (if there are multiple user …","Japanese: 無変換 (muhenkan)","The NonConvert (“Don’t Convert”) key, to accept …","The Notification key. (KEYCODE_NOTIFICATION)","On the Mac, the “NumLock” code should be used for the …","The NumLock or Number Lock key, to toggle numpad mode …","0 Ins on a keyboard0 on a phone or remote control","1 End on a keyboard1 or 1 QZ on a phone or remote control","2 ↓ on a keyboard2 ABC on a phone or remote control","3 PgDn on a keyboard3 DEF on a phone or remote control","4 ← on a keyboard4 GHI on a phone or remote control","5 on a keyboard5 JKL on a phone or remote control","6 → on a keyboard6 MNO on a phone or remote control","7 Home on a keyboard7 PQRS or 7 PRS on a phone or remote …","8 ↑ on a keyboard8 TUV on a phone or remote control","9 PgUp on a keyboard9 WXYZ or 9 WXY on a phone or remote …","+","Found on the Microsoft Natural Keyboard.","C or AC (All Clear). Also for use with numpads that have a …","CE (Clear Entry)",", (thousands separator). For locales where the thousands …",". Del. For locales where the decimal separator is “,” …","/","","=","# on a phone or remote control device. This key is …","M+ Add current entry to the value stored in memory.","MC Clear the value stored in memory.","MR Replace the current entry with the value stored in …","MS Replace the value stored in memory with the current …","M- Subtract current entry from the value stored in memory.","<em> on a keyboard. For use with numpads that provide </em>…","( Found on the Microsoft Natural Keyboard.",") Found on the Microsoft Natural Keyboard.","<em> on a phone or remote control device. This key is </em>…","-","Access on-demand content or programs. (VK_ON_DEMAND)","Found on Sun’s USB keyboard.","Open an existing document or message. (APPCOMMAND_OPEN)","Another mouse button with the associated button number.","Page Down, PgDn or ⇟","The Page Down key, to scroll down or display next page of …","Page Up, PgUp or ⇞","The Page Up key, to scroll up or display previous page of …","Pairing key to pair devices. (KEYCODE_PAIRING)","Found on Sun’s USB keyboard.","The Paste key. (APPCOMMAND_PASTE)","Pause Break","Pause the current state or application (as appropriate).",".&gt; on a US keyboard.","Move picture-in-picture window down. (VK_PINP_DOWN)","Move picture-in-picture window. (VK_PINP_MOVE)","Toggle display of picture-in-picture window. (…","Move picture-in-picture window up. (VK_PINP_UP)","Play or resume the current state or application (as …","Decrease media playback speed. (VK_PLAY_SPEED_DOWN)","Reset playback to normal speed. (VK_PLAY_SPEED_RESET)","Increase media playback speed. (VK_PLAY_SPEED_UP)","This key is placed in the function section on some Apple …","Toggle power state. (KEYCODE_POWER)","The PowerOff key. Sometime called PowerDown.","The Previous Candidate function key.","Print the current document or message. (APPCOMMAND_PRINT)","PrtScr SysRq or Print Screen","The Print Screen or SnapShot key, to initiate print-screen …","Non-standard code value supported by Chromium.","The Process key.","Found on Sun’s USB keyboard.","The properties (Props) key.","’“ on a US keyboard.","Toggle random media or content shuffle mode. (…","Not a physical key, but this key code is sent when the …","Toggle or cycle between media recording speeds. (…","Redo the last action. (APPCOMMAND_REDO)","Removes an entry from the <code>Keymap</code>.","","Toggle RF (radio frequency) input bypass mode (pass RF …","The right mouse button.","The Roman characters function key.","","Switch the input mode on an external STB (set top box). (…","Toggle the power on an external STB (set top box). (…","Save the current document or message. (APPCOMMAND_SAVE)","Toggle scan channels mode. (VK_SCAN_CHANNELS_TOGGLE)","Advance display screen mode to next available mode. (…","Scroll Lock","The Scroll Lock key, to toggle between scrolling and …","Found on Sun’s USB keyboard.","The Select key.","Non-standard code value supported by Chromium.",";: on a US keyboard.","Toggle display of device settings screen. (VK_SETTINGS, …","The Shift key, to enable shift modifier function for …","Shift or ⇧","Shift or ⇧","Non-standard code value supported by Chromium.","The Single Candidate function key.","/? on a US keyboard.","","General purpose virtual function key, as index 1.","General purpose virtual function key, as index 2.","General purpose virtual function key, as index 3.","General purpose virtual function key, as index 4.","  (space)","Show correction list when a word is incorrectly …","Toggle between dictation mode and command/control mode. (…","Spellcheck the current document or selection. (…","Toggle split screen mode. (VK_SPLIT_SCREEN_TOGGLE)","The Standby key. This key turns off the display and places …","Toggle display of subtitles, if available. (VK_SUBTITLE)","","The Super key.","","The Symbol modifier key (used on some virtual keyboards).","The Symbol Lock key.","Switch to viewing TV. (KEYCODE_TV)","TV 3D Mode. (KEYCODE_3D_MODE)","Toggle between antenna and cable input. (…","Audio description. (KEYCODE_TV_AUDIO_DESCRIPTION)","Audio description mixing volume down. (…","Audio description mixing volume up. (…","Contents menu. (KEYCODE_TV_CONTENTS_MENU)","Contents menu. (KEYCODE_TV_DATA_SERVICE)","Switch the input mode on an external TV. (KEYCODE_TV_INPUT)","Switch to component input #1. (KEYCODE_TV_INPUT_COMPONENT_1…","Switch to component input #2. (KEYCODE_TV_INPUT_COMPONENT_2…","Switch to composite input #1. (KEYCODE_TV_INPUT_COMPOSITE_1…","Switch to composite input #2. (KEYCODE_TV_INPUT_COMPOSITE_2…","Switch to HDMI input #1. (KEYCODE_TV_INPUT_HDMI_1)","Switch to HDMI input #2. (KEYCODE_TV_INPUT_HDMI_2)","Switch to HDMI input #3. (KEYCODE_TV_INPUT_HDMI_3)","Switch to HDMI input #4. (KEYCODE_TV_INPUT_HDMI_4)","Switch to VGA input #1. (KEYCODE_TV_INPUT_VGA_1)","Media context menu. (KEYCODE_TV_MEDIA_CONTEXT_MENU)","Toggle network. (KEYCODE_TV_NETWORK)","Number entry. (KEYCODE_TV_NUMBER_ENTRY)","Toggle the power on an external TV. (KEYCODE_TV_POWER)","Radio. (KEYCODE_TV_RADIO_SERVICE)","Satellite. (KEYCODE_TV_SATELLITE)","Broadcast Satellite. (KEYCODE_TV_SATELLITE_BS)","Communication Satellite. (KEYCODE_TV_SATELLITE_CS)","Toggle between available satellites. (…","Analog Terrestrial. (KEYCODE_TV_TERRESTRIAL_ANALOG)","Digital Terrestrial. (KEYCODE_TV_TERRESTRIAL_DIGITAL)","Timer programming. (KEYCODE_TV_TIMER_PROGRAMMING)","Tab or ⇥","The Horizontal Tabulation Tab key.","Toggle display of teletext, if available (VK_TELETEXT, …","","Found on Sun’s USB keyboard.","Undo the last action. (APPCOMMAND_UNDO)","This value code should be used when no other value given …","This key value is used when an implementation is unable to …","Advance video mode to next available mode. (…","The Voice Dial key.","","The WakeUp key. (KEYCODE_WAKEUP)","Cause device to identify itself in some manner, e.g., …","The Zenkaku (Full-Width) Characters key.","The Zenkaku/Hankaku (full-width/half-width) toggle key. (…","The ZoomIn key. (KEYCODE_ZOOM_IN)","The ZoomOut key. (KEYCODE_ZOOM_OUT)","Non-standard code value supported by Chromium.","Toggle between full-screen and scaled content, or alter …","Returns the action of the keymap entry.","Returns the set containing all flags.","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","The horizontal mouse cursor position of the frame.","The vertical mouse cursor position of the frame.","","","","","","","Returns the delta of the mouse cursor position of the …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","Exports all keymap entries and their associated key chords.","","","","","","","","","","","","","","Returns the delta of the mouse cursor position of the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","The state of the left mouse button.","Determine a <em>charCode</em> value for a key with a character …","Determine a <em>keyCode</em> value for a key.","The state of the middle mouse button.","Creates a new keymap.","Creates a new keymap entry.","Returns the complement of this set of flags.","","","","","","","Returns the <code>on_action</code> callback function of the keymap …","","The position of the mouse cursor when the mouse button was …","The position of the mouse cursor when the mouse button was …","The hovered entity when the mouse button was last pressed.","Returns an iterator over every pressed keymap entry.","The horizontal mouse cursor position of the previous frame.","The vertical mouse cursor position of the previous frame.","The hovered entity when the mouse button was last released.","Removes the specified flags in-place.","The state of the right mouse button.","Inserts or removes the specified flags depending on the …","The state of the mouse button (pressed/released).","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","Automatically determine the value.","Respresents the axis-aligned bounding box of a view.","Stack child elements vertically.","Describes the capabilities of a view with respect to user …","","The layout type determines how the nodes will position its …","","","Node is positioned relative to parent and in-line with …","A percentage of the parent dimension.","A number of logical pixels.","The position type determines whether a node will be …","Stack child elements horizontally.","Node is positioned relative to parent but ignores its …","A factor of the remaining free space.","Units which describe spacing and size.","","Get a flags value with all known bits set.","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","Bottom side of bounds.","Bottom left point of bounds.","Bottom right point of bounds.","","Horizontal and vertical center of bounds.","Bottom center of bounds.","Left center of bounds.","Right center of bounds.","Top center of bounds.","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","","","","","","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","","","","","","","","Expands by some <code>amount</code> in both directions and returns a …","Expands by some <code>amount</code> horizontally and returns a new …","Expands by some <code>amount</code> vertically and returns a new …","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Construct a <code>BoundingBox</code> from checked minimum and maximum …","Get a flags value with the bits of a flag with the given …","","","","","Bounds height equivalent to <code>h</code>.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","","Whether any set bits in a source flags value are also set …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Returns true if the value is auto.","Whether all bits in this flags value are unset.","Returns true if the value is a percentage.","Returns true if the value is in pixels.","Returns true if the value is a stretch factor.","Yield a set of contained flags values.","Yield a set of contained named flags values.","Left side of bounds equivalent to <code>x</code>.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","The intersection of a source flags value with the …","Right side of bounds.","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","Shrinks by some <code>amount</code> in both directions and returns a …","Shrinks by some <code>amount</code> horizontally and returns a new …","Shrinks each side by the given separate amounts and …","Shrinks by some <code>amount</code> vertically and returns a new …","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","Returns the units converted to pixels or a provided …","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Top of bounds equivalent to <code>y</code>.","Top left point of bounds.","Top right point of bounds.","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","Bounds width equivalent to <code>w</code>.","","","Respresents the axis-aligned bounding box of a view.","","","","","A type which formats a localized message with any number …","","Add a variable argument binding to the Localized type.","Add a constant argument to the Localized type.","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Sets a mapping function to apply to the translated text.","Creates a new Localized type with a given key.","","","","","","","","","","A trait implemented by application data in order to …","Build the model data into the application tree.","Respond to events in order to mutate the model data.","","Modifiers for changing the abilities of a view.","Modifiers for changing the accessibility properties of a …","Modifiers which add an action callback to a view.","","","Modifiers for changing the layout properties of a view.","","","Modifiers for changing the style properties of a view.","Modifiers for changing the text properties of a view.","","","Modifiers for setting the properties of a window.","","Sets whether the window should be on top of other windows. …","Sets the backdrop filter for the view.","Sets the background color of the view.","","","","Sets the border radius for the bottom-left corner of the …","Sets the border corner shape for the bottom-left corner of …","Sets the border radius for the bottom-right corner of the …","Sets the border corner shape for the bottom-right corner …","Sets the border color of the view.","Sets the border corner shape for all four corners of the …","Sets the border radius for all four corners of the view.","Sets the border radius for the top-left corner of the view.","Sets the border corner shape for the top-left corner of …","Sets the border radius for the top-right corner of the …","Sets the border corner shape for the top-right corner of …","Sets the border width of the view.","","","","","","","","","Sets the space on the bottom side of the view.","Add a box-shadow to the view.","Sets the ext caret color of the view.","Sets whether the view can be checked.","Sets the checked state of the view.","Sets the space between the bottom side of the view and the …","Sets the space between the left side of the view and the …","Sets the space between the right side of the view and the …","Sets the space between the vew and its children.","Sets the space between the top side of the view and the …","Adds a class name to the view.","Sets the clip path for the the view.","","","","","Sets the space between the views children in a horizontal …","Sets the text color of the view.","","Sets the mouse cursor used when the view is hovered.","Sets whether the window has decorations. Accepts a boolean …","","","Sets the accessibility default action for the view.","Sets the view to be disabled.","Sets whether the view should be positioned and rendered.","","","","Sets whether the view can be focused to receive keyboard …","Sets the focused state of the view.","Sets the font that should be used by the view.","Sets the font size of the view.","Sets the font stretch that should be used by the view if …","Sets the font style that should be used by the view.","Sets the font weight that should be used by the view.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Sets the height of the view.","Sets whether the view should be hidden from accessibility.","Sets whether the view can be hovered by the mouse.","Sets the icon used for the window.","Sets the ID name of the view.","Sets the inner size of the window to the given value. …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Sets the layout type of the view.","Sets the space on the left side of the view.","Sets whether the view should act as an accessibility live …","Sets the maximum bottom space of the view.","Sets the maximum height of the view.","Sets the maximum inner size of the window to the given …","Sets the maximum left space of the view.","Sets the maximum right space of the view.","Sets the maximum width and maximum height of the view.","Sets the maximum space for all sides of the view.","Sets the maximum top space of the view.","Sets the maximum width of the view.","Sets whether the window is maximized. Accepts a boolean …","Sets the minimum bottom space of the view.","Sets the minimum height of the view.","Sets the minimum inner size of the window to the given …","Sets the minimum left space of the view.","Sets the minimum right space of the view.","Sets the minimum width and minimum height of the view.","Sets the minimum space for all sides of the view.","Sets the minimum top space of the view.","Sets the minimum width of the view.","Sets whether the window is minimized. Accepts a boolean …","Sets the accessibility name of the view.","Sets whether the view can be navigated to, i.e. focused, …","","","","","Sets the accessibility numeric value for the view.","Adds a callback which is performed when the the view …","","","Adds a callback which is performed when the view gains …","Adds a callback which is performed when the view loses …","Adds a callback which is performed when the the view …","Adds a callback which is performed when the mouse pointer …","Adds a callback which is performed when the mouse pointer …","Adds a callback which is performed when a mouse button is …","Adds a callback which is performed when the mouse pointer …","Adds a callback which is performed when a mouse button is …","Adds a callback which is performed when the mouse pointer …","Adds a callback which is performed when the mouse pointer …","Adds a callback which is performed when the the view …","Adds a callback which is performed when the the view …","Sets the opacity of the view.","Sets the outline color of the view.","Sets the outline offset of the view.","Sets the outline width of the view.","","Sets the overflow behavior of the view in the horizontal …","Sets the overflow behavior of the view in the vertical …","Sets whether the view can be become the target of pointer …","Sets the position of the window to the given value. …","Sets the position type of the view.","","","Sets whether the window can be resized. Accepts a boolean …","Sets the space on the right side of the view.","Sets the accessibility role of the view.","Sets the angle of rotation for the view.","Sets the space between the views children in a vertical …","Sets the scale of the view.","Sets the color used to highlight selected text within the …","","","Sets the width and height of the view.","Sets the space for all sides of the view.","","Sets the text content of the view.","Sets the horizontal alignment of text within the view.","Sets the accessibility text value for the view.","Sets whether the text of the view should be allowed to …","Sets the title of the window to the given value. Accepts a …","","","Sets whether a view should have the given class name.","","Derived lenses for <code>TooltipModel</code>.","","Sets the space on the top side of the view.","Sets the transform of the view with a list of transform …","Sets the transform origin of the the view.","Sets the translation offset of the view.","Sets whether the window is transparent. Accepts a boolean …","","","","","","","","","","","","","Sets whether the view should be rendered.","Sets whether the window is visible. Accepts a boolean …","Sets whether the window has vsync enabled.","","","","","Sets the width of the view.","","","","Sets the z-index of the view.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new lens for the field <code>tooltip_visible</code> on …","","Lens for the whole <code>TooltipModel</code> struct.","","","","Lens for the field <code>tooltip_visible</code> on <code>TooltipModel</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Indicates an alias or shortcut is to be created.","Indicates something can be scrolled/panned in any …","A value representing an angle expressed in degrees, …","","An arrow which is usually also the default cursor icon.","","The entity will receive pointer events unless its parent …","","","","","","","","","","","The bevel border corner shape.","900","","700,","The shape the default view drawing algorithm should use …","The ‘bottom’ horizontal position keyword.","A box shadow adding a shadow effect around an element’s …","","","","","","","","","","Indicates the table cell or set of cells can be selected.","<code>center</code>","<code>center</code>","The inline contents are centered within the line box.","Character unit.","","Centimeters.","Indicates a column can be resized horizontally.","A color value.","","","Indicates a context menu is available.","Indicates something is to be copied.","","","Indicates selection.","","The ‘currentcolor’ keyword.","","An icon of a cursor.","","","","","","","","","","","","","","","","","","","","","","","","","The platform-dependent default cursor. Typically an arrow.","An angle expressed in degrees.","","Determines whether an entity will be rendered and acted on …","Indicates something can be resized or moved east.","em.","The same as right if direction is left-to-right and left …","Indicates something can be resized or moved horizontally.","ex.","","","950","800","","","200","","","","","","","The entity will be rendered and acted on by the layout …","","A font size value.","A font stretch value.","A font style.","A font weight value.","A font weight keyword corresponding to a specific font …","","","","","","","","","","","Indicates something can be grabbed and moved around.","Indicates something is being grabbed and moved around.","An angle expressed in gradians.","","","","","","","Indicates something clickable like a link.","","Indicates help information is available.","The overflow is clipped and the content can only be …","The entity will not rendered, but will still be acted upon …","","","A horizontal position keyword.","","","","","","","Inches.","","The inline contents are justified. Text should be spaced …","","","","","","","","","","","","","","","","","","","","","","","","","The ‘left’ horizontal position keyword.","The inline contents are aligned to the left edge of the …","","<code>&lt;length-percentage&gt;</code>","<code>&lt;length-percentage&gt;</code>","","A length or a percentage value.","A length value.","300","","","","","","","","","","","","","","","","","","","A 2D matrix.","A 2D matrix transform.","500","Millimeters.","","Indicates something is to be moved.","","","Indicates something can be resized or moved north.","","Indicates something can be resized or moved north-east.","Indicates something can be resized or moved diagonally …","Indicates an item may not be dropped at the current …","No cursor is rendered.","The entity will not be rendered and acted on by the layout …","","","The entity will not receive pointer events.","","","","Indicates the requested action will not be carried out.","Indicates something can be resized or moved vertically.","Indicates something can be resized or moved north-west.","Indicates something can be resized or moved diagonally …","","","","","","","","An opacity value in the range of 0 to 1.","Determines how to deal with content that overflows the …","","","","","","","","","","","","The amount of pixels per centimeter.","The amount of pixels per inch.","The amount of pixels per millimeter.","The amount of pixels per pica.","The amount of pixels per point.","The amount of pixels per quarter-millimeter.","Picas.","","Determines whether an entity will receive pointer events.","","Indicates the program is busy in the background, but the …","","Points.","Pixels.","Quarter.","","","Draw system flag.","Text constraints system flag.","Layout system flag.","Style system flag.","A color with red, green, blue, and alpha components, in a …","A RGBA color value.","","","An angle expressed in radians.","","","Root em.","The ‘right’ horizontal position keyword.","The inline contents are aligned to the right edge of the …","A 2D rotation.","The round border corner shape.","Indicates a row can be resized vertically.","","","","","","","","","","","","","","Indicates something can be resized or moved south.","","","A scale defining a scale value on the x and the y axis.","A 2D scale.","A scale in the X direction.","A scale in the Y direction.","Indicates something can be resized or moved south-east.","600","","","","","<code>&lt;side&gt; &lt;length-percentage&gt;?</code>","<code>&lt;side&gt; &lt;length-percentage&gt;?</code>","A 2D skew.","A skew along the X axis.","A skew along the Y axis.","The same as left if direction is left-to-right and right …","Stores the style properties of all entities in the …","","Indicates something can be resized or moved south-west.","","","","","","","","Indicates the text can be selected.","Determines how overflowed content that is not displayed …","100","The ‘top’ horizontal position keyword.","An individual transform function.","Defines a transition that allows to change property values …","A translate defining a translate value on the x and the y …","A 2D translation.","A translation in the X direction.","A translation in the Y direction.","An angle expressed in turns.","","","","","","","","","","","A vertical position keyword.","Indicates the vertical text can be selected.","View height.","Determines whether an entity will be rendered.","The overflow is not clipped and renders outside of the …","The entity will be rendered.","Viewport maximum.","Viewport minimum.","View width.","","","","Indicates something can be resized or moved west.","Indicates the program is busy in the background and the …","","","Indicates something can be zoomed in.","Indicates something can be zoomed out.","","","","","","","","Get a flags value with all known bits set.","The alpha component.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The blue component.","","The blur radius used for making the box shadow bigger and …he color of the box shadow.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The delay of the transition.","The intersection of a source flags value with the …","","","","","The duration of the transition.","","Get a flags value with all bits unset.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","","","","Return a new RGBA from the Color","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The green component.","","","","","","Creates a new RGBA from HSL values.","Creates a new RGBA from HSLA values.","","","The bitwise or (<code>|</code>) of the bits in two flags values.","Determines if the box shadow should be an outer shadow …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","","Whether all bits in this flags value are unset.","","","Yield a set of contained flags values.","Yield a set of contained named flags values.","","","","","","","","","","","","","","","","","","","","","","","","","","","Function to convert logical points to physical pixels.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new box shadow.","Creates a new 2D matrix.","","Creates a new scale.","Creates a new transition.","Creates a new translation.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Function to convert physical pixels to logical points.","","","","A list of properties affected by transition.","","","","","","","","The red component.","The intersection of a source flags value with the …","","Creates a new RGBA from RGB values","Creates a new RGBA from RGB values","Creates a new RGBA from RGBA values","Creates a new RGBA from RGBA values","","","","","","","","","","","","","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The spread radius used for expanding and growing the box …","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the amount of pixels of the length if …","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The scale value on the x axis.","The translate value on the x axis.","The horizontal offset of the box shadow.","","The scale value on the y axis.","The translate value on the y axis.","The vertical offset of the box shadow.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","Text horizontal alignment: <code>Left</code> (default), <code>Center</code>, <code>Right</code>.","The text baseline is the normal alphabetic baseline. …","","Displays the source on top of the destination. The part of …","Text baseline vertical alignment: <code>Top</code>, <code>Middle</code>, <code>Alphabetic</code> …","Fills an additional triangular area between the common …","Blend factors.","","The ends of lines are squared off at the endpoints. …","Main 2D drawing context.","The text is centered.","Struct for representing colors.","Predefined composite oprations.","Determines how a new (“source”) data is displayed …","Ignores the destination and just displays the source.","Displays the destination on top of the source. The part of …","Only displays the part of the destination that is inside …","Only displays the part of the destination that is outside …","Displays the destination over the source.","","Using the target alpha","Using the target color","Enum with all possible canvas errors that could occur.","","","","The fill rule used when filling paths: <code>EvenOdd</code>, <code>NonZero</code> …","A font handle.","","Information about a font.","","","","The filter shall be a gaussian blur with given sigma as …","","","","","","","","","ImageFilter allows specifying the type of filter to apply …","Image flags (eg. repeat, flip, mipmaps, etc.)","An image handle.","","Information about an image.","Image source","","","","The text is left-aligned.","Displays the source together with the destination, the …","Determines the shape used to draw the end points of lines: …","Determines the shape used to join two line segments where …","The text baseline is the middle of the em square.","Connected segments are joined by extending their outside …","","","","","All use","Minus the target alpha","Minus the target color","Minus the source alpha","Minus the source color","","Struct controlling how graphical shapes are rendered.","A collection of verbs (<code>move_to()</code>, <code>line_to()</code>, <code>bezier_to()</code>, …","Image format: <code>Rgb8</code>, <code>Rgba8</code>, <code>Gray8</code>.","","","","","","","This is the main renderer trait that the Canvas draws to.","","","","","The text is right-aligned.","The ends of lines are rounded.","Rounds off the corners of a shape by filling an additional …","","","","","Used to specify Solid/Hole when adding shapes to a path.","Displays the source in the destination, i.e. only the part …","Only displays the part of the source that is outside the …","Displays the source over the destination.","The ends of lines are squared off by adding a box with an …","Using the source alpha","Scale color by minimum of source alpha and destination …","Using the source color","","TextContext provides functionality for text processing in …","Result of a shaping run.","The text baseline is the top of the em square.","2×3 matrix (2 rows, 3 columns) used for 2D linear …","","","Only the areas that exclusively belong either to the …","Not all","","Adds a font file to the canvas","Adds all .ttf files from a directory","Registers all .ttf files from a directory with this text …","Registers the .ttf file from the specified path with this …","Adds a font to the canvas by reading it from the specified …","Registers the in-memory representation of a TrueType font …","","Registers the in-memory representation of a TrueType font …","Get a flags value with all known bits set.","","","Returns boolean if the shapes drawn with this paint will …","Creates new circle arc shaped sub-path. The arc center is …","Adds an arc segment at the corner defined by the last path …","","","","","","","","","","","","","","","","","","","The distance from the baseline to the top of the highest …","","","Adds cubic bezier segment from last point in the path via …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Returns a black color","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates and returns a box gradient.","Returns the maximum index-th byte of text that will fit …","Returns the maximum index-th byte of text that will fit …","Returnes a list of ranges representing each line of text …","Returnes a list of ranges representing each line of text …","","Creates new circle shaped sub-path.","Clears the rectangle area defined by left upper corner …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Closes current sub-path with a line segment.","","","","","Creates a new solid color paint","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Returns true if the specified point (x,y) is in the …","Creates image from specified image data.","Allocates an empty image with the provided domensions and …","","Allocates an image that wraps the given backend-specific …","","","","","","","","","","","","","","","","","","","Deletes created image.","The distance from the baseline to the bottom of the lowest …","The intersection of a source flags value with the …","Source dimensions","Dispatch an explicit set of GlyphDrawCommands to the …","","Creates new ellipse shaped sub-path.","Get a flags value with all bits unset.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","Fills the provided Path with the specified Paint.","Retrieves the current fill rule setting for this paint","Fills the provided string with the specified Paint.","Renders the given source_image into target_image while …","Image flags","Tells the renderer to execute all drawing commands and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the current font size","Source format","Image format","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","","","Sets the composite operation with custom pixel arithmetic.","Sets the composite operation with custom pixel arithmetic …","Sets the composite operation.","","","","","","","","","","","","","Returns the height of the current render target.","","height of the glyphs as drawn","Image height in pixels","Returns color value for a 6-digit (<code>RRGGBB</code>) or 8-digit (…","Returns color value specified by hue, saturation and …","Returns color value specified by hue, saturation, …","Creates an identity transformation with no translation, …","Creates a new image pattern paint.","","Returns image info","Returns the size in pixels of the image for the specified …","Like <code>image</code>, but allows for adding a tint, or a color which …","","","The bitwise or (<code>|</code>) of the bits in two flags values.","Intersects current scissor rectangle with the specified …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Whether all known bits in this flags value are set.","","Whether all bits in this flags value are unset.","","","Yield a set of contained flags values.","Yield a set of contained named flags values.","Returns the current letter spacing","Returns the current start line cap for this paint.","Returns the current start line cap for this paint.","Returns the current line join for this paint.","","Adds line segment from the last point in the path to the …","Returns the current line width.","Creates and returns a linear gradient paint.","Creates and returns a linear gradient paint with two or …","Decode an image from file","Decode an image from memory","Returns font metrics for a particular Paint.","Returns font metrics for a particular Paint.","Returns information on how the provided text will be drawn …","Returns information on how the provided text will be drawn …","Getter for the miter limit","Starts new sub-path with specified point as first point.","","","","Creates a new canvas.","","Creates a new transformation matrix.","","Creates a new CompositeOperationState from the provided …","","Creates a new canvas with the specified renderer and using …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Return the bounding box for a Path","","","","Adds quadratic bezier segment from last point in the path …","","","Creates and returns a radial gradient.","Creates and returns a multi-stop radial gradient.","Resizes an image to the new provided dimensions.","Creates new rectangle shaped sub-path.","","The intersection of a source flags value with the …","","Module containing renderer implementations.","","Resets current state to default values. Does not affect …","Reset and disables scissoring.","Resets current transform to a identity matrix.","Adjusts the capacity of the shaped words cache. This is a …","Adjusts the capacity of the shaping run cache. This is a …","Restores the previous render state","Returns a color value from red, green, blue char values. …","Returns a color value from red, green, blue and alpha char …","Returns a color value from red, green, blue and alpha char …","Returns a color value from red, green, blue float values. …","Rotates the current coordinate system. Angle is specified …","","Creates new rounded rectangle shaped sub-path.","Creates new rounded rectangle shaped sub-path with varying …","","","Pushes and saves the current render state into a state …","Saves the current state before calling the callback and …","Scales the current coordinate system.","","Sets the current scissor rectangle.","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Sets transparency of a color value.","Sets transparency of a color value.","Sets whether shapes drawn with this paint will be anti …","Creates a new solid color paint","","Sets the current rule to be used when filling a path","","Sets the font size.","","Sets the transparency applied to all rendered shapes.","Sets the letter spacing for this paint","Sets how the start and end of the line (cap) is drawn","Sets how the end cap of the line is drawn","Sets how the beggining cap of the line is drawn","Sets how sharp path corners are drawn.","Sets the line width for shapes stroked with this paint.","Sets the limit at which a sharp corner is drawn beveled.","Sets a new render target. All drawing operations after …","","Sets the size of the default framebuffer (screen size)","Sets whether to use higher quality stencil strokes.","Sets the text horizontal alignment for this paint","Sets the text vertical alignment for this paint","Premultiplies current coordinate system by specified …","","Image size (height and width) in pixels","Memory usage in bytes","Skews the current coordinate system along X axis. Angle is …","","Skews the current coordinate system along Y axis. Angle is …","","Sets the current sub-path winding, see Solidity","True if this paint uses higher quality stencil strokes.","Strokes the provided Path with the specified Paint.","Strokes the provided string with the specified Paint.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","Returns the current horizontal align","Returns the current vertical align","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Returns the current transformation matrix","","Translates the current coordinate system.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","Updates image data specified by image handle.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a white color","Returns the width of the current render target.","","width of the glyphs as drawn","Image width in pixels","Returns the paint with anti alias set to the specified …","Creates a new CompositeOperationState with source and …","Returns the paint with a new solid color set to the …","Returns the paint with the rule for filling a path set to …","Returns the paint with the font set to the specified value.","Returns the paint with the font size set to the specified …","Returns the paint with the letter spacing set to the …","Returns the paint with line cap set to the specified value.","Returns the paint with the beginning cap of the line set …","Returns the paint with the beginning cap of the line set …","Returns the paint with the line join set to the specified …","Returns the paint with line width set to the specified …","Returns the paint with the miter limit set to the …","Returns the paint with stencil strokes set to the …","Returns the paint with the text horizontal alignment set …","Returns the paint with the text vertical alignment set to …","","","","","","","","Pixel is 8-bit alpha","AnimationDecoder trait","An Image in AVIF format.","Pixel contains 8-bit B, G and R channels","Pixel is 8-bit BGR with an alpha channel","An Image in BMP Format","The number of channels of this pixel type.","A string that can help to interpret the meaning each …","This pixel has the format of one of the predefined …","An enumeration over supported color types and bit depths","The maximum value for this type of primitive within the …","The minimum value for this type of primitive within the …","An Image in DDS Format","An error was encountered while decoding.","The delay of a frame relative to the previous one.","A Dynamic Image","Types which are safe to treat as an immutable byte slice …","An error was encountered while encoding.","Contains the error value","An enumeration of color types encountered in image formats.","An Image in farbfeld Format","A flat buffer over a (multi channel) image.","A single animation frame","An implementation dependent iterator, reading the frames …","A trait for manipulating images.","Trait to inspect an image.","An Image in GIF Format","Sendable grayscale + alpha channel image buffer","Sendable grayscale image buffer","An Image in Radiance HDR Format","An Image in ICO Format","Generic image buffer","The trait that all decoders implement","Specialized image decoding not be supported by all formats","The trait all encoders implement","The generic error type for image operations.","An enumeration of supported image formats. Not all formats …","Each pixel in this image is 16-bit Luma","Each pixel in this image is 8-bit Luma","Each pixel in this image is 16-bit Luma with alpha","Each pixel in this image is 8-bit Luma with alpha","An enumeration of supported image formats for encoding.","Result of an image decoding/encoding process","Each pixel in this image is 16-bit Rgb","Each pixel in this image is 32-bit float Rgb","Each pixel in this image is 8-bit Rgb","Each pixel in this image is 16-bit Rgb with alpha","Each pixel in this image is 32-bit float Rgb with alpha","Each pixel in this image is 8-bit Rgb with alpha","An error occurred while interacting with the environment.","An Image in JPEG Format","Pixel is 1-bit luminance","Pixel is 16-bit luminance","Pixel is 16-bit luminance","Pixel is 2-bit luminance","Pixel is 4-bit luminance","Pixel is 8-bit luminance","Pixel is 8-bit luminance","Pixel is 1-bit luminance with an alpha channel","Pixel is 16-bit luminance with an alpha channel","Pixel is 16-bit luminance with an alpha channel","Pixel is 2-bit luminance with an alpha channel","Pixel is 4-bit luminance with an alpha channel","Pixel is 8-bit luminance with an alpha channel","Pixel is 8-bit luminance with an alpha channel","Completing the operation would have required more …","Grayscale colors.","Grayscale colors + alpha channel","Contains the success value","An Image in OpenEXR Format","An error was encountered in input arguments.","A generalized pixel.","The type of pixel.","The pixel with an associated <code>ColorType</code>. Not all possible …","Immutable pixel iterator","An Image in PNG Format","An Image in PNG Format","An Image in general PNM Format","The type of each channel in a pixel. For example, this can …","Represents the progress of an image operation.","An Image in QOI format.","The type of reader produced by <code>into_reader</code>.","RGB colors.","Pixel contains 1-bit R, G and B channels","Pixel is 16-bit RGB","Pixel contains 16-bit R, G and B channels","Pixel contains 2-bit R, G and B channels","Pixel is 32-bit float RGB","Pixel is 32-bit float RGB","An image buffer for 32-bit float RGB pixels, where the …","Pixel contains 4-bit R, G and B channels","Pixel contains 8-bit R, G and B channels","Pixel contains 8-bit R, G and B channels","Sendable Rgb image buffer","RGB colors + alpha channel","Pixel is 1-bit RGB with an alpha channel","Pixel is 16-bit RGBA","Pixel is 16-bit RGB with an alpha channel","Pixel is 2-bit RGB with an alpha channel","Pixel is 32-bit float RGBA","Pixel is 32-bit float RGBA","An image buffer for 32-bit float RGBA pixels, where the …","Pixel is 4-bit RGB with an alpha channel","Pixel is 8-bit RGB with an alpha channel","Pixel is 8-bit RGB with an alpha channel","Sendable Rgb + alpha channel image buffer","A View into another image","The scalar type that is used to store each channel in this …","An Image in TGA Format","An Image in TIFF Format","Pixel is of unknown color type with the specified bits per …","An operation can not be completed by the chosen …","A value for signalling an error: An unsupported format was …","An Image in WEBP Format","Apply the function <code>f</code> to each channel of this pixel.","Apply the function <code>f</code> to each channel of this pixel and …","Apply the function <code>f</code> to each channel except the alpha …","Apply the function <code>f</code> to each channel except the alpha …","Get the bytes of this value.","Blend the color of a given pixel into ourself, taking into …","Put a pixel at location (x, y), taking into account alpha …","The bounding rectangle of this image.","Iterators and other auxiliary structure for the <code>ImageBuffer</code>…","Returns the components as a slice.","Returns the channels of this pixel as a 4 tuple. If the …","Returns the components as a mutable slice","Encoding and decoding for various image file formats.","Supplementary color information.","Returns the color type of the image data produced by this …","Copies all of the pixels from another image into this …","Copies all of the pixels from one part of this image to …","Returns a tuple containing the width and height of the …","The width and height of this image.","Contains detailed error representation.","Image representations for ffi.","Construct a pixel from the 4 channels a, b, c and d. If …","Returns a view into a slice.","Returns mutable view into a mutable slice.","Returns the pixel located at (x, y). Indexed from top left.","Gets a reference to the mutable pixel at location <code>(x, y)</code>. …","Guess image format from memory block","The height of this image.","Returns the ICC color profile embedded in the image","Read a tuple containing the (width, height) of the image …","Image Processing Functions","Returns true if this x, y coordinate is contained inside …","Consume the decoder producing a series of frames.","Returns a reader that can be used to obtain the bytes of …","Invert this pixel","Input and output of images.","A <code>repr(C)</code> description of the layout of buffer samples.","Create a new image from a Reader.","Create a new image from a byte slice","Create a new image from a byte slice","Apply the function <code>f</code> to each channel of this pixel.","Apply the function <code>f</code> to each channel of this pixel and …","Apply the function <code>f</code> to each channel except the alpha …","Apply the function <code>f</code> to each channel except the alpha …","Mathematical helper functions and types.","Open the image located at the path specified. The image’…","Returns the color type of the image file before decoding","Returns an Iterator over the pixels of this image. The …","Put a pixel at location (x, y). Indexed from top left.","Returns all the bytes in the image.","Same as <code>read_image</code> but periodically calls the provided …","Decode a rectangular section of the image; see …","Decode a rectangular section of the image, periodically …","Underlying linear container holding sample values.","Saves the supplied buffer to a file at the path specified.","Saves the supplied buffer to a file at the path specified …","Returns the minimum number of bytes that can be …","Set decoding limits for this decoder. See <code>Limits</code> for the …","Returns a mutable subimage that is a view into this image. …","Convert this pixel to luma","Convert this pixel to luma with an alpha channel","Convert this pixel to RGB","Convert this pixel to RGB with an alpha channel","Returns the total number of bytes in the decoded image.","Returns the pixel located at (x, y). Indexed from top left.","Puts a pixel at location (x, y). Indexed from top left.","Returns a subimage that is an immutable view into this …","The width of this image.","Writes the supplied buffer to a writer in the specified …","Writes all the bytes in an image to the encoder.","Provides color conversions for whole image buffers.","Enumerate the pixels of an image.","Enumerate the pixels of an image.","Enumerate the rows of an image.","Enumerate the rows of an image.","Iterate over pixel refs.","Iterate over mutable pixel refs.","Iterate over rows of an image","Iterate over mutable rows of an image","","","","","","","","","","","","","","","","","","","","","","","","","Converts <code>self</code> to a buffer of type T","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decoding and Encoding of PNG Images","Uses a heuristic to select one of the preceding filters …","An <code>AnimationDecoder</code> adapter of <code>PngDecoder</code>.","Filters based on the average of left and right neighbor …","High compression level","Compression level of a PNG encoder. The default setting is …","Default compression level","Fast, minimal compression","Filter algorithms used to process image data to improve …","Huffman coding compression","No processing done, best used for low bit depth grayscale …","Algorithm that takes into account the left, upper left, …","PNG decoder","PNG encoder","Png Reader","Run-length encoding compression","Filters based on previous pixel in the same scanline","Filters based on the scanline above","Turn this into an iterator over the animation frames.","","","","","","","","","","","","","","","","","","","","","","","Encodes the image <code>data</code> that has dimensions <code>width</code> and <code>height</code>…","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns if the image contains an animation.","Creates a new decoder that decodes from the stream <code>r</code>","Create a new encoder that writes its output to <code>w</code>","Create a new encoder that writes its output to <code>w</code> with …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new decoder that decodes from the stream <code>r</code> with …","Write a PNG image with the specified width, height, and …","The required color type can not be handled.","An error was encountered while decoding.","An error was encountered while decoding an image.","The resulting image exceed dimension limits in either …","The dimensions passed are wrong.","An error was encountered while encoding.","An error was encountered while encoding an image.","Contains the error value","The format is known exactly.","Repeated an operation for which error that could not be …","An image format is not supported.","A string describing the parameter. This is discouraged and …","Some feature specified by string. This is discouraged and …","The generic error type for image operations.","A best effort representation for image formats.","Result of an image decoding/encoding process","The operation would have performed an allocation larger …","An error occurred while interacting with the environment.","Completing the operation would have required more …","Indicates the limit that prevented an operation from …","Completing the operation would have required more …","The format can be identified by a name.","The end of the image has been reached.","Contains the success value","An error was encountered in input arguments.","An error was encountered in inputs arguments.","Details how a parameter is malformed.","A common path extension for the format is known.","The format is not known or could not be determined.","An operation can not be completed by the chosen …","The specified strict limits are not supported for this …","The implementation for an operation was not provided.","Details what feature is not supported.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the image format associated with this error.","Return the image format associated with this error.","Returns the image format associated with this error.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Create an <code>UnsupportedError</code> for an image with details on …","Create an <code>EncodingError</code> for an image format.","Create a <code>DecodingError</code> for an image format.","Construct a <code>ParameterError</code> directly from a corresponding …","Construct a generic <code>LimitError</code> directly from a …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the corresponding <code>UnsupportedErrorKind</code> of the …","Returns the corresponding <code>ParameterErrorKind</code> of the error.","Returns the corresponding <code>LimitErrorKind</code> of the error.","Create an <code>EncodingError</code> that stems from an arbitrary error …","Create a <code>DecodingError</code> that stems from an arbitrary error …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The given limits","The supported strict limits","The color format did not match the channel count.","The samples are in column-major form and all samples are …","Denotes invalid flat sample buffers when trying to convert …","A flat buffer over a (multi channel) image.","All samples are packed.","Different normal forms of buffers.","The represented image can not use this representation.","At least pixels are packed.","The samples are in row-major form and all samples are …","A ffi compatible description of a sample buffer.","The represented image was too large.","No pixel aliases another.","A flat buffer that can be used as an image view.","A mutable owning version of a flat buffer.","Deprecated - ChannelCountMismatch is used instead","","","","","","","","","","","","","","","Tuple of bounds in the order of coordinate inputs.","","","Add this to an index to get to the sample in the next …","The number of channels in the color representation of the …","","","","","","","","","","","Supplementary color information.","Describe a column-major image packed in all directions.","","","","","","","","","Get the dimensions <code>(channels, width, height)</code>.","Check if a buffer of length <code>len</code> is large enough.","Get a reference on the inner sample descriptor.","Get a reference on the sample buffer descriptor.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to a selected subpixel if it is …","Get a mutable reference to a selected sample.","","","","Get a reference to a selected subpixel if it is in-bounds.","Get a reference to a selected subpixel.","If there are any samples aliasing each other.","","","","The height of the represented image.","Add this to an index to get to the next sample in …","Return the mutable portion of the buffer that holds sample …","Return the mutable buffer that holds sample values.","Return the portion of the buffer that holds sample values.","Return the portion of the buffer that holds sample values.","Check that the pixel and the channel index are in bounds.","","","Get an index provided it is inbouds.","Resolve the index of a particular sample.","Get the theoretical position of sample (channel, x, y).","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Take out the sample buffer.","Take out the sample buffer.","Check if a buffer fulfills the requirements of a normal …","A <code>repr(C)</code> description of the layout of buffer samples.","Get the minimum length of a buffer such that all in-bounds …","Get the minimum length of a buffer such that all in-bounds …","Get the minimum length of a buffer such that all in-bounds …","Compares the logical preconditions.","","Describe a row-major image packed in all directions.","Get a reference on the inner buffer.","Get a reference on the inner buffer.","Underlying linear container holding sample values.","Shrink the image to the minimum of current and given …","Shrink the inner image.","Shrink the inner image.","Get the strides for indexing matrix-like <code>[(c, w, h)]</code>.","","","","","","","","","","","","","","","","","","Try to convert this into an image with mutable pixels.","","","","","","","","","","","The width of the represented image.","Add this to an index to get to the next sample in …","A bi-level color map","Cubic Filter","The color type on which the map operates on","A color map","Available Sampling Filters.","Gaussian Filter","Lanczos with window 3","Nearest Neighbor","Linear Filter","","Performs a Gaussian blur on the supplied image. <code>sigma</code> is a …","","","","","Brighten the supplied image. <code>value</code> is the amount to …","","","","","Functions for altering and converting the color of …","Adjust the contrast of the supplied image. <code>contrast</code> is the …","Return a mutable view into an image The coordinates set …","Return an immutable view into an image The coordinates set …","Reduces the colors of the image using the supplied …","","","Perform a 3x3 box filter on the supplied image. <code>kernel</code> is …","Flip an image horizontally","Flip an image horizontally and put the result into the …","Flip an image horizontally in place.","Flip an image vertically","Flip an image vertically and put the result into the …","Flip an image vertically in place.","","Returns the argument unchanged.","Returns the argument unchanged.","Convert the supplied image to grayscale. Alpha channel is …","Convert the supplied image to grayscale. Alpha channel is …","Convert the supplied image to a grayscale image with the …","Convert the supplied image to a grayscale image with the …","Determine if this implementation of ColorMap overrides the …","Indicate NeuQuant implements <code>lookup</code>.","Fill the image with a linear horizontal gradient","Hue rotate the supplied image. <code>value</code> is the degrees to …","Reduces the colors using the supplied <code>color_map</code> and …","Returns the index of the closest match of <code>color</code> in the …","","Linearly sample from an image using coordinates in [0, w-1]…","Sample from an image using coordinates in [0, w-1] and [0, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Invert each pixel within the supplied image. This function …","Looks up color by index in the color map.  If <code>idx</code> is out …","","Maps <code>color</code> to the closest color in the color map.","","Overlay an image at a given coordinate (x, y)","Calculate the region that can be copied from top to bottom.","Replace the contents of an image at a given coordinate (x, …","Resize the supplied image to the specified dimensions. …","Rotate an image 180 degrees clockwise.","Rotate an image 180 degrees clockwise and put the result …","Rotate an image 180 degrees clockwise in place.","Rotate an image 270 degrees clockwise.","Rotate an image 270 degrees clockwise and put the result …","Rotate an image 90 degrees clockwise.","Rotate an image 90 degrees clockwise and put the result …","Linearly sample from an image using coordinates in [0, 1].","Sample from an image using coordinates in [0, 1], taking …","Resize the supplied image to the specific dimensions.","Tile an image by repeating it multiple times","","","","","","","","","Performs an unsharpen mask on the supplied image. <code>sigma</code> is …","Fill the image with a linear vertical gradient","","","A bi-level color map","The color type on which the map operates on","A color map","Brighten the supplied image. <code>value</code> is the amount to …","Brighten the supplied image in place. <code>value</code> is the amount …","Adjust the contrast of the supplied image. <code>contrast</code> is the …","Adjust the contrast of the supplied image in place. …","Reduces the colors of the image using the supplied …","Convert the supplied image to grayscale. Alpha channel is …","Convert the supplied image to grayscale. Alpha channel is …","Convert the supplied image to a grayscale image with the …","Convert the supplied image to a grayscale image with the …","Determine if this implementation of ColorMap overrides the …","Hue rotate the supplied image. <code>value</code> is the degrees to …","Hue rotate the supplied image in place. <code>value</code> is the …","Reduces the colors using the supplied <code>color_map</code> and …","Returns the index of the closest match of <code>color</code> in the …","Invert each pixel within the supplied image. This function …","Looks up color by index in the color map.  If <code>idx</code> is out …","Maps <code>color</code> to the closest color in the color map.","Set of supported strict limits for a decoder.","Resource limits for decoding.","A multi-format image reader.","","","","","","","","","This function checks the <code>max_image_width</code> and …","This function checks that all currently set strict limits …","Remove the current information on the image format.","","","","","Read the image (replaces <code>load</code>).","","","","","","","","","Get the currently determined format.","This function increases the <code>max_alloc</code> limit with amount. …","This function acts identically to [<code>free</code>], but takes a <code>usize</code>…","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Read the image dimensions.","Unwrap the reader.","Set a custom set of decoding limits.","The maximum allowed sum of allocations allocated by the …","The maximum allowed image height. This limit is strict. …","The maximum allowed image width. This limit is strict. The …","Create a new image reader without a preset format.","Disable all decoding limits.","Disable all limits.","","","Open a file to read, format will be guessed from path.","This function checks that the current limit allows for …","This function acts identically to [<code>reserve</code>], but takes a …","Supply the format as which to interpret the read image.","","","","","","","","","","","","","","","Construct a reader with specified format.","Make a format guess based on the content, replacing it on …","A Rectangle defined by its top left corner, width and …","","","","","","","","","Returns the argument unchanged.","","The rectangle’s height.","Calls <code>U::from(self)</code>.","","","","","","The rectangle’s width.","The x coordinate of the top left corner.","The y coordinate of the top left corner.","Basic struct used for both owned (alias <code>ImgVec</code>) and …","Additional methods that depend on buffer size","Additional methods that depend on buffer size","Reference to pixels inside another image. Pass this …","Same as <code>ImgRef</code>, but mutable Pass this structure by value …","Image owning its pixels.","Iterates over pixels in the (sub)image. Call <code>Img.pixels()</code> …","Iterates over pixels in the (sub)image. Call …","Iterates over pixels in the (sub)image. Call …","Rows of the image. Call <code>Img.rows()</code> to create it.","Rows of the image. Call <code>Img.rows_mut()</code> to create it.","","Returns a reference to the buffer, width, height. …","Borrow the container mutably","","Make a mutable reference to the entire image","Borrow the container","","Make mutable reference immutable","Make a reference to this image to pass it to functions …","","","","","","","","","","","","","Immutable reference to the pixel storage. Warning: exposes …","Storage for the pixels. Usually <code>Vec&lt;Pixel&gt;</code> or <code>&amp;[Pixel]</code>. …","Storage for the pixels. Usually <code>Vec&lt;Pixel&gt;</code> or <code>&amp;[Pixel]</code>. …","Storage for the pixels. Usually <code>Vec&lt;Pixel&gt;</code> or <code>&amp;[Pixel]</code>. …","Storage for the pixels. Usually <code>Vec&lt;Pixel&gt;</code> or <code>&amp;[Pixel]</code>. …","Mutable reference to the pixel storage. Warning: exposes …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Height of the image in pixels.","Height of the image in pixels.","Height of the image in pixels.","Height of the image in pixels.","Height of the image in pixels.","Height in number of full strides. If the underlying buffer …","","Take n-th row as a slice. Same as .rows().nth(n).unwrap()","Read a pixel at <code>(x,y)</code> location (e.g. px = <code>img[(x,y)]</code>)","Take n-th row as a slice. Same as .rows().nth(n).unwrap()","Take n-th row as a slice. Same as .rows().nth(n).unwrap()","Read a pixel at <code>(x,y)</code> location (e.g. px = <code>img[(x,y)]</code>)","Read a pixel at <code>(x,y)</code> location (e.g. px = <code>img[(x,y)]</code>)","Read a pixel at <code>(x,y)</code> location (e.g. px = <code>img[(x,y)]</code>)","Read a pixel at <code>(x,y)</code> location (e.g. px = <code>img[(x,y)]</code>)","Read a pixel at <code>(x,y)</code> location (e.g. px = <code>img[(x,y)]</code>)","Take n-th row as a mutable slice. Same as …","Write a pixel at <code>(x,y)</code> location (e.g. <code>img[(x,y)] = px</code>)","Write a pixel at <code>(x,y)</code> location (e.g. <code>img[(x,y)] = px</code>)","Write a pixel at <code>(x,y)</code> location (e.g. <code>img[(x,y)] = px</code>)","Write a pixel at <code>(x,y)</code> location (e.g. <code>img[(x,y)] = px</code>)","Take n-th row as a mutable slice. Same as …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the pixel storage by consuming the image. Be careful …","Returns the buffer, width, height. Guarantees that the …","","","","","","Deprecated. Use .rows() or .pixels() iterators which are …","Convert underlying buffer to owned (e.g. slice to vec)","","","A convenience method for creating an image of the same …","Create new image with <code>Container</code> (which can be <code>Vec</code>, <code>&amp;[]</code> or …","A convenience method for creating an image of the same …","Same as <code>new()</code>, except each row is located <code>stride</code> number of …","","","","","","","","","","Panics","If you want to iterate in parallel, parallelize <code>rows()</code> …","Iterate <code>width*height</code> pixels in the <code>Img</code>, ignoring padding …","If you want to iterate in parallel, parallelize <code>rows()</code> …","If you want to iterate in parallel, parallelize <code>rows()</code> …","Iterate <code>width*height</code> pixels in the <code>Img</code>, by reference, …","Iterate over rows of the image as slices","Iterate over whole rows of pixels as slices","Iterate over whole rows as slices","Iterate over rows of the image as mutable slices","Iterate over whole rows as slices","Iterate over the entire buffer as rows, including all …","Iterate over the entire buffer as rows, including all …","Iterate over the entire buffer as rows, including all …","Iterate over the entire buffer as rows, including all …","","","","Number of <em>pixels</em> to skip in the container to advance to …","Number of pixels to skip in the container to advance to …","Number of pixels to skip in the container to advance to …","Number of pixels to skip in the container to advance to …","Number of pixels to skip in the container to advance to …","Make a reference for a part of the image, without copying …","Turn this into immutable reference, and slice a subregion …","Make a reference for a part of the image, without copying …","Trim this image without copying. Note that mutable borrows …","Create a mutable view into a region within the image. See …","Returns a reference to the buffer, width, height. …","","Convert underlying buffer to owned (e.g. slice to vec)","","","","","","","","","","","","","","","","","","","","","","","","","Width of the image in pixels.","Width of the image in pixels.","Width of the image in pixels.","Width of the image in pixels.","Width of the image in pixels.","Maximum possible width of the data, including the stride.","","","","","","","","","","","","","","","","","","","This is the main renderer trait that the Canvas draws to.","","","","","","","","","Vertex struct for specifying triangle geometry","Void renderer used for testing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Make the “Screen” RenderTarget actually render to a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts a slice of bytes into a slice of pixels, e.g. <code>[u8]</code> …","Same as <code>ComponentMap</code>, but doesn’t change the alpha …","Casting a slice of <code>RGB/A</code> values to a slice of <code>u8</code>","Applying operation to every component","Casting the struct to slices of its components","Cast a slice of component values (bytes) as a slice of …","Marker trait for “plain old data”.","The RGB pixel","16-bit RGB in machine’s native endian","8-bit RGB","The RGBA pixel","16-bit RGB in machine’s native endian. 0 = transparent, …","8-bit RGBA, alpha is last. 0 = transparent, 255 = opaque.","Trait for types that can be safely created with <code>zeroed</code>.","Alpha","Alpha","Alpha","","","","","","","","","Convenience function for converting to RGBA","Create a new RGBA with the new alpha value, but same RGB …","BGR/BGRA alernative layouts &amp; grayscale","","","Reinterpert slice as reverse-order BGR pixels","Reinterpert ntable slice as reverse-order BGR pixels","Reinterpert slice as reverse-order BGRA pixels","Reinterpert mutable slice as reverse-order alpha-last BGRA …","The components interpreted as raw bytes, in machine’s …","The components interpreted as raw bytes, in machine’s …","Reinterpert mutable slice as grayscale pixels","Reinterpert mutable slice as grayscale pixels with alpha","Reinterpert mutable slice as grayscale pixels with alpha","Reinterpert mutable slice as grayscale pixels","","","The components interpreted as a mutable array, e.g. one <code>RGB</code>…","","","Reinterpret the slice as a read-only/shared slice of …","Reinterpret the slice as a mutable/exclusive slice of …","","","Reinterpert slice as RGB pixels","Reinterpert mutable slice as RGB pixels","Reinterpert slice as RGBA pixels","Reinterpert mutable slice as RGBA pixels","The components interpreted as an array, e.g. one <code>RGB</code> …","","","Blue","Blue","Blue","Blue","Blue","Blue","Copy RGB components out of the RGBA struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Takes exactly 3 elements from the iterator and creates a …","Takes exactly 4 elements from the iterator and creates a …","Green","Green","Green","Green","Green","Green","","","Calls <code>U::from(self)</code>.","","","","Calls <code>U::from(self)</code>.","","","","Iterate over color components (R, G, and B)","Iterate over all components (length=4)","Convenience function (equivalent of …","","","Create a new RGBA with a new alpha value created by the …","Convenience function for applying the same formula to …","","","Create new RGBA with the same alpha value, but different …","","","","","","","Convenience function for creating a new pixel The order of …","Convenience function for creating a new pixel The order of …","Convenience function for converting to RGBA with alpha …","Convenience function for creating a new pixel The order of …","","","","","Red","Red","Red","Red","Red","Red","Copy RGB components out of the RGBA struct","Provide a mutable view of only RGB components (leaving out …","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>zeroed</code>.","RGB in reverse byte order","16-bit BGR in machine’s native endian","8-bit BGR","BGR+A","16-bit BGR in machine’s native endian","8-bit BGRA","16-bit gray in machine’s native endian","8-bit gray","16-bit gray with alpha in machine’s native endian","8-bit gray with alpha in machine’s native endian","Grayscale. Use <code>.0</code> or <code>*</code> (deref) to access the value.","Grayscale with alpha. Use <code>.0</code>/<code>.1</code> to access.","Alpha last","Alpha last","Alpha last","","","","","","","","","Convenience function for converting to RGBA","Create a new RGBA with the new alpha value, but same RGB …","Create a new <code>GrayAlpha</code> with the new alpha value, but same …","","","","","","","","","","","","","","","","","Blue first","Blue first","Blue first","Blue first","Blue first","Blue first","Copy RGB components out of the RGBA struct","Provide a mutable view of only RGB components (leaving out …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Green","Green","Green","Green","Green","Green","Copy <code>Gray</code> component out of the <code>GrayAlpha</code> struct","Provide a mutable view of only <code>Gray</code> component (leaving out …","","","","","","","Calls <code>U::from(self)</code>.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Iterate over color components (R, G, and B)","Iterate over all components (length=4)","","","","","Create a new RGBA with a new alpha value created by the …","Create a new <code>GrayAlpha</code> with a new alpha value created by …","","","","","Create new <code>GrayAlpha</code> with the same alpha value, but …","Create new RGBA with the same alpha value, but different …","","","","","","","Convenience function for creating a new pixel Wargning: …","Convenience function for creating a new pixel Warning: The …","New grayscale pixel","New grayscale+alpha pixel","Convenience function for converting to RGBA with alpha …","Convenience function for creating a new pixel Warning: The …","","","","","","","","","Red last","Red last","Red","Red","Red last","Red","Copy RGB components out of the RGBA struct","Provide a mutable view of only RGB components (leaving out …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The canvas which all views draw to.","A handle to a view which has been already built into the …","A view is any object which can be displayed on the screen.","","Set the color of the bar inside the ProgressBar.","","","","Returns the bounding box of the view.","Builds the view into the tree and returns a handle which …","","Returns a mutable reference to the context.","","Which form element does this label describe.","Provides custom drawing for the view.","Specifies a name for the view type which can be used as an …","Returns the <code>Entity</code> id of the view.","Handles any events received by the view.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Sets the fraction of a slider that a press of an arrow key …","Stop the user from tabbing out of a subtree, which is …","Mody the internal data of the view.","Marks the view as needing a redraw.","Marks the view as needing a relayout.","Marks the view as needing a restyle.","Registers a callback for when the user clicks off of the …","Sets the callback triggered when a textbox is blurred, …","Registers a callback for when the user clicks off of the …","Callback which is run when the view is built/rebuilt.","Sets the callback triggered when a textbox edit is …","","","","","","","","Sets the callback triggered when the slider value is …","","","","","","","","Sets the callback triggered when a textbox is edited, i.e. …","","","","","","","","","","","","","","","Sets a callback which will be called when a scrollview is …","","","","Set the callback triggered when the radio button is …","","Sets the callback triggered when a textbox is submitted, …","Set the callback triggered when the checkbox is pressed.","Set the callback triggered when the Switch is pressed.","","Sets the placeholder text that appears when the textbox …","Sets the range of the slider.","","Returns the scale factor of the device.","","","","","","","","","","Sets a validation closure which is called when the textbox …","","","","","","","","","","Makes a knob that represents the current value with an arc","A view with a binding which rebuilds its contents when the …","Trigger the <code>on_blur</code> callback.","A simple push button with an action and a contained view.","A checkbox used to display and toggle a boolean state.","","Sets the Size for the inner VStack which holds the content …","A visual indicator such as a tag.","Reset the text of the textbox to the bound data.","","","","","","","","","Copy the textbox buffer to the clipboard.","Cut the textbox text and place it in the clipboard.","A control used to select a date.","","","","","Delete a section of text, determined by the <code>Movement</code>.","","","","Specify the ‘drag’ position of the mouse cursor.","A dropdown is used to display some state with the ability …","A basic element with no interactivity.","Toggle the textbox to <em>not</em> allow text input.","A view which arranges its children into a horizontal stack …","Specify the ‘hit’ position of the mouse cursor.","","","","","","","","","","Insert a string of text into the textbox.","","","A label used to display text.","A view for creating a list of items from a binding to a …","","","","","","","","Move the cursor and selection.","","","","","The orientation of a widget, such as a slider or scrollbar","","Sets the Size for the outer <code>ScrollView</code> which wraps the …","Paste the clipboard buffer into the textbox.","","","","","","A simple ProgressBar that can be used to show progress of …","A radio button used to display and toggle boolean state.","","Specify the scroll offset of the textbox.","","","","Adds given progress to scroll position for the x axis and …","Adds given progress to scroll position for the y axis and …","","","Select all text.","Select the paragraph at the current cursor position.","Select the word at the current cursor position.","","","","","","","","Sets the <code>on_scroll</code> callback.","","","Set the placeholder text of the textbox.","","","Sets the progress of scroll position between 0 and 1 for …","Sets the progress of scroll position between 0 and 1 for …","","The slider control can be used to select from a continuous …","","","","","Toggle the textbox to allow text input.","","Trigger the <code>on_submit</code> callback with the current text.","A Switch used to display and toggle a boolean state.","","","","Events for modifying a textbox.","The <code>Textbox</code> view provides an input control for editing a …","Makes a round knob with a tick to show the current value","Adds tickmarks to a knob to show the steps that a knob can …","","","","","","","A view which arranges its children into a vertical stack …","","","","","A view which overlays its children on top of each other.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Derived lenses for <code>ComboBox</code>.","Height of the outer <code>ScrollView</code> which wraps the inner …","Width of the outer <code>ScrollView</code> which wraps the inner …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Creates a new horizontal progress bar bound to the value …","","Height of the inner VStack which holds the content …","Width of the inner VStack which holds the content …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Derived lenses for <code>MenuBar</code>.","Derived lenses for <code>MenuButton</code>.","","Creates a new binding view.","Creates a new button.","Creates a new checkbox.","","Creates a new dropdown.","Creates a new element.","","","","","","Creates a new label.","Creates a new label.","Creates a new List view with a binding to the given lens …","","","","","Creates a new progress bar bound to the value targeted by …","","","","","","Creates a new Switch.","","","","","","","","","","","","","Creates a new slider bound to the value targeted by the …","","","","Creates a new single-line textbox.","","","","Creates a new multi-line textbox.","","","","","Callback called when the scrollview is scrolled.","Derived lenses for <code>PopupData</code>.","","","","","","Progress of scroll position between 0 and 1 for the x axis","Progress of scroll position between 0 and 1 for the y axis","Derived lenses for <code>Submenu</codereates a new vertical progress bar bound to the value …","Derived lenses for <code>VirtualList</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lens for the field <code>filter_text</code> on <code>ComboBox</code>.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Lens for the field <code>hovered</code> on <code>ComboBox</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Lens for the field <code>is_open</code> on <code>ComboBox</code>.","Lens for the field <code>list_lens</code> on <code>ComboBox</code>.","Creates a new lens for the field <code>filter_text</code> on <code>ComboBox</code>. …","Creates a new lens for the field <code>placeholder</code> on <code>ComboBox</code>. …","Creates a new lens for the field <code>on_select</code> on <code>ComboBox</code>. …","Creates a new lens for the field <code>list_lens</code> on <code>ComboBox</code>. …","Creates a new lens for the field <code>selected</code> on <code>ComboBox</code>. Use …","Creates a new lens for the field <code>is_open</code> on <code>ComboBox</code>. Use …","Creates a new lens for the field <code>hovered</code> on <code>ComboBox</code>. Use …","Creates a new lens for the field <code>p</code> on <code>ComboBox</code>. Use …","","Lens for the field <code>on_select</code> on <code>ComboBox</code>.","Lens for the field <code>p</code> on <code>ComboBox</code>.","Lens for the field <code>placeholder</code> on <code>ComboBox</code>.","Lens for the whole <code>ComboBox</code> struct.","Lens for the field <code>selected</code> on <code>ComboBox</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Lens for the field <code>is_open</code> on <code>MenuBar</code>.","Creates a new lens for the field <code>is_open</code> on <code>MenuBar</code>. Use …","","Lens for the whole <code>MenuBar</code> struct.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Lens for the whole <code>MenuButton</code> struct.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Lens for the field <code>is_open</code> on <code>PopupData</code>.","Creates a new lens for the field <code>is_open</code> on <code>PopupData</code>. Use …","","Lens for the whole <code>PopupData</code> struct.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Lens for the field <code>is_open</code> on <code>Submenu</code>.","Creates a new lens for the field <code>is_open</code> on <code>Submenu</code>. Use …","Creates a new lens for the field <code>open_on_hover</code> on <code>Submenu</code>. …","","Lens for the field <code>open_on_hover</code> on <code>Submenu</code>.","Lens for the whole <code>Submenu</code> struct.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Lens for the field <code>item_height</code> on <code>VirtualList</code>.","Creates a new lens for the field <code>offset</code> on <code>VirtualList</code>. …","Creates a new lens for the field <code>num_items</code> on <code>VirtualList</code>. …","Creates a new lens for the field <code>item_height</code> on <code>VirtualList</code>…","Creates a new lens for the field <code>visible_items</code> on …","Creates a new lens for the field <code>scrolly</code> on <code>VirtualList</code>. …","Creates a new lens for the field <code>scroll_to_cursor</code> on …","Creates a new lens for the field <code>on_change</code> on <code>VirtualList</code>. …","","Lens for the field <code>num_items</code> on <code>VirtualList</code>.","Lens for the field <code>offset</code> on <code>VirtualList</code>.","Lens for the field <code>on_change</code> on <code>VirtualList</code>.","Lens for the whole <code>VirtualList</code> struct.","Lens for the field <code>scroll_to_cursor</code> on <code>VirtualList</code>.","Lens for the field <code>scrolly</code> on <code>VirtualList</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lens for the field <code>visible_items</code> on <code>VirtualList</code>.","","","","","","","","","","Emitted when a character is typed.","Prints the debug message to the console.","Emitted when a file is dragged and then dropped onto the …","","","","Move keyboard focus to the next navigable view.","","Move keyboard focus to the previous navigable view.","Emitted when an entity changes position or size.","Grabs the mouse cursor, preventing it from leaving the …","","Emitted when a keyboard key is pressed.","Emitted when a keyboard key is released.","Emitted when mouse events have been captured.","Emitted when mouse events have been released.","Emitted when a mouse button is double clicked.","Emitted when a mouse button is pressed","Emitted when the mouse cursor enters an entity.","Emitted when the mouse cursor leaves an entity.","Emitted when the mouse cursor is moved","Emitted when the mouse cursor leaves the bounding box of …","Emitted when the mouse cursor enters the bounding box of …","Emitted when the mouse scroll wheel is scrolled.","Emitted when a mouse button is triple clicked","Emitted when a mouse button is released.","Emitted when the primary mouse button or trigger key is …","Emitted when the primary mouse button or trigger key is …","Requests a redraw of the window contents.","Requests a relayout.","Reloads all application stylesheets.","Request a restyle.","Sets whether the window remains on top of other windows.","Sets the mouse cursor icon.","Sets the (x,y) position of the mouse cursor in window …","Sets whether the window has decorations.","Sets the maximum size of the window.","Sets whether the window is maximized.","Sets the minimum size of the window.","Sets whether the window is minimized.","Sets the position of the window.","Sets whether the window is resizable.","Sets the size of the window.","Sets the title of the window.","Sets whether the window is visible.","Emited when the system window theme has changed.","Emitted when a window is closed. Can also be emitted by a …","Events generated by the application in response to OS …","Modifiers for setting the properties of a window.","Sets whether the window should be on top of other windows. …","","","","","","","","","Sets whether the window has decorations. Accepts a boolean …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Sets the icon used for the window.","Sets the inner size of the window to the given value. …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Sets the maximum inner size of the window to the given …","Sets whether the window is maximized. Accepts a boolean …","Sets the minimum inner size of the window to the given …","Sets whether the window is minimized. Accepts a boolean …","Sets the position of the window to the given value. …","Sets whether the window can be resized. Accepts a boolean …","Sets the title of the window to the given value. Accepts a …","","","Sets whether the window is transparent. Accepts a boolean …","","","","","","","Sets whether the window is visible. Accepts a boolean …","Sets whether the window has vsync enabled.","","","",""],"i":[0,0,0,0,0,1,0,1,1,0,1,0,0,0,1,1,1,0,1,0,0,1,0,1,0,0,1,1,1,1,0,0,1,1,1,1,0,1,1,1,0,1,1,1,1,1,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,443,0,19,0,0,0,444,443,20,21,22,18,20,21,23,22,445,446,20,24,25,26,21,28,29,30,23,22,18,445,446,20,24,25,26,21,28,29,30,23,22,18,20,24,25,26,21,28,29,30,23,22,18,20,24,25,26,21,28,29,30,23,22,18,28,29,20,24,25,26,21,28,29,30,23,22,18,445,446,20,24,25,26,21,28,29,30,23,22,18,444,444,208,208,20,24,25,26,21,28,29,30,23,22,18,25,444,445,446,20,24,25,26,21,28,29,30,23,22,18,444,444,444,25,26,21,28,29,30,23,18,28,29,444,204,208,443,444,20,24,25,26,21,28,29,30,23,22,18,445,446,20,24,25,26,21,28,29,30,23,22,18,445,446,20,24,25,26,21,28,29,30,23,22,18,445,446,20,24,25,26,21,28,29,30,23,22,18,444,19,20,24,25,26,21,28,29,30,23,22,18,445,446,20,24,25,26,21,28,29,30,23,22,18,0,0,0,0,0,0,0,0,0,72,0,0,0,0,0,0,72,36,44,36,36,47,36,36,47,36,36,53,53,47,53,53,53,53,53,53,53,53,53,53,53,53,47,60,53,47,3,83,36,44,72,60,53,47,3,83,36,44,72,60,53,47,53,53,47,447,47,36,47,53,53,53,53,53,53,47,3,3,47,36,3,35,53,47,36,36,53,53,53,53,53,53,53,53,53,53,53,53,447,47,3,36,447,47,36,447,47,3,36,47,36,3,448,47,44,72,72,47,36,47,47,47,36,47,53,53,47,60,53,47,3,83,36,44,72,47,36,47,47,47,36,60,53,47,3,83,36,44,72,47,47,47,47,47,47,47,47,47,47,47,47,47,47,3,83,36,47,53,47,84,53,47,47,47,36,53,47,47,36,47,36,47,36,47,36,47,83,36,44,47,47,36,47,53,53,53,53,448,47,53,47,47,47,47,36,3,47,47,36,47,36,53,47,36,447,47,36,447,47,36,447,47,36,53,84,47,47,47,47,47,44,44,44,44,47,47,47,47,36,47,47,47,47,47,36,47,36,47,47,44,44,47,44,44,44,47,47,47,47,47,47,47,47,47,44,47,47,47,44,44,47,47,47,47,47,47,47,44,47,47,44,47,47,3,83,36,47,36,47,36,53,47,53,47,36,3,72,72,47,53,47,60,53,47,3,83,36,44,72,60,53,47,3,83,36,44,72,60,53,47,3,83,36,44,72,47,47,36,53,60,53,47,3,83,36,44,72,36,47,36,47,36,0,109,102,0,0,102,449,449,109,0,0,449,449,110,102,109,449,102,109,110,74,449,102,109,110,74,102,109,102,109,102,110,0,102,109,102,109,74,102,109,449,102,109,110,74,110,449,102,109,110,74,74,74,102,110,110,74,0,102,109,449,102,109,110,74,449,102,109,110,74,449,102,109,110,74,449,102,109,110,74,111,112,113,114,111,112,113,114,111,112,113,114,0,111,112,113,114,111,112,113,114,111,112,113,114,111,112,113,114,111,112,113,114,111,112,113,114,111,111,111,112,113,114,111,112,113,114,0,111,112,113,114,0,111,0,111,112,113,114,111,112,113,114,111,112,113,114,111,112,113,114,111,112,113,114,111,112,113,114,0,115,116,117,115,116,117,115,116,117,115,116,117,115,116,117,115,116,117,115,116,117,115,116,117,115,116,117,115,116,117,115,116,117,115,116,117,0,0,115,116,117,115,116,117,115,116,117,115,116,117,115,116,117,115,116,117,442,442,442,118,442,0,0,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,0,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,119,119,118,442,119,0,0,0,118,442,0,118,64,119,51,73,120,118,64,119,51,73,120,118,64,119,51,118,64,119,51,118,64,119,51,73,120,120,73,118,64,119,51,118,64,119,51,73,118,64,119,51,73,120,118,64,119,51,73,120,118,64,119,51,73,73,120,73,120,73,120,73,73,120,118,64,119,51,73,120,118,64,119,51,73,120,118,64,119,51,73,120,118,64,119,51,73,120,118,64,119,51,450,451,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,142,0,140,142,142,140,130,130,176,0,123,123,140,149,0,0,0,149,452,0,140,0,0,0,0,0,140,0,0,140,140,0,0,0,0,0,0,81,81,81,81,0,0,81,81,81,81,81,81,149,140,142,137,142,142,142,137,142,142,137,142,142,142,137,142,149,0,0,452,140,149,0,151,0,0,140,144,140,0,0,140,160,0,142,137,142,142,137,142,0,142,137,142,0,0,142,137,142,142,137,142,0,142,137,142,0,0,130,140,140,142,149,144,140,81,130,122,125,126,127,130,122,125,126,127,130,122,125,126,127,130,143,128,137,142,122,125,126,127,81,140,144,145,453,81,128,81,128,81,81,81,81,81,81,129,81,81,81,81,81,81,81,81,81,81,129,128,129,81,81,81,81,81,81,129,129,129,129,137,130,122,125,126,127,311,128,81,81,148,149,129,139,143,128,137,142,122,125,126,127,81,140,144,145,146,141,148,149,129,139,143,128,137,142,122,125,126,127,81,140,144,145,146,141,151,129,128,81,81,139,139,137,140,140,141,137,142,130,122,125,126,127,130,122,125,126,127,130,122,125,126,127,129,139,143,128,137,142,122,125,126,127,81,140,144,145,146,141,129,139,143,128,137,142,122,125,126,127,81,140,144,145,146,141,148,81,129,160,128,311,311,128,81,81,145,128,81,139,128,141,128,141,160,151,128,128,81,128,128,128,128,143,128,137,142,122,125,126,127,81,140,144,145,143,128,137,142,122,125,126,127,81,140,144,145,128,140,129,81,129,81,81,149,149,129,143,128,137,142,122,125,126,127,81,140,144,145,146,148,149,149,149,129,139,143,128,137,142,142,122,122,125,125,126,126,127,127,81,81,81,81,81,81,81,81,81,81,81,81,81,140,144,144,145,146,141,130,122,125,126,127,81,140,128,140,143,139,140,128,128,143,130,122,125,126,127,130,122,125,126,127,128,129,151,128,128,81,128,311,128,128,81,128,129,81,0,129,137,137,128,137,142,122,125,126,127,140,151,128,81,81,160,0,129,129,151,129,129,129,129,128,122,125,126,127,129,129,128,122,125,126,127,141,141,148,149,129,139,143,128,137,142,122,125,126,127,81,140,144,145,146,141,139,81,128,454,148,146,81,81,81,81,128,160,81,81,81,81,81,81,128,130,122,125,126,127,81,129,129,139,0,0,0,130,122,125,126,127,130,122,125,126,127,130,122,125,126,127,130,129,148,139,128,141,81,81,81,81,81,81,81,81,81,81,148,146,128,81,143,0,160,143,151,128,128,311,128,128,81,160,160,455,455,145,81,81,81,81,81,81,128,128,128,129,128,81,0,0,128,81,160,160,129,149,129,311,141,81,81,81,141,130,122,125,126,127,81,81,81,130,122,125,126,127,81,81,81,140,129,139,143,128,137,142,122,125,126,127,81,140,144,145,146,141,130,122,125,126,127,81,81,81,130,122,125,126,127,81,81,81,149,149,129,139,145,160,148,149,129,139,143,128,137,142,122,125,126,127,81,140,144,145,146,141,148,149,129,139,143,128,137,142,122,125,126,127,81,140,144,145,146,141,129,148,149,129,139,143,128,137,142,122,125,126,127,81,140,144,145,146,141,151,128,311,128,81,151,141,148,149,129,139,143,128,137,142,122,125,126,127,81,140,144,145,146,141,151,128,81,129,0,179,128,81,128,81,85,186,186,182,186,182,186,186,186,186,186,182,182,186,182,186,182,186,182,186,182,186,186,186,186,186,186,186,186,186,186,186,186,182,186,182,186,182,186,182,182,182,186,182,182,182,186,182,186,182,186,182,186,182,186,182,186,182,186,182,186,182,186,85,186,186,186,186,182,186,186,186,186,186,186,186,0,186,186,186,186,186,186,186,182,186,182,186,186,182,182,182,186,182,186,186,182,186,186,186,182,186,182,182,182,182,182,182,182,182,182,182,186,186,182,186,182,186,182,186,186,182,186,182,186,182,186,186,186,186,182,186,182,186,182,186,182,186,182,186,182,186,182,186,182,186,182,186,182,186,182,186,182,186,182,186,182,186,182,186,182,186,182,186,182,186,182,186,182,186,182,186,182,186,182,186,182,186,186,186,186,186,186,186,186,186,186,186,186,186,186,182,186,182,186,182,186,186,186,186,186,186,186,186,186,186,186,186,186,186,182,186,186,182,186,186,182,186,182,186,186,182,186,456,186,182,182,182,186,182,186,186,182,186,0,186,186,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,0,0,0,85,182,182,182,182,182,186,182,182,186,186,182,186,186,182,182,186,186,186,186,182,186,186,186,186,186,183,186,186,186,186,186,182,186,182,186,182,186,186,186,186,186,182,186,186,182,186,182,186,182,186,182,186,182,186,182,186,186,186,186,182,186,186,182,186,182,186,186,182,182,182,186,186,186,186,183,182,186,0,0,0,0,186,186,186,186,186,186,186,186,182,186,186,182,186,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,182,186,182,186,183,182,186,182,186,186,182,186,182,186,182,186,186,186,186,186,186,186,186,182,186,186,186,186,182,186,182,186,182,186,182,186,186,186,186,456,182,186,183,186,85,186,186,186,186,186,182,186,182,186,182,182,186,186,182,182,182,186,182,182,186,186,186,186,182,186,186,186,186,186,186,182,186,182,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,186,182,186,186,182,182,186,182,186,186,186,182,186,186,186,186,186,186,182,186,180,85,85,182,183,184,86,186,180,85,85,85,85,85,85,85,85,182,183,184,86,186,456,187,180,85,182,183,184,86,186,456,187,180,85,182,183,184,86,186,180,85,182,183,184,86,186,180,85,85,85,86,86,85,182,184,86,186,187,86,85,85,85,182,183,184,86,186,180,180,85,182,183,184,86,186,180,187,187,85,85,85,85,85,85,182,182,183,184,86,186,186,86,85,182,183,184,86,186,456,187,187,180,85,85,85,85,182,186,85,182,186,85,85,85,85,182,183,184,86,186,456,187,180,85,85,86,186,186,86,187,180,85,85,182,184,86,186,187,180,85,184,184,184,187,86,86,184,85,86,85,184,85,85,85,85,182,183,184,86,186,180,182,186,182,186,85,85,182,183,184,86,186,456,187,180,85,182,183,184,86,186,456,187,180,85,182,183,184,86,186,456,187,180,85,85,182,183,184,86,186,456,187,180,65,0,191,0,190,0,190,190,192,65,65,0,191,192,65,0,190,190,191,192,65,61,190,190,190,190,190,190,190,190,191,192,65,190,61,191,192,65,190,61,61,61,61,0,61,61,61,61,61,65,191,192,65,190,61,191,192,65,190,61,190,190,61,191,192,65,61,190,190,191,192,65,61,191,192,65,61,61,61,61,190,191,192,65,190,190,190,190,190,61,61,191,192,65,65,65,65,65,190,61,190,190,190,190,190,61,190,191,192,65,61,61,190,190,61,190,61,191,192,65,190,61,190,190,65,190,65,65,65,190,190,61,190,191,192,65,61,191,192,65,190,61,191,192,65,190,191,192,65,61,61,61,61,190,190,190,191,192,65,190,61,65,65,61,61,190,61,61,61,61,191,192,65,190,61,191,192,65,190,61,191,192,65,190,61,190,191,192,65,190,61,61,61,61,61,0,61,61,61,61,0,0,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,221,202,202,202,202,202,0,457,457,457,0,0,0,0,458,0,0,458,0,0,0,0,0,205,459,460,460,460,460,211,460,460,460,460,460,460,460,460,460,460,460,460,458,216,205,211,458,216,205,211,461,460,462,463,460,461,461,461,461,461,460,460,205,211,205,211,461,462,211,460,459,205,211,464,460,460,216,205,211,463,460,462,462,462,462,462,458,216,205,211,205,211,461,464,463,459,460,459,211,458,216,205,211,461,461,464,461,461,459,461,461,461,461,461,461,459,461,461,459,461,461,461,461,461,461,459,464,463,205,211,205,211,464,465,465,465,465,465,465,465,465,465,465,465,465,465,465,465,460,460,460,460,460,460,460,460,459,461,460,460,459,461,464,460,461,460,462,205,211,461,461,211,462,462,464,462,459,205,211,460,465,0,216,461,460,460,460,459,458,216,205,211,458,216,205,211,458,216,205,211,460,459,459,458,216,205,211,461,205,211,211,460,225,226,225,226,225,226,225,226,225,226,225,226,225,226,225,226,225,226,225,225,225,226,225,226,225,226,0,225,225,226,0,225,226,225,226,225,226,225,226,225,226,82,82,82,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,227,227,227,227,227,215,215,0,224,215,91,96,227,227,227,227,227,227,227,227,0,0,59,232,54,232,0,238,0,227,227,227,227,227,227,227,227,212,215,466,467,107,235,0,235,215,0,218,57,215,215,224,57,215,0,55,230,0,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,215,98,232,0,215,235,107,215,235,218,57,232,232,218,218,232,227,227,227,227,230,0,67,0,0,0,0,0,0,227,227,227,227,227,227,227,227,231,0,215,215,98,0,210,56,227,227,232,215,232,215,95,105,224,0,0,227,227,227,239,56,0,235,219,107,227,239,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,234,107,0,466,467,206,0,0,232,0,209,0,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,0,103,232,235,230,215,227,227,215,231,215,215,215,215,67,209,210,96,218,219,232,215,215,215,215,227,227,227,227,227,227,219,0,0,227,227,227,227,227,227,227,227,227,227,227,235,235,235,235,235,235,235,206,0,0,215,239,235,235,235,227,227,229,229,229,229,0,55,227,227,98,209,232,235,234,107,103,59,215,227,227,227,227,227,227,227,227,227,227,227,227,227,215,227,230,0,103,103,103,215,232,218,218,230,91,466,467,103,103,103,107,0,239,215,0,227,227,227,227,227,227,215,0,232,238,0,0,0,103,103,103,98,232,232,218,218,232,210,227,212,224,0,0,215,235,0,95,105,235,235,235,227,227,227,215,215,227,227,215,215,55,227,236,98,212,228,55,229,227,55,55,55,98,54,57,59,62,91,55,227,215,67,230,231,217,218,219,220,232,209,224,233,234,210,212,235,206,236,222,95,96,223,99,107,103,237,104,238,105,239,56,55,55,227,236,55,55,229,229,229,229,229,229,229,229,55,55,55,227,55,62,98,54,57,59,62,91,55,227,215,67,230,231,217,218,219,220,232,209,224,233,234,210,212,235,206,236,222,95,96,223,99,107,103,237,104,238,105,239,229,56,228,98,54,57,59,62,91,55,227,215,67,230,231,217,218,219,220,232,209,224,233,234,210,212,235,206,236,222,95,96,223,99,107,103,237,104,238,105,239,229,56,228,55,55,236,55,223,55,55,228,98,54,57,59,62,91,55,227,215,67,230,231,217,218,219,220,232,209,224,233,234,210,212,235,206,236,222,95,96,223,99,107,103,237,104,238,105,239,56,98,54,57,59,62,91,55,227,215,67,230,231,217,218,219,220,232,209,224,233,234,210,212,235,206,236,222,95,96,223,99,107,103,237,104,238,105,239,56,62,229,229,55,55,55,55,55,236,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,98,54,57,59,62,91,55,215,67,217,220,209,224,212,235,206,222,95,96,223,99,107,237,104,105,229,228,228,237,229,55,55,233,55,237,236,229,98,98,54,57,59,62,91,55,227,215,67,230,231,217,218,219,220,232,209,224,233,234,210,212,212,235,235,206,236,222,95,96,223,99,107,103,237,104,238,105,239,56,98,54,57,59,62,91,55,227,215,67,230,231,217,218,219,220,232,209,224,233,234,210,212,235,206,236,222,95,96,223,99,107,103,237,104,238,105,239,56,229,236,55,55,98,54,57,59,62,91,55,227,215,215,67,230,231,217,218,219,220,232,209,224,233,234,210,212,235,206,236,222,95,96,223,99,107,103,237,104,238,105,239,229,229,229,229,56,55,98,98,54,57,59,59,62,62,62,91,91,91,91,55,55,55,55,227,227,227,215,67,67,230,231,217,217,217,217,217,218,218,219,220,220,220,220,220,232,209,209,209,209,224,224,224,224,224,224,233,234,210,210,210,212,212,212,212,235,206,206,206,206,206,206,206,206,206,206,206,236,236,222,222,222,222,222,95,96,96,223,223,99,99,99,107,103,237,104,104,104,238,105,105,239,229,56,228,229,229,229,229,229,229,55,55,227,55,55,98,54,59,62,55,227,215,67,231,218,219,220,232,233,210,212,235,206,222,95,96,223,99,107,103,104,105,55,55,55,55,55,227,55,55,228,55,55,227,227,55,55,229,62,229,229,98,54,57,59,62,91,55,227,215,67,230,231,217,218,219,220,232,209,224,233,234,210,212,235,206,236,222,95,96,223,99,107,103,237,104,238,105,239,229,56,228,229,229,223,229,210,98,229,229,55,55,228,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,228,228,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,98,212,235,228,55,55,228,228,228,228,228,228,62,236,223,99,237,104,229,98,54,57,59,62,91,55,215,67,217,220,209,224,212,235,206,222,95,96,223,99,107,237,104,105,229,228,228,55,55,55,55,55,55,55,55,55,55,55,98,54,57,59,62,91,55,215,67,230,231,217,218,219,220,232,209,224,233,234,210,212,235,206,236,222,95,96,223,99,107,103,237,104,238,105,98,98,212,212,235,235,55,55,228,55,55,55,237,55,212,206,55,227,55,55,227,229,228,55,227,55,227,228,55,55,55,55,98,55,67,103,104,105,55,228,55,55,229,98,54,59,62,55,227,215,67,231,218,219,220,232,233,210,212,235,206,222,95,96,223,99,107,103,104,105,228,55,55,55,55,55,55,55,62,55,55,233,229,229,229,55,55,228,55,237,98,98,54,57,59,62,91,55,227,215,67,230,231,217,218,219,220,232,209,224,233,234,210,212,235,206,236,222,95,96,223,99,107,103,237,104,238,105,239,56,206,212,235,98,215,215,235,229,55,55,98,212,235,98,54,57,59,62,91,55,227,215,67,230,231,217,218,219,220,232,209,224,233,234,210,212,235,206,236,222,95,96,223,99,107,103,237,104,238,105,239,229,56,228,98,54,57,59,62,91,55,227,215,67,230,231,217,218,219,220,232,209,224,233,234,210,212,235,206,236,222,95,96,223,99,107,103,237,104,238,105,239,229,56,228,55,98,54,57,59,62,91,55,227,215,67,230,231,217,218,219,220,232,209,224,233,234,210,212,235,206,236,222,95,96,223,99,107,103,237,104,238,105,239,229,56,228,229,55,98,54,57,59,62,91,55,227,215,67,230,231,217,218,219,220,232,209,224,233,234,210,212,235,206,236,222,95,96,223,99,107,103,237,104,238,105,239,229,56,228,55,55,55,223,99,104,62,223,99,104,62,55,55,212,468,468,469,469,0,0,249,249,249,249,249,249,249,249,249,49,249,249,249,249,249,249,0,263,0,276,0,279,0,263,278,0,264,0,0,0,276,276,276,276,276,0,275,275,0,274,256,265,0,0,252,0,252,252,256,272,252,0,271,270,259,273,253,252,0,0,0,252,0,0,252,252,252,264,276,0,0,263,279,256,253,252,274,275,275,275,275,275,256,0,0,0,0,256,256,0,0,252,0,271,270,271,270,264,278,279,273,252,252,259,0,276,276,276,278,275,275,275,265,0,0,263,0,252,252,276,275,261,69,69,254,254,69,254,255,254,256,253,281,258,63,63,251,263,264,265,269,270,256,257,261,273,108,259,274,275,276,277,278,279,260,108,261,63,256,256,256,256,256,256,256,256,261,260,255,281,69,260,251,263,264,265,254,266,267,268,252,269,270,256,271,257,272,261,273,108,258,259,63,274,275,276,277,278,279,255,281,69,260,251,263,264,265,254,266,267,268,252,269,270,256,271,257,272,261,273,108,258,259,63,274,275,276,277,278,279,258,69,254,69,254,108,63,69,260,251,263,264,265,254,266,267,268,269,270,256,271,257,272,261,273,108,258,259,63,274,275,276,277,278,279,260,251,263,264,265,254,266,267,268,269,270,256,271,257,272,261,273,108,258,259,63,274,275,276,277,278,279,63,63,251,269,273,258,281,256,256,69,69,69,253,69,63,260,263,264,265,254,266,268,261,108,258,259,63,274,277,278,279,253,69,260,256,271,69,69,63,256,251,263,264,265,269,270,256,257,261,273,108,259,274,275,276,277,278,279,251,263,264,265,269,270,256,257,261,273,108,259,274,275,276,277,278,279,255,256,69,258,69,69,257,69,260,251,263,264,265,266,267,268,252,252,269,270,256,256,256,256,256,271,257,272,261,273,108,258,259,63,274,275,276,277,278,279,258,271,257,255,281,69,260,251,263,264,265,254,266,267,268,252,252,252,252,269,270,256,271,271,271,271,257,272,261,261,261,273,108,258,259,63,274,275,276,277,278,279,256,256,256,256,256,256,261,69,69,69,69,69,266,251,263,264,265,269,270,256,257,275,276,277,69,260,266,257,261,261,261,108,258,267,69,69,258,108,108,256,69,256,256,255,281,69,260,251,263,264,265,254,266,267,268,252,269,270,256,271,257,272,261,273,108,258,259,63,274,275,276,277,278,279,256,108,108,256,261,256,63,260,256,256,258,258,258,258,63,63,258,258,258,69,69,69,254,69,254,258,63,63,108,255,69,257,108,63,277,108,69,256,260,263,264,265,254,266,268,261,108,258,259,63,274,277,278,279,260,251,269,261,273,108,259,275,276,277,278,279,69,261,108,63,63,267,261,258,258,69,63,260,256,253,0,255,69,69,69,254,254,69,261,261,261,261,69,108,63,63,268,268,69,69,69,108,69,253,69,256,261,261,258,258,63,258,258,258,257,69,258,258,258,258,258,258,258,69,253,69,258,258,258,69,255,257,63,69,108,69,108,63,258,69,69,256,256,256,268,268,258,258,261,108,260,251,263,264,265,254,266,267,268,269,270,256,271,257,272,261,273,108,258,259,63,274,275,276,277,278,279,252,252,256,69,108,69,108,255,281,69,260,251,263,264,265,254,266,267,268,252,269,270,256,271,271,257,272,261,273,108,258,259,63,274,275,276,277,278,279,255,281,69,260,251,263,264,265,254,266,267,268,252,269,270,256,271,257,272,261,273,108,258,259,63,274,275,276,277,278,279,255,281,69,260,251,263,264,265,254,266,267,268,252,269,270,256,271,257,272,261,273,108,258,259,63,274,275,276,277,278,279,256,253,69,260,63,255,281,69,260,251,263,264,265,254,266,267,268,252,269,270,256,271,257,272,261,273,108,258,259,63,274,275,276,277,278,279,260,261,69,260,266,257,258,277,258,258,258,258,258,258,258,258,258,258,258,258,258,258,266,268,268,266,268,268,470,142,0,140,142,142,140,130,130,176,0,123,123,140,149,0,0,0,149,452,0,140,0,0,0,0,0,140,0,0,140,140,0,0,0,0,0,0,81,81,81,81,0,0,81,81,81,81,81,81,149,140,142,137,142,142,142,137,142,142,137,142,142,142,137,142,149,0,0,452,140,149,0,151,0,0,140,144,140,0,0,140,160,0,142,137,142,142,137,142,0,142,137,142,0,0,142,137,142,142,137,142,0,142,137,142,0,0,130,140,140,142,149,144,140,130,130,130,130,453,130,311,151,0,130,130,130,0,129,160,311,311,160,151,0,0,130,130,130,151,311,0,151,160,0,0,151,454,160,130,0,129,0,0,0,130,130,130,130,0,0,160,151,311,160,160,455,455,129,0,0,160,160,311,130,130,130,130,160,151,311,151,151,0,179,0,0,0,0,0,0,0,0,0,170,171,173,174,154,156,155,157,170,171,173,174,154,156,155,157,170,173,154,156,170,173,154,156,471,170,171,173,174,154,156,155,157,170,171,173,174,154,156,155,157,170,171,173,174,154,156,155,157,170,171,173,174,154,156,155,157,170,171,173,174,154,156,155,157,170,171,173,174,154,156,155,157,170,171,173,174,170,171,173,174,154,156,155,157,170,173,154,156,170,171,173,174,154,156,155,157,170,171,173,174,154,156,155,157,170,171,173,174,154,156,155,157,170,171,173,174,154,156,155,157,0,297,0,297,296,0,296,296,0,296,297,297,0,0,0,296,297,297,293,296,297,299,293,294,298,296,297,299,293,294,298,296,297,296,297,296,297,293,296,297,293,298,296,297,296,297,296,297,299,293,294,298,296,297,293,299,293,294,298,296,297,294,293,293,293,298,298,296,297,299,293,299,293,296,297,299,293,294,298,296,297,299,293,294,298,296,297,299,293,294,298,296,297,299,293,294,298,296,297,293,298,300,149,0,302,301,149,0,452,303,301,300,301,300,0,0,0,302,149,0,0,149,303,301,452,149,0,0,303,303,149,302,0,0,300,301,302,303,304,300,305,306,301,307,308,302,303,304,300,305,306,301,307,308,302,303,300,301,302,303,300,301,302,303,300,301,302,303,300,301,302,303,304,304,300,305,305,306,306,301,307,307,308,308,302,303,303,304,305,307,304,304,300,305,306,301,307,308,302,303,303,303,304,305,307,306,308,300,301,302,303,304,300,305,306,301,307,308,302,303,304,306,308,305,307,305,306,307,300,301,302,303,304,305,306,307,308,303,304,305,306,307,308,303,304,300,305,306,301,307,308,302,303,304,300,305,306,301,307,308,302,303,304,300,305,306,301,307,308,302,303,304,300,305,306,301,307,308,302,303,472,472,135,165,0,0,165,0,135,165,165,0,135,165,0,0,135,175,135,165,136,175,134,136,135,165,175,134,136,135,165,175,134,136,175,175,175,134,136,135,165,175,134,136,135,165,129,175,134,136,175,135,165,175,135,165,175,175,134,136,175,134,136,135,135,165,175,134,136,135,165,134,136,134,136,136,134,136,175,175,135,165,175,175,134,136,134,136,175,134,136,175,175,175,175,134,136,135,165,134,136,175,129,175,134,136,165,136,175,134,136,129,175,134,136,175,175,134,136,135,165,135,135,175,134,136,135,165,175,134,136,135,165,134,175,134,136,135,165,175,134,136,135,165,175,175,0,172,310,0,0,172,172,172,172,172,0,309,172,309,172,0,309,172,309,172,0,0,0,0,0,172,172,0,0,0,0,0,0,0,172,309,172,0,0,0,0,310,309,0,0,0,310,309,0,0,309,172,0,310,309,310,309,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,309,172,309,172,309,172,309,172,0,0,309,172,0,310,0,0,0,0,0,0,0,0,0,0,310,0,0,0,310,0,310,310,0,0,0,313,177,314,313,177,314,313,177,177,177,314,313,177,313,177,314,313,177,313,177,313,177,313,177,314,177,177,314,313,177,313,177,314,313,177,314,314,314,177,177,177,314,314,177,313,177,314,177,177,314,313,177,314,313,177,314,313,177,314,313,177,314,313,177,314,314,0,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,0,0,0,0,0,0,0,0,0,0,0,284,284,473,284,284,474,284,284,284,323,318,319,320,321,284,323,318,319,320,321,284,284,475,476,477,284,284,284,284,318,319,284,284,284,284,284,284,284,284,318,319,320,321,284,323,318,319,320,321,284,284,284,284,284,284,284,284,475,476,477,284,474,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,323,318,319,320,321,284,284,284,323,318,319,320,321,284,284,323,318,284,284,284,284,323,318,319,320,321,318,319,318,319,284,284,284,284,284,284,284,284,284,284,284,474,284,473,284,318,319,320,284,475,476,477,284,284,284,284,284,284,284,284,284,323,318,319,320,321,284,323,318,319,320,321,284,323,318,319,320,321,284,323,318,319,320,321,284,284,475,476,477,284,474,284,330,0,0,330,330,0,329,329,329,329,329,273,253,253,0,330,0,0,273,330,0,329,330,330,329,330,0,0,253,68,327,289,329,68,327,328,330,290,289,329,68,327,328,330,290,289,329,328,289,329,328,289,329,253,68,327,328,289,329,253,68,327,68,289,329,289,329,328,330,290,289,329,68,327,328,330,290,289,329,329,68,327,328,330,290,289,329,68,290,289,68,68,328,289,329,289,253,68,327,253,68,327,289,68,253,68,327,329,328,289,329,329,68,327,328,330,290,289,329,68,327,328,330,290,289,329,68,327,328,330,290,289,329,289,253,68,327,289,68,327,328,330,290,289,329,289,289,478,479,480,478,481,482,483,484,484,479,480,478,478,478,0,0,0,0,0,0,0,0,0,0,0,0,0,0,485,486,285,286,286,285,285,286,286,285,285,286,285,0,286,285,487,487,487,487,488,488,487,487,487,487,286,285,489,286,285,490,490,286,285,487,487,487,487,489,286,285,491,492,485,486,286,285,285,286,285,286,285,286,285,286,285,286,285,286,285,286,285,286,285,286,285,286,285,286,285,286,285,286,286,286,286,285,285,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,286,285,491,492,485,486,286,285,286,285,286,286,286,285,285,285,286,285,286,285,493,286,285,285,494,286,285,285,286,286,285,286,286,285,286,285,286,285,286,285,286,285,491,492,485,486,286,285,285,285,286,286,285,285,286,286,285,285,286,285,286,285,286,285,286,285,286,285,286,285,286,285,286,285,495,0,0,0,0,0,0,0,0,0,0,0,0,496,497,334,283,283,335,335,283,283,335,335,333,334,335,333,334,283,335,283,335,333,334,283,335,283,335,333,334,283,335,498,499,496,497,333,334,334,334,333,334,283,335,333,334,283,335,333,334,283,335,333,334,283,335,333,334,283,335,333,334,283,335,283,283,335,283,335,283,335,283,335,333,334,283,335,333,334,283,335,333,333,333,333,334,334,283,335,333,333,333,333,334,334,334,334,334,334,334,334,283,283,283,335,335,335,498,499,496,497,333,334,335,335,333,334,283,335,333,333,333,334,334,334,283,335,333,334,283,335,333,334,333,334,283,335,334,335,333,334,283,335,335,334,283,283,335,283,283,335,333,334,283,335,333,334,333,334,283,335,333,334,283,335,498,499,496,497,333,334,334,334,283,283,335,335,283,283,335,335,283,335,333,334,283,335,333,334,333,334,333,334,283,335,333,334,283,335,333,334,283,335,333,334,283,335,0,0,0,78,352,352,352,352,352,78,352,352,352,352,78,78,352,78,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,352,386,0,0,0,0,0,0,500,0,0,385,501,0,500,502,503,407,503,0,0,0,380,500,500,0,0,504,388,388,500,0,0,380,500,0,0,500,0,500,384,391,389,503,0,0,504,388,388,500,0,0,0,0,0,0,0,0,503,0,389,500,0,0,503,407,0,386,501,500,0,385,0,0,0,0,0,0,500,0,0,0,501,501,0,389,500,500,500,502,388,390,502,388,390,505,501,502,390,500,505,390,501,501,390,0,0,0,0,0,500,0,500,0,407,0,0,0,0,0,0,0,388,390,500,503,0,0,384,391,0,0,0,357,359,380,381,384,385,386,387,388,389,390,391,506,393,375,502,394,395,396,397,365,378,392,379,355,398,366,503,358,399,372,360,351,373,377,501,504,400,401,402,376,408,500,363,403,505,367,371,370,380,404,405,406,381,382,407,364,383,369,357,356,368,384,385,374,359,386,387,362,388,389,390,353,361,391,506,393,375,502,394,395,396,397,365,378,392,379,355,398,366,503,358,399,372,360,351,373,377,501,504,400,401,402,376,408,500,363,403,505,367,371,370,380,404,405,406,381,382,407,364,383,369,357,356,368,384,385,374,359,386,387,362,388,389,390,353,361,391,380,381,382,383,384,385,386,387,388,389,390,391,380,381,382,383,384,385,386,387,388,389,390,391,0,383,383,408,365,369,357,368,380,382,391,378,392,379,359,393,375,394,395,396,397,365,378,392,379,355,398,366,358,399,372,360,351,373,377,400,401,402,376,363,403,367,371,370,404,405,406,381,364,369,357,356,368,374,359,362,353,361,380,381,384,385,386,387,388,389,390,391,380,381,384,385,386,387,388,389,390,391,393,375,394,365,355,366,399,372,360,373,377,376,363,371,370,404,405,406,381,382,364,383,369,357,356,368,374,359,362,353,361,380,381,382,407,384,385,386,387,388,389,390,391,506,393,375,502,394,395,396,397,365,378,392,379,355,398,366,503,358,399,372,360,351,373,377,501,504,400,401,402,376,408,500,363,403,505,367,371,370,380,404,405,406,381,382,407,364,383,369,357,356,368,384,385,374,359,386,387,362,388,389,390,353,361,391,408,351,387,383,383,375,506,393,375,502,394,395,396,397,365,378,392,379,355,398,366,503,358,399,372,360,351,373,377,501,504,400,401,402,376,408,500,363,403,505,367,371,370,380,404,405,406,381,382,407,364,383,369,357,356,368,384,385,374,359,386,387,362,388,389,390,353,361,391,382,0,0,387,506,393,375,394,395,396,397,365,378,392,379,355,398,366,358,399,372,360,351,373,377,400,401,402,376,408,363,403,367,371,370,404,405,406,381,364,369,357,356,368,374,359,362,353,361,359,0,380,382,391,383,0,382,383,384,389,391,383,383,0,380,381,382,383,384,385,386,387,388,389,390,391,506,393,375,502,394,395,396,397,365,378,392,379,355,398,366,503,358,399,372,360,351,373,377,501,504,400,401,402,376,408,500,363,403,505,367,371,370,380,404,405,406,381,382,407,364,383,369,357,356,368,384,385,374,359,386,387,362,388,389,390,353,361,391,506,393,375,502,394,395,396,397,365,378,392,379,355,398,366,503,358,399,372,360,351,373,377,501,504,400,401,402,376,408,500,363,403,505,367,371,370,380,404,405,406,381,382,407,364,383,369,357,356,368,384,385,374,359,386,387,362,388,389,390,353,361,391,506,393,375,502,394,395,396,397,365,378,392,379,355,398,366,503,358,399,372,360,351,373,377,501,504,400,401,402,376,408,500,363,403,505,367,371,370,380,404,405,406,381,382,407,364,383,369,357,356,368,384,385,374,359,386,387,362,388,389,390,353,361,391,351,0,506,393,375,502,394,395,396,397,365,378,392,379,355,398,366,503,358,399,372,360,351,373,377,501,504,400,401,402,376,408,500,363,403,505,367,371,370,380,404,405,406,381,382,407,364,383,369,357,356,368,384,385,374,359,386,387,362,388,389,390,353,361,391,387,410,411,412,413,414,415,416,417,418,410,411,412,413,414,415,416,417,418,410,411,412,413,414,415,416,417,418,410,411,412,413,414,415,416,417,418,410,411,412,413,414,415,416,417,418,410,411,412,413,414,415,416,417,418,410,411,412,413,414,415,416,417,418,0,410,411,412,413,414,415,416,417,418,410,411,412,413,414,415,416,417,418,410,411,412,413,414,415,416,417,418,0,410,411,412,413,414,415,416,417,418,0,0,410,411,412,413,414,415,416,417,418,0,0,0,0,0,410,411,412,413,414,415,416,417,418,410,411,412,413,414,415,416,417,418,410,411,412,413,414,415,416,417,418,410,411,412,413,414,415,416,417,418,410,411,412,413,414,415,416,417,418,410,411,412,413,414,415,416,417,418,419,420,419,420,419,420,419,420,419,420,419,420,419,420,419,420,419,420,419,419,419,420,419,420,0,419,420,0,419,419,420,419,420,419,420,419,420,419,420,419,420,421,421,421,421,421,421,421,421,421,421,421,421,0,421,421,421,421,421,421,0,0,426,426,427,0,0,0,428,0,427,0,426,428,427,426,426,0,426,0,422,426,427,428,426,427,425,422,428,423,424,426,427,425,422,428,423,424,422,423,424,425,426,427,425,422,428,423,424,426,427,425,422,428,423,424,0,422,426,428,426,426,427,428,426,427,428,426,427,425,422,428,423,426,427,425,422,428,423,424,423,424,426,427,425,422,428,423,424,425,424,422,423,425,424,422,423,425,422,423,424,422,422,507,425,422,423,424,423,424,427,425,426,428,507,424,426,427,425,422,428,423,424,426,427,425,422,428,423,424,426,427,425,422,428,423,424,426,427,425,422,428,423,424,425,422,423,427,425,426,427,425,422,428,423,424,508,508,429,430,429,430,429,430,429,430,429,430,429,430,429,430,429,430,429,430,429,430,429,430,429,430,429,430,0,429,430,0,429,430,429,430,429,430,429,430,429,430,429,430,429,430,431,432,433,431,432,433,431,432,433,431,432,433,431,432,433,431,432,433,431,432,433,431,432,433,431,432,433,431,432,431,432,431,432,433,431,432,433,0,431,432,433,0,0,431,432,431,432,433,431,432,433,431,432,433,431,432,433,431,432,433,431,432,433,434,435,436,437,438,439,440,441,434,435,436,437,438,439,440,441,434,435,436,437,438,439,440,441,434,435,436,437,438,439,440,441,434,435,436,437,438,439,440,441,434,435,436,437,438,439,440,441,434,435,436,437,438,439,440,441,434,435,436,437,438,439,440,441,434,435,436,437,438,439,440,441,434,435,436,437,438,439,434,435,436,437,438,439,434,435,436,437,438,439,440,441,434,435,436,437,438,439,440,441,0,434,435,436,437,438,439,440,441,0,0,0,0,0,0,434,435,436,437,438,439,434,435,436,437,438,439,440,441,434,435,436,437,438,439,440,441,434,435,436,437,438,439,440,441,434,435,436,437,438,439,440,441,434,435,436,437,438,439,440,441,0,434,435,436,437,438,439,440,441,442,442,442,442,0,93,442,442,442,442,442,442,93,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,442,0,0,459,93,442,93,442,93,442,93,442,459,93,442,93,93,93,442,459,459,93,442,459,459,459,459,459,459,459,93,442,459,93,442,93,442,93,442,459,459,93,442,450,451],"f":[0,0,0,0,0,[[1,2],1],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[1,2],1],0,0,0,[-1,-1,[]],[1,3],[[1,4,4,[6,[5]]],1],0,[1,1],0,0,[[1,-1],1,[[8,[7]]]],0,[-1,-2,[],[]],0,0,[[1,[9,[-1]]],1,[[8,[7]]]],[[1,2],1],[[1,[9,[-1]]],1,[[8,[7]]]],[[1,2],1],0,0,[-1,1,10],[[1,-1],1,11],[[1,-1],1,[[8,[12]]]],[[1,2],1],0,[1,13],[[1,14],1],[1,1],0,[[1,-1],1,15],[[1,2],1],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],0,0,0,0,[[1,2],1],[[1,2],1],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-2],[[18,[-1,-2]]],19,19],[-1,13,[]],[[[20,[-1,2]],-2],[],19,19],[[[21,[-1,-2]],-3],[],[19,19],[19,19],19],[[[22,[-1]],-2],[],[19,19],19],[[[18,[-1,-2]],-3],[],[],[],19],[[[20,[-1,2]],-2],[],19,19],[[[21,[-1,-2]],-3],[],[19,19],[19,19],19],[[[23,[-1,-2]],-3],[],[],[],19],[[[22,[-1]],-2],[],[19,19],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[20,[-1,-2]]],[[20,[-1,-2]]],19,[]],[[[24,[-1,-2]]],[[24,[-1,-2]]],19,[]],[[[25,[-1,-2]]],[[25,[-1,-2]]],19,[]],[[[26,[-1]]],[[26,[-1]]],[]],[[[21,[-1,-2]]],[[21,[-1,-2]]],27,27],[[[28,[-1]]],[[28,[-1]]],[]],[[[29,[-1,-2]]],[[29,[-1,-2]]],[],[]],[[[30,[-1,-2]]],[[30,[-1,-2]]],27,27],[[[23,[-1,-2]]],[[23,[-1,-2]]],27,27],[[[22,[-1]]],[[22,[-1]]],27],[[[18,[-1,-2]]],[[18,[-1,-2]]],27,27],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[],[[28,[-1]]],31],[[],[[29,[-1,-2]]],31,31],[[[20,[-1,-2]],32],[[16,[13,33]]],19,[]],[[[24,[-1,-2]],32],[[16,[13,33]]],19,[]],[[[25,[-1,-2]],32],[[16,[13,33]]],19,[]],[[[26,[-1]],32],[[16,[13,33]]],[]],[[[21,[-1,-2]],32],[[16,[13,33]]],19,19],[[[28,[-1]],32],[[16,[13,33]]],[]],[[[29,[-1,-2]],32],[[16,[13,33]]],[],[]],[[[30,[-1,-2]],32],[[16,[13,33]]],34,34],[[[23,[-1,-2]],32],[[16,[13,33]]],34,34],[[[22,[-1]],32],[[16,[13,33]]],19],[[[18,[-1,-2]],32],[[16,[13,33]]],34,34],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],[],[],35],[[-1,-2],9,[],35],[[-1,36],-2,[],[]],[[-1,36],[[9,[-2]]],[],[]],[[[20,[-1,-2]],-3],13,19,[],37],[[[24,[-1,-2]],-3],13,19,[],37],[[[25,[-1,-2]],-3],13,19,[],37],[[[26,[-1]],-2],13,[],37],[[[21,[-1,-2]],-3],13,38,38,37],[[[28,[-1]],-2],13,[],37],[[[29,[-1,-2]],-3],13,[],[],37],[[[30,[-1,-2]],-3],13,38,38,37],[[[23,[-1,-2]],-3],13,38,38,37],[[[22,[-1]],-2],13,38,37],[[[18,[-1,-2]],-3],13,38,38,37],[[[25,[-1,-2]]],39,[],[]],[[-1,39],[[25,[-1,-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[21,[-1,[29,[-2]]]]],[],[]],[[-1,-2],[[20,[-1,-3]]],[],11,[]],[[-1,-2],[[24,[-1,-3]]],[],11,[]],[[-1,39],[[25,[-1,-2]]],[],[]],[-1,[[26,[-1]]],[]],[[-1,-2],[[21,[-1,-2]]],19,19],[[],[[28,[-1]]],[]],[[],[[29,[-1,-2]]],[],[]],[[-1,-2],[[30,[-1,-2]]],[],[]],[[-1,-2],[[23,[-1,-2]]],19,19],[[-1,-2],[[18,[-1,-2]]],19,19],[[],-1,[]],[[],-1,[]],[[-1,-2],[[23,[-1,-2]]],19,19],[[-1,-1],2,[]],[[-1,36,40,-2],13,[],[27,11]],[-1,13,[]],[[-1,-2],[[21,[-1,-2]]],[],19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,[[21,[-1,[28,[-2]]]]],19,[]],[[-1,-2],-3,[],10,[]],[[[20,[-1,-2]],-3],-4,19,[],10,[]],[[[24,[-1,-2]],-3],-4,19,[],10,[]],[[[25,[-1,-2]],-3],-4,19,[],10,[]],[[[26,[-1]],-2],-3,[],10,[]],[[[21,[-1,-2]],-3],-4,19,19,10,[]],[[[28,[-1]],-2],-3,[],10,[]],[[[29,[-2,-1]],-3],-4,[],[27,[41,[-1]]],10,[]],[[[30,[-1,-2]],-3],-4,[27,19],[27,19],10,[]],[[[23,[-1,-2]],-3],-4,19,19,10,[]],[[[22,[-1]],-2],-3,19,10,[]],[[[18,[-1,-2]],-3],-4,19,19,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[36,42],43],[[44,44],13],[[36,-1],13,[[46,[[45,[5]]]]]],[[36,-1],13,11],[[47,-1],13,11],[[36,-1],13,11],[[36,-1],[[16,[13,48]]],49],[[47,50,[9,[50]],-1],51,11],[[36,50,[9,[50]],-1],51,11],[[36,52,-1],13,15],[53,[[9,[54]]]],[53,55],[47,55],[53,[[9,[[6,[56]]]]]],[53,[[6,[57]]]],[53,58],[53,59],[53,58],[53,59],[53,55],[53,58],[53,59],[53,58],[53,59],[53,58],[47,58],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[60,61],[53,61],[47,61],[53,[[9,[[6,[62]]]]]],[53,63],0,[[-1,64],13,[]],[[47,64],13],[[36,64],13],[47,13],[53,55],[53,65],[53,65],[53,65],[53,65],[53,61],[47,61],[3,3],[[-1,-2],13,[],[]],[47,40],[36,40],0,[-1,[[9,[-2]]],[],[]],[53,[[9,[-1]]],[]],[47,[[9,[-1]]],[]],[36,[[9,[-1]]],[]],[[],36],[53,[[45,[66]]]],[53,67],[[53,[69,[68]],63],13],[[53,[69,[68]],63],13],[[53,[69,[68]],63],13],[[53,[69,[68]],63],13],[[53,[69,[68]]],13],[[53,[69,[68]],63],13],[[53,[69,[68]],61,[13,[58,58]]],13],[[53,[69,[68]]],13],[[53,[69,[68]],61,[13,[58,58]],58],13],[[53,[69,[68]],61,[13,[58,58]]],13],[[-1,-2],13,[],[70,71]],[[47,-1],13,[70,71]],[[3,-1],[[16,[13,72]]],[70,71]],[[36,-1],13,[70,71]],[[-1,73],13,[]],[[47,73],13],[[36,73],13],[[-1,40,-2],13,[],[70,71]],[[47,40,-1],13,[70,71]],[[3,40,-1],[[16,[13,72]]],[70,71]],[[36,40,-1],13,[70,71]],[47,74],[36,74],0,[-1,40,[]],[47,40],[[44,32],[[16,[13,33]]]],[[72,32],[[16,[13,33]]]],[[72,32],[[16,[13,33]]]],[47,13],[36,13],[47,13],[47,13],[[47,2],13],[[36,2],13],[47,40],[53,55],[[53,40],58],[47,58],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[47,[[16,[75,[77,[76]]]]]],[36,3],[47,[[9,[-1]]],78],[47,2],[47,40],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[47,2],[[47,-1],2,79],[47,2],[47,2],[47,2],[47,2],[47,2],[47,2],[47,2],[47,2],[47,2],[47,2],[[47,80],13],[47,[[9,[40]]]],[[3,75,81,82],[[16,[13,72]]]],[[83,75,81,82],13],[[36,80,81,82],13],[47,13],[[53,58],58],[[47,58],58],[-1,[[77,[84]]],[]],[53,85],[47,85],[[47,-1],13,10],[[47,51,-1],13,11],[[36,51,-1],13,11],[53,[[86,[40]]]],[47,[[86,[40]]]],[[47,-1],13,10],[[36,-1],13,10],[47,13],[36,13],[47,13],[36,13],[47,13],[36,13],[36,47],[36,83],[[7,87],36],[[88,39],44],[[36,40],47],[[47,39],[[9,[40]]]],[[],-1,[]],[[47,87],13],[53,58],[53,55],[53,58],[53,58],[-1,40,[]],[47,40],[[53,58],58],[[47,58],58],[[47,-1,50],13,79],[[47,-1,80,50],13,79],[47,89],[36,89],[3,[[16,[13,72]]]],[47,13],[47,[[16,[13,48]]]],[36,13],[[47,80],[[9,[40]]]],[[36,80],[[9,[40]]]],[53,58],[47,58],[36,58],[[-1,-2,90],64,[],[70,71]],[[47,-1,90],64,[70,71]],[[36,-1,90],64,[70,71]],[[-1,73,90],64,[]],[[47,73,90],64],[[36,73,90],64],[[-1,40,-2,90],64,[],[70,71]],[[47,40,-1,90],64,[70,71]],[[36,40,-1,90],64,[70,71]],[53,55],[[-1,73],[[16,[13,13]]],[]],[[47,2],13],[[47,54],13],[[47,55],13],[[47,65],13],[[47,61],13],[[44,61],13],[[44,-1],13,[[8,[[77,[[45,[5]]]]]]]],[[44,-1],13,[[8,[[77,[[45,[58]]]]]]]],[[44,-1],13,[[8,[[77,[[45,[58]]]]]]]],[[47,2],13],[[47,91],13],[[47,75],[[16,[13,[77,[76]]]]]],[[47,92],13],[[36,[45,[80]]],13],[[47,67],13],[[47,-1],13,[[8,[93]]]],[[47,2],13],[[47,2],13],[[47,80],13],[[36,-1],13,11],[[47,52],13],[[36,52],13],[[47,65],13],[[47,94],13],[[44,87],13],[[44,87],13],[[47,80],13],[[44,87],13],[[44,87],13],[[44,87],13],[[47,58],13],[[47,-1],13,[[8,[95]]]],[[47,-1],13,[[8,[95]]]],[[47,2],13],[[47,-1],13,[[8,[96]]]],[[47,2],13],[[47,2],13],[[47,65],13],[[47,97],13],[[44,97],13],[[47,-1],13,[[8,[98]]]],[[47,-1],13,[[8,[99]]]],[[47,80],13],[[44,100],13],[[44,101],13],[[47,102],13],[[47,65],13],[[47,-1],13,[[8,[[6,[103]]]]]],[[47,104],13],[[47,-1],13,[[8,[104]]]],[[47,87],13],[[47,2],13],[[44,-1],13,[[8,[[77,[80]]]]]],[[47,105],13],[[47,7],13],[[44,-1],13,[[8,[[77,[[45,[5]]]]]]]],[[47,106],13],[[47,-1],13,[71,10]],[[3,-1],13,[71,10]],[[83,-1],13,[71,10]],[[36,-1],13,[71,10]],[[47,51],13],[[36,51],13],[[47,51],13],[[36,51],13],[53,[[9,[107]]]],[[47,80],13],[53,2],[[47,51],2],[[36,51],2],[-1,-2,[],[]],[-1,75,[]],[[-1,47],75,[]],[[47,80,2],13],[53,108],[47,108],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[47,13],[47,87],[36,87],[53,[[9,[105]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[47,7],[36,7],[[47,40,-1],-2,10,[]],[[36,40,-1],-2,10,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,70,[]],[-1,70,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[102,102],[109,109],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[],102],[[],110],0,[[102,102],2],[[109,109],2],[[-1,70],2,[]],[[-1,70],2,[]],[[74,47,73],13],[[102,32],[[16,[13,33]]]],[[109,32],[[16,[13,33]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[110,102],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[36,74],[[],-1,[]],[[],-1,[]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[111,111],[112,112],[113,113],[114,114],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[111,111],2],[[112,112],2],[[113,113],2],[[114,114],2],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[111,32],[[16,[13,33]]]],[[112,32],[[16,[13,33]]]],[[113,32],[[16,[13,33]]]],[[114,32],[[16,[13,33]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,36],[],[]],[[-1,36],9,[]],[[111,-1],13,37],[[112,-1],13,37],[[113,-1],13,37],[[114,-1],13,37],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],111],[[],112],[[],113],[[],114],0,[[-1,36,40,-2],13,[],11],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[[111,74,-1],-2,10,[]],[[112,74,-1],-2,10,[]],[[113,74,-1],-2,10,[]],[[114,-1],-2,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[115,115],[116,116],[117,117],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[115,115],2],[[116,116],2],[[117,117],2],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[115,32],[[16,[13,33]]]],[[116,32],[[16,[13,33]]]],[[117,32],[[16,[13,33]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[115,-1],13,37],[[116,-1],13,37],[[117,-1],13,37],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],115],[[],116],[[],117],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[[115,110,-1],-2,10,[]],[[116,110,-1],-2,10,[]],[[117,-1],-2,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[118,118],[64,64],[119,119],[51,51],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[73,13],[120,13],[[],120],[[73,40],73],[[118,118],2],[[64,64],2],[[119,119],2],[[51,51],2],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[73,32],[[16,[13,33]]]],[[118,32],[[16,[13,33]]]],[[64,32],[[16,[13,33]]]],[[119,32],[[16,[13,33]]]],[[51,32],[[16,[13,33]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[73,-1],13,10],[-1,73,[70,71]],[[],-1,[]],[[73,40],73],0,[[73,118],73],0,[73,[[9,[-1]]],[70,71]],[[73,40],73],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[81,58],81],[[-1,-2],13,[],121],[[[122,[-1]],-2],13,[123,124],121],[[[125,[-1]],-2],13,123,121],[[[126,[-1]],-2],13,[123,124],121],[[[127,[-1]],-2],13,123,121],[[-1,-1,-2],13,[],121],[[[122,[-1]],[122,[-1]],-2],13,[123,124],121],[[[125,[-1]],[125,[-1]],-2],13,123,121],[[[126,[-1]],[126,[-1]],-2],13,[123,124],121],[[[127,[-1]],[127,[-1]],-2],13,123,121],[[-1,-2,-3],13,[],121,121],[[[122,[-1]],-2,-3],13,[123,124],121,121],[[[125,[-1]],-2,-3],13,123,121,121],[[[126,[-1]],-2,-3],13,[123,124],121,121],[[[127,[-1]],-2,-3],13,123,121,121],[[-1,-2],13,[],121],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,[[45,[5]]],[]],[81,[[45,[5]]]],[[[128,[-1,-2]]],[[129,[45]]],130,[[46,[45]],131]],[81,[[9,[[129,[[45,[58]]]]]]]],[[[128,[-1,-2]]],[[129,[45]]],130,[[132,[45]],131]],[81,[[9,[[129,[[45,[133]]]]]]]],[81,[[9,[[129,[[45,[5]]]]]]]],[81,[[9,[[128,[[125,[133]],[6,[133]]]]]]]],[81,[[9,[[128,[[125,[5]],[6,[5]]]]]]]],[81,[[9,[[128,[[127,[133]],[6,[133]]]]]]]],[81,[[9,[[128,[[127,[5]],[6,[5]]]]]]]],[[[129,[-2]]],[[129,[[45,[-1]]]]],[],[[132,[[45,[-1]]]]]],[81,[[9,[[128,[[125,[133]],[6,[133]]]]]]]],[81,[[9,[[128,[[125,[5]],[6,[5]]]]]]]],[81,[[9,[[128,[[127,[133]],[6,[133]]]]]]]],[81,[[9,[[128,[[127,[5]],[6,[5]]]]]]]],[81,[[9,[[128,[[122,[133]],[6,[133]]]]]]]],[81,[[9,[[128,[[122,[58]],[6,[58]]]]]]]],[81,[[9,[[128,[[122,[5]],[6,[5]]]]]]]],[81,[[9,[[128,[[126,[133]],[6,[133]]]]]]]],[81,[[9,[[128,[[126,[58]],[6,[58]]]]]]]],[81,[[9,[[128,[[126,[5]],[6,[5]]]]]]]],[[[129,[-2]]],[[45,[-1]]],[],[[132,[[45,[-1]]]]]],[[[128,[-1,-2]]],-2,130,131],[[[129,[-2]]],[[129,[[45,[-1]]]]],[],[[46,[[45,[-1]]]]]],[81,[[9,[[128,[[122,[133]],[6,[133]]]]]]]],[81,[[9,[[128,[[122,[58]],[6,[58]]]]]]]],[81,[[9,[[128,[[122,[5]],[6,[5]]]]]]]],[81,[[9,[[128,[[126,[133]],[6,[133]]]]]]]],[81,[[9,[[128,[[126,[58]],[6,[58]]]]]]]],[81,[[9,[[128,[[126,[5]],[6,[5]]]]]]]],[[[129,[-2]]],[[45,[-1]]],[],[[46,[[45,[-1]]]]]],[[[129,[-1]]],[[16,[[134,[45,-2]],135]]],[[46,[45]]],130],[[[129,[-1]]],[[16,[[136,[45,-2]],135]]],[[132,[45]]],130],[[[129,[-1]]],[[16,[[134,[45,-2]],135]]],[[132,[45]]],130],[137,133],[[-1,-1],13,[]],[[[122,[-1]],[122,[-1]]],13,[123,124]],[[[125,[-1]],[125,[-1]]],13,123],[[[126,[-1]],[126,[-1]]],13,[123,124]],[[[127,[-1]],[127,[-1]]],13,123],[[-1,4,4],13,[]],[[[128,[-1,-2]],4,4,-1],13,130,[131,138]],[[81,4,4,[126,[5]]],13],[[81,58],81],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[13,[4,4,4,4]]],[]],[[[129,[-1]]],[[13,[5,4,4]]],[]],[[[128,[-1,-2]]],[[13,[4,4,4,4]]],130,[131,131]],[81,[[13,[4,4,4,4]]]],[[81,106],81],[139,[[128,[[126,[5]],[6,[5]]]]]],[139,[[128,[[126,[5]],[6,[5]]]]]],[137,5],[140,2],[140,2],[[[141,[-1]],4,4,4,4],13,[]],[137,5],[142,5],[-1,45,[]],[[[122,[-1]]],[[45,[-1]]],[123,124]],[[[125,[-1]]],[[45,[-1]]],123],[[[126,[-1]]],[[45,[-1]]],[123,124]],[[[127,[-1]]],[[45,[-1]]],123],[-1,13,[]],[[[122,[-1]]],[[13,[-1,-1,-1,-1]]],[123,124]],[[[125,[-1]]],[[13,[-1,-1,-1,-1]]],123],[[[126,[-1]]],[[13,[-1,-1,-1,-1]]],[123,124]],[[[127,[-1]]],[[13,[-1,-1,-1,-1]]],123],[-1,45,[]],[[[122,[-1]]],[[45,[-1]]],[123,124]],[[[125,[-1]]],[[45,[-1]]],123],[[[126,[-1]]],[[45,[-1]]],[123,124]],[[[127,[-1]]],[[45,[-1]]],123],[[[129,[-1]]],[[129,[-1]]],27],[139,139],[143,143],[[[128,[-1,-2]]],[[128,[-1,-2]]],130,[131,27]],[137,137],[142,142],[[[122,[-1]]],[[122,[-1]]],27],[[[125,[-1]]],[[125,[-1]]],27],[[[126,[-1]]],[[126,[-1]]],27],[[[127,[-1]]],[[127,[-1]]],27],[81,81],[140,140],[144,144],[145,145],[[[146,[-1]]],[[146,[-1]]],147],[[[141,[-1]]],[[141,[-1]]],27],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[148,[[16,[[6,[139]],149]]]],[81,137],0,[-1,137,[]],[[[128,[-1,-2]]],[[128,[-3,6]]],130,131,[130,[150,[-1]]]],[[-1,-2,4,4],[[16,[13,149]]],[],151],[[-1,152,4,4],2,[]],[[[128,[-1,-2]],152,4,4],2,130,[131,138]],[[81,4,4,4,4],81],[[81,4,4,4,4],81],[145,153],[[],[[128,[-1,-2]]],130,31],[[],81],[139,143],[[[128,[-1,-2]]],[],130,131],[[[141,[-1]]],[],131],[[[128,[-1,-2]]],[],130,[131,138]],[[[141,[-1]]],[],138],[-1,[[13,[4,4]]],[]],[-1,[[13,[4,4]]],[]],[[[128,[-1,-2]]],[[13,[4,4]]],130,[131,131]],[[[128,[-1,-2]]],[[13,[4,4]]],130,131],[81,[[13,[4,4]]]],[[[128,[-1,-2]]],[[154,[-1]]],130,131],[[[128,[-1,-2]]],[[155,[-1]]],130,[131,138]],[[[128,[-1,-2]]],[[156,[-1]]],130,131],[[[128,[-1,-2]]],[[157,[-1]]],130,[131,138]],[[143,143],2],[[[128,[-1,-2]],[128,[-1,-2]]],2,[158,130],158],[[137,137],2],[[142,142],2],[[[122,[-1]],[122,[-1]]],2,158],[[[125,[-1]],[125,[-1]]],2,158],[[[126,[-1]],[126,[-1]]],2,158],[[[127,[-1]],[127,[-1]]],2,158],[[81,81],2],[[140,140],2],[[144,144],2],[[145,145],2],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[[128,[[125,[5]],[6,[5]]]],[45,[[13,[5,5,5]]]],[9,[5]]],[[128,[[126,[5]],[6,[5]]]]]],[140,[[45,[80]]]],[[[129,[-1]]],[[13,[39,39,39]]],[]],[[81,[45,[58]]],81],[[[129,[-1]],39],2,[]],[81,81],[81,81],[[149,32],[[16,[13,33]]]],[[149,32],[[16,[13,33]]]],[[[129,[-1]],32],[[16,[13,33]]],34],[[143,32],[[16,[13,33]]]],[[[128,[-1,-2]],32],[[16,[13,33]]],[34,130],34],[[137,32],[[16,[13,33]]]],[[142,32],[[16,[13,33]]]],[[[122,[-1]],32],[[16,[13,33]]],34],[[[125,[-1]],32],[[16,[13,33]]],34],[[[126,[-1]],32],[[16,[13,33]]],34],[[[127,[-1]],32],[[16,[13,33]]],34],[[81,32],[[16,[13,33]]]],[[140,32],[[16,[13,33]]]],[[144,32],[[16,[13,33]]]],[[145,32],[[16,[13,33]]]],[[[146,[-1]],32],[[16,[13,33]]],[34,147]],[-1,-1,[]],[-1,-1,[]],[48,149],[135,149],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[137,142],[-1,-1,[]],[[[159,[-1]]],[[122,[-1]]],[]],[-1,-1,[]],[[[159,[-1]]],[[125,[-1]]],[]],[-1,-1,[]],[-1,-1,[]],[[[159,[-1]]],[[126,[-1]]],[]],[[[159,[-1]]],[[127,[-1]]],[]],[-1,-1,[]],[[[128,[[127,[133]],[6,[133]]]]],81],[-1,-1,[]],[[[128,[[122,[133]],[6,[133]]]]],81],[[[128,[[127,[58]],[6,[58]]]]],81],[[[128,[[125,[133]],[6,[133]]]]],81],[[[128,[[125,[58]],[6,[58]]]]],81],[[[128,[[127,[5]],[6,[5]]]]],81],[[[128,[[122,[58]],[6,[58]]]]],81],[[[128,[[122,[5]],[6,[5]]]]],81],[[[128,[[126,[5]],[6,[5]]]]],81],[[[128,[[126,[133]],[6,[133]]]]],81],[[[128,[[125,[5]],[6,[5]]]]],81],[[[128,[[126,[58]],[6,[58]]]]],81],[-1,-1,[]],[-1,-1,[]],[140,144],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],-1,[]],[[-1,-1,-1,-1],[[122,[-1]]],[123,124]],[[-1,-1,-1,-1],[[125,[-1]]],123],[[-1,-1,-1,-1],[[126,[-1]]],[123,124]],[[-1,-1,-1,-1],[[127,[-1]]],123],[-1,[[16,[81,149]]],160],[-1,[[9,[140]]],[[46,[161]]]],[[4,4,-1],[[128,[-2,6]]],121,130],[-1,[[9,[140]]],[[46,[80]]]],[[4,4],143],[[[128,[[126,[5]],[6,[5]]]],4,4,143],139],[-1,[[16,[140,149]]],[[46,[162]]]],[[4,4,-1],[[128,[-1,6]]],130],[[4,4,-1],[[9,[[128,[-2,-1]]]]],131,130],[50,143],[45,-1,[]],[[[45,[-1]]],[[122,[-1]]],[123,124]],[[[45,[-1]]],[[125,[-1]]],123],[[[45,[-1]]],[[126,[-1]]],[123,124]],[[[45,[-1]]],[[127,[-1]]],123],[45,-1,[]],[[[45,[-1]]],[[122,[-1]]],[123,124]],[[[45,[-1]]],[[125,[-1]]],123],[[[45,[-1]]],[[126,[-1]]],[123,124]],[[[45,[-1]]],[[127,[-1]]],123],[[4,4,6],[[9,[[128,[-1,6]]]]],130],[[[129,[-2]],5,4,4],[[9,[-1]]],[],[[132,[[45,[-1]]]]]],[[-1,4,4],[],[]],[[[128,[-1,-2]],4,4],-1,130,[131,131]],[[[128,[-1,-2]],4,4],-1,130,131],[[81,4,4],[[126,[5]]]],[[[128,[-1,-2]],4,4],[[9,[-1]]],130,131],[[-1,4,4],[],[]],[[[128,[-1,-2]],4,4],-1,130,[131,138]],[[[128,[-1,-2]],4,4],-1,130,[131,138]],[[81,4,4],[[126,[5]]]],[[[128,[-1,-2]],4,4],[[9,[-1]]],130,[131,138]],[[[129,[-2]],5,4,4],[[9,[-1]]],[],[[46,[[45,[-1]]]]]],[81,81],[[[45,[5]]],[[16,[140,149]]]],[[[129,[-1]]],2,[]],[137,2],[137,2],[[[128,[-1,-2]],-3],13,[38,130],38,37],[[137,-1],13,37],[[142,-1],13,37],[[[122,[-1]],-2],13,38,37],[[[125,[-1]],-2],13,38,37],[[[126,[-1]],-2],13,38,37],[[[127,[-1]],-2],13,38,37],[[140,-1],13,37],[-1,4,[]],[[[128,[-1,-2]]],4,130,131],[81,4],[[81,106],81],[-1,[[9,[[6,[5]]]]],[]],[-1,[[16,[[13,[4,4]],149]]],[[46,[162]]]],[[[129,[-2]]],[[9,[[45,[-1]]]]],[],[[132,[[45,[-1]]]]]],[[[129,[-2]]],[[9,[[45,[-1]]]]],[],[[46,[[45,[-1]]]]]],[[-1,4,4],2,[]],[[[129,[-1]],5,4,4],2,[]],[[[129,[-1]],5,4,4],39,[]],[[[129,[-1]],[13,[5,4,4]]],[],[[163,[39]]]],[[[129,[-1]],5,4,4],[[9,[39]]],[]],[[[128,[-1,-2]],[13,[4,4]]],-1,130,131],[[[122,[-1]],39],-1,[]],[[[125,[-1]],39],-1,[]],[[[126,[-1]],39],-1,[]],[[[127,[-1]],39],-1,[]],[[[129,[-1]],39,39,39],[[9,[39]]],[]],[[[129,[-1]],[13,[5,4,4]]],[],[[164,[39]]]],[[[128,[-1,-2]],[13,[4,4]]],-1,130,[131,138]],[[[122,[-1]],39],-1,[]],[[[125,[-1]],39],-1,[]],[[[126,[-1]],39],-1,[]],[[[127,[-1]],39],-1,[]],[[[141,[-1]]],[],131],[[[141,[-1]]],[],138],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[139,[[128,[[126,[5]],[6,[5]]]]]],[81,[[6,[5]]]],[[[128,[-1,-2]]],[[129,[-2]]],130,[[46,[45]],131]],[-1,148,[]],[-1,-2,[],[]],[-1,-2,[],[]],[81,[[128,[[125,[133]],[6,[133]]]]]],[81,[[128,[[125,[5]],[6,[5]]]]]],[81,[[128,[[127,[133]],[6,[133]]]]]],[81,[[128,[[127,[5]],[6,[5]]]]]],[[[128,[-1,-2]]],-2,130,131],[-1,[[16,[149]]],[]],[81,[[128,[[122,[133]],[6,[133]]]]]],[81,[[128,[[122,[58]],[6,[58]]]]]],[81,[[128,[[122,[5]],[6,[5]]]]]],[81,[[128,[[126,[133]],[6,[133]]]]]],[81,[[128,[[126,[58]],[6,[58]]]]]],[81,[[128,[[126,[5]],[6,[5]]]]]],[[[128,[-1,6]]],6,130],[-1,13,[]],[[[122,[-1]]],13,[123,124]],[[[125,[-1]]],13,123],[[[126,[-1]]],13,[123,124]],[[[127,[-1]]],13,123],[81,13],[[[129,[-1]],165],2,[]],0,[139,4],[[-1,140],[[16,[81,149]]],[166,167]],[[[45,[5]]],[[16,[81,149]]]],[[[45,[5]],140],[[16,[81,149]]]],[[-1,-2],-1,[],121],[[[122,[-1]],-2],[[122,[-1]]],[123,124],121],[[[125,[-1]],-2],[[125,[-1]]],123,121],[[[126,[-1]],-2],[[126,[-1]]],[123,124],121],[[[127,[-1]],-2],[[127,[-1]]],123,121],[[-1,-1,-2],-1,[],121],[[[122,[-1]],[122,[-1]],-2],[[122,[-1]]],[123,124],121],[[[125,[-1]],[125,[-1]],-2],[[125,[-1]]],123,121],[[[126,[-1]],[126,[-1]],-2],[[126,[-1]]],[123,124],121],[[[127,[-1]],[127,[-1]],-2],[[127,[-1]]],123,121],[[-1,-2,-3],-1,[],121,121],[[[122,[-1]],-2,-3],[[122,[-1]]],[123,124],121,121],[[[125,[-1]],-2,-3],[[125,[-1]]],123,121,121],[[[126,[-1]],-2,-3],[[126,[-1]]],[123,124],121,121],[[[127,[-1]],-2,-3],[[127,[-1]]],123,121,121],[[-1,-2],-1,[],121],[[[129,[-1]]],[[9,[39]]],[]],[[[77,[168]]],148],[[[128,[[126,[5]],[6,[5]]]]],139],[[4,4],[[128,[-1,6]]],130],[[-1,4,4,4,4],[[141,[-1]]],[]],[[4,4],81],[[4,4],81],[[4,4],81],[[4,4],81],[[4,4],81],[[4,4],81],[[4,4],81],[[4,4],81],[[4,4],81],[[4,4],81],[148,[[9,[[16,[139,149]]]]]],[[[146,[-1]]],[[9,[[13,[4,4]]]]],151],[[],-1,[]],[[],-1,[]],[143,[[13,[4,4]]]],[-1,[[16,[81,149]]],[[46,[162]]]],[-1,142,[]],[[143,143],[[9,[169]]]],[-1,[[146,[-1]]],147],[[[128,[-1,-2]]],[[170,[-1]]],130,131],[[[128,[-1,-2]]],[[171,[-1]]],130,[131,138]],[[-1,4,4],13,[]],[[[128,[-1,-2]],4,4,-1],13,130,[131,138]],[[[128,[-1,-2]],4,4,-1],13,130,[131,138]],[[81,4,4,[126,[5]]],13],[[-1,[45,[5]]],[[16,[13,149]]],[]],[[-1,[45,[5]],-2],[[16,[13,149]]],[],11],[[-1,4,4,4,4,[45,[5]]],[[16,[13,149]]],[]],[[-1,4,4,4,4,[45,[5]],-2],[[16,[13,149]]],[],11],[145,153],[[81,4,4,172],81],[[81,4,4,172],81],[[81,4,4,172],81],[81,81],[81,81],[81,81],[[[128,[-1,-2]]],[[173,[-1]]],130,131],[[[128,[-1,-2]]],[[174,[-1]]],130,[131,138]],[[[128,[-1,-2]]],175,130,131],0,[[[128,[-1,-2]],-3],[[16,[13,149]]],[176,130],131,[[46,[162]]]],[[81,-1],[[16,[13,149]]],[[46,[162]]]],[[-1,[45,[5]],4,4,137],[[16,[13,149]]],[[46,[162]]]],[[-1,[45,[5]],4,4,137,140],[[16,[13,149]]],[[46,[162]]]],[[[128,[-1,-2]],-3,140],[[16,[13,149]]],[176,130],131,[[46,[162]]]],[[81,-1,140],[[16,[13,149]]],[[46,[162]]]],[-1,153,[]],[[-1,177],[[16,[13,149]]],[]],[[[129,[-1]],5,4,4],13,[]],[149,[[9,[76]]]],[[[129,[-1]]],[[13,[39,39,39]]],[]],[[-1,4,4,4,4],[[141,[-1]]],147],[[[141,[-1]],4,4,4,4],141,138],[[81,4,4],81],[[81,4,4],81],[81,[[6,[5]]]],[[[141,[-1]]],[[128,[6]]],131],[-1,125,[]],[[[122,[-1]]],[[125,[-1]]],[123,124]],[[[125,[-1]]],[[125,[-1]]],123],[[[126,[-1]]],[[125,[-1]]],[123,124]],[[[127,[-1]]],[[125,[-1]]],123],[81,[[128,[[125,[133]],[6,[133]]]]]],[81,[[128,[[125,[58]],[6,[58]]]]]],[81,[[128,[[125,[5]],[6,[5]]]]]],[-1,127,[]],[[[122,[-1]]],[[127,[-1]]],[123,124]],[[[125,[-1]]],[[127,[-1]]],123],[[[126,[-1]]],[[127,[-1]]],[123,124]],[[[127,[-1]]],[[127,[-1]]],123],[81,[[128,[[127,[133]],[6,[133]]]]]],[81,[[128,[[127,[58]],[6,[58]]]]]],[81,[[128,[[127,[5]],[6,[5]]]]]],[140,80],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,122,[]],[[[122,[-1]]],[[122,[-1]]],[123,124]],[[[125,[-1]]],[[122,[-1]]],123],[[[126,[-1]]],[[122,[-1]]],[123,124]],[[[127,[-1]]],[[122,[-1]]],123],[81,[[128,[[122,[133]],[6,[133]]]]]],[81,[[128,[[122,[58]],[6,[58]]]]]],[81,[[128,[[122,[5]],[6,[5]]]]]],[-1,126,[]],[[[122,[-1]]],[[126,[-1]]],[123,124]],[[[125,[-1]]],[[126,[-1]]],123],[[[126,[-1]]],[[126,[-1]]],[123,124]],[[[127,[-1]]],[[126,[-1]]],123],[81,[[128,[[126,[133]],[6,[133]]]]]],[81,[[128,[[126,[58]],[6,[58]]]]]],[81,[[128,[[126,[5]],[6,[5]]]]]],[-1,75,[]],[[-1,47],75,[]],[[[129,[-2]]],[[129,[[6,[-1]]]]],27,[[46,[[45,[-1]]]]]],[139,4],[145,153],[-1,153,[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[[[129,[-1]]],[[16,[[128,[-2,-1]],[13,[135,[129,[-1]]]]]]],131,130],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[[-1,4,4],[],[]],[[[128,[-1,-2]],4,4],-1,130,[131,131]],[[-1,4,4],13,[]],[[[128,[-1,-2]],4,4,-1],13,130,[131,138]],[[81,58,106],81],[[-1,4,4,4,4],[[141,[-1]]],147],[[[141,[-1]],4,4,4,4],141,131],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,4,[]],[[[128,[-1,-2]]],4,130,131],[81,4],[[-1,4,4],[[129,[[45,[-2]]]]],130,123],[[-1,[45,[5]],4,4,137,-2],[[16,[13,149]]],[178,167],[[8,[144]]]],[[-1,[45,[5]],4,4,137],[[16,[13,149]]],[]],[[[128,[-1,-2]],-3,-4],[[16,[13,149]]],[176,130],131,[178,167],[[8,[144]]]],[[81,-1,-2],[[16,[13,149]]],[178,167],[[8,[144]]]],[[[128,[-1,-2]],-3],[[16,[13,149]]],[176,130],131,179],[[81,-1],[[16,[13,149]]],179],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[180,[-1]]],-1,[27,158,71,181]],[[],85],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[[85,85],85],[[85,85],13],[[85,85],85],[[85,85],13],[85,5],[[85,85],85],[[85,85],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[85,85],[182,182],[183,183],[[[184,[-1]]],[[184,[-1]]],[27,185]],[[[86,[-1]]],[[86,[-1]]],[27,185]],[186,186],[[[180,[-1]]],[[180,[-1]]],[27,27,158,71,181]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[85,85],169],[85,85],[[85,85],2],0,0,[[],85],[[],182],[[],[[184,[-1]]],185],[[],[[86,[-1]]],185],[[],186],[[],[[187,[-1]]],[31,27,158,71,181]],[[[86,[-1]],183],[[13,[58,58]]],185],[[85,85],85],[[],85],[[85,85],2],[[182,182],2],[[183,183],2],[[[184,[-1]],[184,[-1]]],2,[158,185]],[[[86,[-1]],[86,[-1]]],2,[158,185]],[[186,186],2],[[[180,[-1]],-1],2,[27,158,71,181]],[[[180,[-1]],[180,[-1]]],2,[27,158,71,181]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[[187,[-1]],47,73],13,[27,158,71,181]],[[[187,[-1]]],[[6,[[13,[188,[180,[-1]]]]]]],[27,158,71,181]],[[85,-1],13,189],[[85,32],[[16,[13,33]]]],[[85,32],[[16,[13,33]]]],[[85,32],[[16,[13,33]]]],[[85,32],[[16,[13,33]]]],[[85,32],[[16,[13,33]]]],[[182,32],[[16,[13,33]]]],[[182,32],[[16,[13,33]]]],[[183,32],[[16,[13,33]]]],[[[184,[-1]],32],[[16,[13,33]]],[34,185]],[[[86,[-1]],32],[[16,[13,33]]],[34,185]],[[186,32],[[16,[13,33]]]],[[186,32],[[16,[13,33]]]],[[[86,[-1]]],[[13,[58,58]]],185],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[6,[[13,[188,[180,[-1]]]]]]],[[187,[-1]]],[27,158,71,181]],[-1,-1,[]],[5,[[9,[85]]]],[5,85],[5,85],[-1,85,189],[80,[[16,[182]]]],[80,[[16,[186]]]],[[85,-1],13,37],[[182,-1],13,37],[[186,-1],13,37],[[85,85],13],[[85,85],85],[[85,85],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[85,2],[85,2],0,[186,4],[186,4],0,[[],[[187,[-1]]],[27,158,71,181]],[-1,[[180,[-1]]],[27,158,71,181]],[85,85],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[[180,[-1]]],[],[27,158,71,181]],[[85,85],[[9,[169]]]],0,0,0,[[[187,[-1]],36,182],[[0,[168]]],[27,158,71,181]],0,0,0,[[85,85],13],0,[[85,85,2],13],0,[[85,85],85],[[85,85],13],[[85,85],85],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,75,[]],[-1,75,[]],[[-1,47],75,[]],[[-1,47],75,[]],[[85,85],13],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[[85,85],85],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],190],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[[190,190],190],[[190,190],13],[[190,190],190],[[190,190],13],[190,5],[190,5],[[190,190],190],[[190,190],13],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[61,58],[61,[[13,[58,58]]]],[61,[[13,[58,58]]]],0,[61,[[13,[58,58]]]],[61,[[13,[58,58]]]],[61,[[13,[58,58]]]],[61,[[13,[58,58]]]],[61,[[13,[58,58]]]],[[65,65,65],65],[191,191],[192,192],[65,65],[190,190],[61,61],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[190,190],[[190,190],2],[[61,61],2],[[],191],[[],192],[[],65],[[],61],[[190,190],190],[[],190],[[191,191],2],[[192,192],2],[[65,65],2],[[61,61],2],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[61,58],61],[[61,58],61],[[61,58],61],[[190,-1],13,189],[[191,32],[[16,[13,33]]]],[[192,32],[[16,[13,33]]]],[[65,32],[[16,[13,33]]]],[[190,32],[[16,[13,33]]]],[[190,32],[[16,[13,33]]]],[[190,32],[[16,[13,33]]]],[[190,32],[[16,[13,33]]]],[[190,32],[[16,[13,33]]]],[[61,32],[[16,[13,33]]]],[[61,32],[[16,[13,33]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[193,65],[194,65],[195,65],[196,65],[-1,-1,[]],[-1,-1,[]],[5,[[9,[190]]]],[5,190],[5,190],[5,190],[-1,190,189],[[58,58,58,58],61],[80,[[9,[190]]]],[[191,36],191],[[192,36],192],[[65,36],65],0,[61,58],[[190,190],13],[[190,190],190],[[61,61],61],[[190,190],2],[[61,61],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[190],[190,2],[65,2],[190,2],[65,2],[65,2],[65,2],[190,[[197,[190]]]],[190,[[198,[190]]]],[61,58],[190,190],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[199,[[16,[191,[201,[200]]]]]],[199,[[16,[192,[201,[200]]]]]],[199,[[16,[65,[201,[200]]]]]],[[190,190],13],[61,58],[[191,191],2],[[192,192],2],[[65,65],2],[[190,190,2],13],[[191,36,40,-1],13,11],[[192,36,40,-1],13,11],[[65,36,40,-1],13,11],[[61,58],61],[[61,58],61],[[61,58,58,58,58],61],[[61,58],61],[[190,190],190],[[190,190],13],[[190,190],190],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[65,58,58],58],[[65,58,58,65,65],58],[-1,75,[]],[[-1,47],75,[]],[[190,190],13],[61,58],[61,[[13,[58,58]]]],[61,[[13,[58,58]]]],[[61,108],61],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[[190,190],190],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[61,58],0,0,0,0,0,0,0,0,0,[[202,80,-1],202,19],[[202,80,-1],202,[[8,[203]],204]],[-1,70,[]],[-1,-2,[],[]],[-1,-2,[],[]],[202,202],[[-1,-2],13,[],[]],[[202,202],2],[[-1,70],2,[]],[-1,-1,[]],[[202,36],75],[-1,-2,[],[]],[[202,-1],202,11],[80,202],[[202,202],2],[[202,36,40,-1],13,[27,11]],[-1,-2,[],[]],[[-1,47],75,[]],[[202,47],75],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,-2,[],[]],0,[[-1,36],13,[]],[[-1,47,73],13,[]],[-1,[[9,[80]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[205,-1],205,[[8,[[207,[206]]]]]],[[-1,2],-1,[]],[[-1,-3],-1,[],[[8,[54]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[55]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[209]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[[6,[210]]]]],[[208,[-2]]]],[[211,212],211],[[-1,-3],-1,[],[[8,[206]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[59]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[206]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[59]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[55]]],[[208,[-2]]]],[[-1,-3],-1,[],[34,[8,[[213,[59]]]]],[[208,[-2]]]],[[-1,-3],-1,[],[34,[8,[214]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[206]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[59]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[206]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[59]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[206]]],[[208,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[62]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[55]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[2]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[2]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[[-1,80],-1,[]],[[-1,-3],-1,[],[[8,[91]]],[[208,[-2]]]],[205,205],[211,211],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[55]]],[[208,[-2]]]],[[211,55],211],[[-1,-3],-1,[],[[8,[215]]],[[208,[-2]]]],[[-1,2],-1,[]],[[],205],[[],211],[[-1,92],-1,[]],[[-1,-3],-1,[],[[8,[2]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[67]]],[[208,[-2]]]],[[216,47,73],13],[[205,32],[[16,[13,33]]]],[[211,32],[[16,[13,33]]]],[[-1,-3],-1,[],[[8,[2]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[2]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[[6,[66]]]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[217]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[218]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[219]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[220]]],[[208,[-2]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[205,36],205],[[211,36],211],[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[2]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[2]]],[[208,[-2]]]],[[-1,4,4,[6,[5]]],-1,[]],[[-1,-2],-1,[],[[8,[75]]]],[[-1,-2],-1,[],[[8,[7]]]],[211,211],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-3],-1,[],[[8,[191]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[[-1,94],-1,[]],[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[[-1,[9,[-2]]],-1,[],[[8,[7]]]],[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[[-1,2],-1,[]],[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[[-1,[9,[-2]]],-1,[],[[8,[7]]]],[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[[-1,2],-1,[]],[[-1,-3],-1,[],221,[[208,[-2]]]],[[-1,-3],-1,[],[[8,[2]]],[[208,[-2]]]],[[],205],[[],211],[[],-1,[]],[[],-1,[]],[[-1,-3],-1,[],[[8,[87]]],[[208,[-2]]]],[[-1,-2],-1,[],[11,71,181]],[[-1,-2],-1,[],[11,71,181]],[[-1,-2],-1,[],[11,71,181]],[[-1,-2],-1,[],[11,71,181]],[[-1,-2],-1,[],[11,71,181]],[[-1,-2],-1,[],[11,71,181]],[[-1,-2],-1,[],[11,71,181]],[[-1,-2],-1,[],[11,71,181]],[[-1,-2],-1,[],[11,71,181]],[[-1,-2],-1,[],[11,71,181]],[[-1,-2],-1,[],[11,71,181]],[[-1,-2],-1,[],[11,71,181]],[[-1,-2],-1,[],[11,71,181]],[[-1,-2],-1,[],[11,71,181]],[[-1,-2],-1,[],[11,71,181]],[[-1,-3],-1,[],[[8,[222]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[55]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[206]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[206]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[95]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[95]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[95]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[96]]],[[208,[-2]]]],[[-1,-2],-1,[],[[8,[12]]]],[[-1,-3],-1,[],[[8,[192]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[2]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[2]]],[[208,[-2]]]],[[-1,2],-1,[]],[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[[-1,97],-1,[]],[[-1,-3],-1,[],[[8,[98]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[99]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[55]]],[[208,[-2]]]],[[205,36,40,-1],13,11],[[211,36,40,-1],13,11],[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[[211,212],211],[[-1,-3],-1,[],221,[[208,[-2]]]],[[-1,-3],-1,[],[[8,[107]]],[[208,[-2]]]],[[-1,-3],-1,[],15,[[208,[-2]]]],[[-1,-3],-1,[],[[8,[2]]],[[208,[-2]]]],[[-1,-2],-1,[],15],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,80,-2],-1,[],[[208,[2]]]],[[-1,-2],-1,[],10],0,0,[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[[6,[103]]]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[223]]],[[208,[-2]]]],[[-1,-3],-1,[],[[8,[104]]],[[208,[-2]]]],[[-1,2],-1,[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[[-1,-3],-1,[],[[8,[105]]],[[208,[-2]]]],[[-1,2],-1,[]],[[-1,2],-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-3],-1,[],[[8,[65]]],[[208,[-2]]]],[-1,205,[[8,[224]]]],[[211,-1],211,[[8,[212]]]],[[211,-1],211,[[8,[212]]]],[[-1,-3],-1,[],[[8,[106]]],[[208,[-2]]]],[-1,70,[]],[-1,70,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[225,225],[226,226],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[225,225],2],[[226,226],2],[[-1,70],2,[]],[[-1,70],2,[]],[[225,32],[[16,[13,33]]]],[[226,32],[[16,[13,33]]]],[-1,-1,[]],[-1,-1,[]],[[-1,36],[],[]],[[-1,36],9,[]],[[225,-1],13,37],[[226,-1],13,37],[-1,-2,[],[]],[-1,-2,[],[]],[[],225],[[],226],0,[[-1,36,40,-2],13,[],11],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[[225,216,-1],-2,10,[]],[[226,-1],-2,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[-1,70,[]],[-1,-2,[],[]],[-1,-2,[],[]],[82,82],[[-1,-2],13,[],[]],[[82,82],2],[[-1,70],2,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[55,5],[227,5],0,[[98,98],98],[[212,212],212],[[228,40],13],[[],55],[[],229],0,[[],55],[[],55],[[],55],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[[],55],[55,5],[227,5],0,[[],55],[[],55],[[229,229],229],[[229,229],13],[[229,229],229],[[229,229],13],[229,5],[229,5],[[229,229],229],[[229,229],13],[[],55],[[],55],[[],55],0,[[],55],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],55],[[],55],0,[[],55],[[],223],[[],55],[[],55],[228,13],[98,98],[54,54],[57,57],[59,59],[62,62],[91,91],[55,55],[227,227],[215,215],[67,67],[230,230],[231,231],[217,217],[218,218],[219,219],[220,220],[232,232],[209,209],[224,224],[233,233],[234,234],[210,210],[212,212],[235,235],[206,206],[[[236,[-1]]],[[236,[-1]]],27],[222,222],[95,95],[96,96],[223,223],[99,99],[107,107],[103,103],[237,237],[104,104],[238,238],[105,105],[239,239],[56,56],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],0,[229,229],[[229,229],2],[[],55],[[],55],[[],55],[[],55],[[],55],0,[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],98],[[],54],[[],57],[[],59],[[],62],[[],91],[[],55],[[],215],[[],67],[[],217],[[],220],[[],209],[[],224],[[],212],[[],235],[[],206],[[],222],[[],95],[[],96],[[],223],[[],99],[[],107],[[],237],[[],104],[[],105],[[],229],[[],228],0,0,[[229,229],229],[[],55],[[],55],0,[[],55],0,0,[[],229],[[98,98],2],[[98,58],2],[[54,54],2],[[57,57],2],[[59,59],2],[[62,62],2],[[91,91],2],[[55,55],2],[[227,227],2],[[215,215],2],[[67,67],2],[[230,230],2],[[231,231],2],[[217,217],2],[[218,218],2],[[219,219],2],[[220,220],2],[[232,232],2],[[209,209],2],[[224,224],2],[[233,233],2],[[234,234],2],[[210,210],2],[[212,58],2],[[212,212],2],[[235,58],2],[[235,235],2],[[206,206],2],[[[236,[-1]],[236,[-1]]],2,158],[[222,222],2],[[95,95],2],[[96,96],2],[[223,223],2],[[99,99],2],[[107,107],2],[[103,103],2],[[237,237],2],[[104,104],2],[[238,238],2],[[105,105],2],[[239,239],2],[[56,56],2],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[229,-1],13,189],0,[[],55],[[],55],[[98,32],[[16,[13,33]]]],[[54,32],[[16,[13,33]]]],[[57,32],[[16,[13,33]]]],[[59,32],[[16,[13,33]]]],[[62,32],[[16,[13,33]]]],[[91,32],[[16,[13,33]]]],[[55,32],[[16,[13,33]]]],[[227,32],[[16,[13,33]]]],[[215,32],[[16,[13,33]]]],[[215,32],[[16,[13,33]]]],[[67,32],[[16,[13,33]]]],[[230,32],[[16,[13,33]]]],[[231,32],[[16,[13,33]]]],[[217,32],[[16,[13,33]]]],[[218,32],[[16,[13,33]]]],[[219,32],[[16,[13,33]]]],[[220,32],[[16,[13,33]]]],[[232,32],[[16,[13,33]]]],[[209,32],[[16,[13,33]]]],[[224,32],[[16,[13,33]]]],[[233,32],[[16,[13,33]]]],[[234,32],[[16,[13,33]]]],[[210,32],[[16,[13,33]]]],[[212,32],[[16,[13,33]]]],[[235,32],[[16,[13,33]]]],[[206,32],[[16,[13,33]]]],[[[236,[-1]],32],[[16,[13,33]]],34],[[222,32],[[16,[13,33]]]],[[95,32],[[16,[13,33]]]],[[96,32],[[16,[13,33]]]],[[223,32],[[16,[13,33]]]],[[99,32],[[16,[13,33]]]],[[107,32],[[16,[13,33]]]],[[103,32],[[16,[13,33]]]],[[237,32],[[16,[13,33]]]],[[104,32],[[16,[13,33]]]],[[238,32],[[16,[13,33]]]],[[105,32],[[16,[13,33]]]],[[239,32],[[16,[13,33]]]],[[229,32],[[16,[13,33]]]],[[229,32],[[16,[13,33]]]],[[229,32],[[16,[13,33]]]],[[229,32],[[16,[13,33]]]],[[56,32],[[16,[13,33]]]],[[],55],[-1,-1,[]],[[[240,[98]]],98],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[80,59],[211,62],[-1,-1,[]],[80,62],[[[213,[206]]],91],[-1,-1,[]],[212,91],[206,91],[-1,-1,[]],[227,55],[241,55],[80,55],[55,227],[242,227],[-1,-1,[]],[-1,-1,[]],[2,67],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[87,217],[58,217],[243,217],[80,217],[196,218],[-1,-1,[]],[-1,-1,[]],[133,220],[80,220],[4,220],[232,220],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[80,209],[205,209],[233,209],[-1,-1,[]],[238,224],[98,224],[80,224],[[[13,[234,238]]],224],[234,224],[-1,-1,[]],[-1,-1,[]],[209,210],[-1,-1,[]],[80,210],[65,212],[-1,-1,[]],[[[240,[212]]],212],[58,212],[-1,-1,[]],[212,206],[[[244,[234]]],206],[245,206],[234,206],[[[244,[238]]],206],[-1,-1,[]],[80,206],[238,206],[235,206],[196,206],[65,206],[[[13,[-1,-1,-1,-1,-1,-1]]],[[236,[-1]]],[]],[-1,-1,[]],[87,222],[-1,-1,[]],[58,222],[80,222],[196,222],[-1,-1,[]],[2,96],[-1,-1,[]],[[[13,[-1,-2]]],223,[[8,[206]]],[[8,[206]]]],[-1,-1,[]],[[[13,[-1,-2]]],99,[[8,[246]]],[[8,[246]]]],[-1,-1,[]],[80,99],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,104,[[8,[206]]]],[-1,-1,[]],[[[13,[-1,-2]]],104,[[8,[206]]],[[8,[206]]]],[-1,-1,[]],[-1,-1,[]],[2,105],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[5,[[9,[229]]]],[5,229],[5,229],[5,229],[-1,229,189],[80,[[9,[229]]]],[[],55],[55,5],[227,5],[[],55],[55,227],[[98,36],98],[[54,36],54],[[59,36],59],[[62,36],62],[[55,36],55],[[227,36],227],[[215,36],215],[[67,36],67],[[231,36],231],[[218,36],218],[[219,36],219],[[220,36],220],[[232,36],232],[[233,36],233],[[210,36],210],[[212,36],212],[[235,36],235],[[206,36],206],[[222,36],222],[[95,36],95],[[96,36],96],[[223,36],223],[[99,36],99],[[107,36],107],[[103,36],103],[[104,36],104],[[105,36],105],[[],55],[[],55],[[],55],[[],55],[[],55],0,[[],55],[[],55],0,[[],55],[[],55],[[58,58,58],227],[[58,58,58,58],227],[[],55],[[],55],[[229,229],13],0,[[229,229],229],[[229,229],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[229],[229,2],[223,2],[229,2],[210,2],[98,2],[229,[[197,[229]]]],[229,[[198,[229]]]],[[],55],[[],55],0,[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],0,[[228,58],58],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[98,58],98],[[212,58],212],[[235,58],235],0,[[],55],[[],55],[[228,40],13],0,[228,13],[228,13],[228,13],0,[[-1,-2,[9,[212]],[9,[212]],[9,[55]],2],62,[[8,[212]]],[[8,[212]]]],[[-1,-1,-1,-1,-1,-1],[[236,[-1]]],[]],[[-1,-2],223,[[8,[[244,[234]]]]],[[8,[[244,[238]]]]]],[[-1,-2],99,[[8,[246]]],[[8,[246]]]],[[75,50,[9,[50]],[9,[247]]],237],[[-1,-2],104,[[8,[206]]],[[8,[206]]]],[229,229],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],0,[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[199,[[16,[98,[201,[200]]]]]],[199,[[16,[54,[201,[200]]]]]],[199,[[16,[57,[201,[200]]]]]],[199,[[16,[59,[201,[200]]]]]],[199,[[16,[62,[201,[200]]]]]],[199,[[16,[91,[201,[200]]]]]],[199,[[16,[55,[201,[200]]]]]],[199,[[16,[215,[201,[200]]]]]],[199,[[16,[67,[201,[200]]]]]],[199,[[16,[230,[201,[200]]]]]],[199,[[16,[231,[201,[200]]]]]],[199,[[16,[217,[201,[200]]]]]],[199,[[16,[218,[201,[200]]]]]],[199,[[16,[219,[201,[200]]]]]],[199,[[16,[220,[201,[200]]]]]],[199,[[16,[232,[201,[200]]]]]],[199,[[16,[209,[201,[200]]]]]],[199,[[16,[224,[201,[200]]]]]],[199,[[16,[233,[201,[200]]]]]],[199,[[16,[234,[201,[200]]]]]],[199,[[16,[210,[201,[200]]]]]],[199,[[16,[212,[201,[200]]]]]],[199,[[16,[235,[201,[200]]]]]],[199,[[16,[206,[201,[200]]]]]],[199,[[16,[[236,[-1]],[201,[200]]]]],[248,27]],[199,[[16,[222,[201,[200]]]]]],[199,[[16,[95,[201,[200]]]]]],[199,[[16,[96,[201,[200]]]]]],[199,[[16,[223,[201,[200]]]]]],[199,[[16,[99,[201,[200]]]]]],[199,[[16,[107,[201,[200]]]]]],[199,[[16,[103,[201,[200]]]]]],[199,[[16,[237,[201,[200]]]]]],[199,[[16,[104,[201,[200]]]]]],[199,[[16,[238,[201,[200]]]]]],[199,[[16,[105,[201,[200]]]]]],[[98,98],[[9,[169]]]],[[98,58],[[9,[169]]]],[[212,212],[[9,[169]]]],[[212,58],[[9,[169]]]],[[235,58],[[9,[169]]]],[[235,235],[[9,[169]]]],[[],55],[[],55],[[228,58],58],[[],55],[[],55],[[],55],0,[[],55],[58,212],[58,206],[55,5],[227,5],[[],55],[[],55],0,[[229,229],13],[[228,40],13],[[5,5,5],55],[[5,5,5],227],[[5,5,5,5],55],[[5,5,5,5],227],0,[[],55],[[],55],[[],55],[[],55],[[98,98],2],[[55,55],2],[[67,67],2],[[103,103],2],[[104,104],2],[[105,105],2],[[],55],[228,58],[[],55],[[],55],[[229,229,2],13],[[98,36,40,-1],13,11],[[54,36,40,-1],13,11],[[59,36,40,-1],13,11],[[62,36,40,-1],13,11],[[55,36,40,-1],13,11],[[227,36,40,-1],13,[27,11]],[[215,36,40,-1],13,11],[[67,36,40,-1],13,11],[[231,36,40,-1],13,11],[[218,36,40,-1],13,11],[[219,36,40,-1],13,11],[[220,36,40,-1],13,11],[[232,36,40,-1],13,11],[[233,36,40,-1],13,11],[[210,36,40,-1],13,11],[[212,36,40,-1],13,[27,11]],[[235,36,40,-1],13,11],[[206,36,40,-1],13,[27,11]],[[222,36,40,-1],13,11],[[95,36,40,-1],13,11],[[96,36,40,-1],13,11],[[223,36,40,-1],13,11],[[99,36,40,-1],13,11],[[107,36,40,-1],13,11],[[103,36,40,-1],13,11],[[104,36,40,-1],13,11],[[105,36,40,-1],13,11],[[228,-1],13,10],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],[[],55],0,[[],55],[[],55],0,[[229,229],229],[[229,229],13],[[229,229],229],[[],55],[[],55],0,[[],55],0,[98,58],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[206,58,58],58],[212,[[9,[58]]]],[235,[[9,[58]]]],[98,58],[-1,75,[]],[[-1,47],75,[]],[235,[[13,[58,80]]]],[[229,229],13],[[],55],[[],55],[[98,98],[[9,[98]]]],[[212,212],[[9,[212]]]],[[235,235],[[9,[235]]]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[[],55],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[[229,229],229],[[],55],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],55],[[],55],[[],55],0,0,0,0,0,0,0,0,[[],55],[[],55],[[],212],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[80,249],[-1,-1,[]],[250,249],[-1,249,[[46,[162]]]],[80,249],[-1,[[16,[75,48]]],[]],[249,[[16,[75,48]]]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[69,[-1]],-2],[[16,[251,252]]],253,[[46,[162]]]],[[[69,[-1]],-2],[[16,[[6,[251]],252]]],253,[[46,[162]]]],[[254,-1],[[16,[[6,[251]],252]]],[[46,[162]]]],[[254,-1],[[16,[251,252]]],[[46,[162]]]],[[[69,[-1]],[45,[5]]],[[16,[251,252]]],253],[[254,[45,[5]]],[[16,[251,252]]]],[[255,39,39],[[9,[[13,[39,39]]]]]],[[254,-1,4],[[16,[251,252]]],[[46,[[45,[5]]]]]],[[],256],[[-1,257],[[16,[252]]],[]],0,[258,2],[[63,58,58,58,58,58,259],13],[[63,58,58,58,58,58],13],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[260,58],[108,58],0,[[63,58,58,58,58,58,58],13],[[256,256],256],[[256,256],13],[[256,256],256],[[256,256],13],[256,4],[256,4],[[256,256],256],[[256,256],13],[[],261],[260,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[58,58,58,58,58,58,261,261],258],[[[69,[-1]],58,-2,258],[[16,[39,252]]],253,[[46,[80]]]],[[254,58,-1,258],[[16,[39,252]]],[[46,[80]]]],[[[69,[-1]],58,-2,258],[[16,[[6,[[262,[39]]]],252]]],253,[[46,[80]]]],[[254,58,-1,258],[[16,[[6,[[262,[39]]]],252]]],[[46,[80]]]],[108,153],[[63,58,58,58],13],[[[69,[-1]],4,4,4,4,261],13,253],[260,260],[251,251],[263,263],[264,264],[265,265],[254,254],[266,266],[267,267],[268,268],[269,269],[270,270],[256,256],[271,271],[257,257],[272,272],[261,261],[273,273],[108,108],[258,258],[259,259],[63,63],[274,274],[275,275],[276,276],[277,277],[278,278],[279,279],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[63,13],[63,13],[[251,251],169],[[269,269],169],[[273,273],169],[261,258],0,[256,256],[[256,256],2],[[[69,[-1]],63,58,58,274],2,253],[[[69,[-1]],-2,256],[[16,[269,252]]],253,[[8,[271]]]],[[[69,[-1]],39,39,270,256],[[16,[269,252]]],253],[[-1,257],[[16,[252]]],[]],[[[69,[-1]],257],[[16,[269,252]]],253],[[63,58,58,58,58,58,58],13],[[],260],[[],263],[[],264],[[],265],[[],254],[[],266],[[],268],[[],261],[[],108],[[],258],[[],259],[[],63],[[],274],[[],277],[[],278],[[],279],[[-1,269],13,[]],[[[69,[-1]],269],13,253],[260,58],[[256,256],256],[271,280],[[[69,[-1]],281,258,58],13,253],[[[69,[-1]]],13,253],[[63,58,58,58,58],13],[[],256],[[251,251],2],[[263,263],2],[[264,264],2],[[265,265],2],[[269,269],2],[[270,270],2],[[256,256],2],[[257,257],2],[[261,261],2],[[273,273],2],[[108,108],2],[[259,259],2],[[274,274],2],[[275,275],2],[[276,276],2],[[277,277],2],[[278,278],2],[[279,279],2],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[255,39,39],13],[[256,-1],13,189],[[[69,[-1]],63,258],13,253],[258,274],[[[69,[-1]],58,58,-2,258],[[16,[266,252]]],253,[[46,[80]]]],[[[69,[-1]],269,272,269],13,253],[257,256],[[[69,[-1]]],13,253],[[260,32],[[16,[13,33]]]],[[251,32],[[16,[13,33]]]],[[263,32],[[16,[13,33]]]],[[264,32],[[16,[13,33]]]],[[265,32],[[16,[13,33]]]],[[266,32],[[16,[13,33]]]],[[267,32],[[16,[13,33]]]],[[268,32],[[16,[13,33]]]],[[252,32],[[16,[13,33]]]],[[252,32],[[16,[13,33]]]],[[269,32],[[16,[13,33]]]],[[270,32],[[16,[13,33]]]],[[256,32],[[16,[13,33]]]],[[256,32],[[16,[13,33]]]],[[256,32],[[16,[13,33]]]],[[256,32],[[16,[13,33]]]],[[256,32],[[16,[13,33]]]],[[271,32],[[16,[13,33]]]],[[257,32],[[16,[13,33]]]],[[272,32],[[16,[13,33]]]],[[261,32],[[16,[13,33]]]],[[273,32],[[16,[13,33]]]],[[108,32],[[16,[13,33]]]],[[258,32],[[16,[13,33]]]],[[259,32],[[16,[13,33]]]],[[63,32],[[16,[13,33]]]],[[274,32],[[16,[13,33]]]],[[275,32],[[16,[13,33]]]],[[276,32],[[16,[13,33]]]],[[277,32],[[16,[13,33]]]],[[278,32],[[16,[13,33]]]],[[279,32],[[16,[13,33]]]],[258,58],[271,270],[257,270],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[149,252],[282,252],[-1,-1,[]],[48,252],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[284,[[45,[[283,[5]]]]]]],271],[[[284,[[45,[[285,[5]]]]]]],271],[-1,-1,[]],[[[284,[[45,[[286,[5]]]]]]],271],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[55,261],[227,261],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[4,[[9,[256]]]],[4,256],[4,256],[4,256],[-1,256,189],[80,[[9,[256]]]],0,[[[69,[-1]],269],9,253],[[[69,[-1]],269],9,253],[[[69,[-1]],275,275],13,253],[[[69,[-1]],275,275,275,275],13,253],[[[69,[-1]],276],13,253],0,[[251,-1],13,37],[[263,-1],13,37],[[264,-1],13,37],[[265,-1],13,37],[[269,-1],13,37],[[270,-1],13,37],[[256,-1],13,37],[[257,-1],13,37],[[275,-1],13,37],[[276,-1],13,37],[[277,-1],13,37],[[[69,[-1]]],58,253],[260,58],[266,58],[257,39],[80,261],[[58,58,58],261],[[58,58,58,58],261],[[],108],[[269,58,58,58,58,58,58],258],0,[[[69,[-1]],269],[[16,[257,252]]],253],[[[69,[-1]],269],[[16,[[13,[39,39]],252]]],253],[[269,58,58,58,58,58,261],258],[[108,39]],[[108,39]],[[256,256],13],[[[69,[-1]],58,58,58,58],13,253],[[256,256],256],[[256,256],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[256],[108,13],[108,108],[256,2],[261,2],[256,2],[63,2],[260,2],[256,[[197,[256]]]],[256,[[198,[256]]]],[258,58],[258,278],[258,278],[258,279],[[63,58,58],13],[[63,58,58],13],[258,58],[[58,58,58,58,261,261],258],[[58,58,58,58,-1],258,189],[[[69,[-1]],-2,256],[[16,[269,252]]],253,[[46,[162]]]],[[[69,[-1]],[45,[5]],256],[[16,[269,252]]],253],[[[69,[-1]],258],[[16,[260,252]]],253],[[254,258],[[16,[260,252]]]],[[[69,[-1]],58,58,-2,258],[[16,[266,252]]],253,[[46,[80]]]],[[254,58,58,-1,258],[[16,[266,252]]],[[46,[80]]]],[258,58],[[63,58,58],13],[[63,58,58],13],[[108,108],13],[[39,39],255],[-1,[[16,[[69,[-1]],252]]],253],[[256,39,39,270],257],[[108,58,58,58,58,58,58],108],[[],63],[276,277],[[58,58],108],[[-1,254],[[16,[[69,[-1]],252]]],253],[256,256],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[260,2],[[251,251],[[9,[169]]]],[[269,269],[[9,[169]]]],[[261,261],[[9,[169]]]],[[273,273],[[9,[169]]]],[[108,108],[[9,[169]]]],[[259,259],[[9,[169]]]],[[275,275],[[9,[169]]]],[[276,276],[[9,[169]]]],[[277,277],[[9,[169]]]],[[278,278],[[9,[169]]]],[[279,279],[[9,[169]]]],[[[69,[-1]],63],287,253],[261,261],[[108,108],13],[[63,58,58,58,58],13],[[63,58,58,58,58],13],0,0,[[58,58,58,58,261,261],258],[[58,58,58,58,-1],258,189],[[[69,[-1]],269,39,39,270,256],[[16,[13,252]]],253],[[63,58,58,58,58],13],[260,2],[[256,256],13],[[-1,288,[45,[289]],[6,[290]]],13,[]],0,[[255,39,39],13],[[[69,[-1]]],13,253],[[[69,[-1]]],13,253],[[[69,[-1]]],13,253],[[254,291],13],[[254,291],13],[[[69,[-1]]],13,253],[[5,5,5],261],[[5,5,5,5],261],[[58,58,58,58],261],[[58,58,58],261],[[[69,[-1]],58],13,253],[[108,58],13],[[63,58,58,58,58,58],13],[[63,58,58,58,58,58,58,58,58],13],0,0,[[[69,[-1]]],13,253],[[[69,[-1]],-2],13,253,121],[[[69,[-1]],58,58],13,253],[[108,58,58],13],[[[69,[-1]],58,58,58,58],13,253],[-1,[[16,[[284,[[6,[[285,[5]]]]]],252]]],[]],[[[69,[-1]]],[[16,[[284,[[6,[[285,[5]]]]]],252]]],253],[[256,256,2],13],[[261,5],13],[[261,58],13],[[258,2],13],[[258,261],13],[[63,58],13],[[258,274],13],[[258,[45,[251]]],13],[[258,58],13],[[257,270],13],[[[69,[-1]],58],13,253],[[258,58],13],[[258,278],13],[[258,278],13],[[258,278],13],[[258,279],13],[[258,58],13],[[258,58],13],[[[69,[-1]],273],13,253],[[-1,4,4,58],13,[]],[[[69,[-1]],4,4,58],13,253],[[258,2],13],[[258,264],13],[[258,263],13],[[[69,[-1]],108],13,253],[255,[[13,[39,39]]]],[257,280],[63,39],[[[69,[-1]],58],13,253],[[108,58],13],[[[69,[-1]],58],13,253],[[108,58],13],[[63,259],13],[258,2],[[[69,[-1]],63,258],13,253],[[[69,[-1]],58,58,-2,258],[[16,[266,252]]],253,[[46,[80]]]],[[256,256],256],[[256,256],13],[[256,256],256],0,0,[258,264],[258,263],[261,[[159,[58]]]],[108,[[159,[58]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,75,[]],[[-1,47],75,[]],[[256,256],13],[[[69,[-1]]],108,253],[[108,58,58],[[13,[58,58]]]],[[[69,[-1]],58,58],13,253],[[108,58,58],13],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[81,[[16,[271,252]]]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[[256,256],256],[[-1,271,39,39],[[16,[13,252]]],[]],[[[69,[-1]],269,-2,39,39],[[16,[13,252]]],253,[[8,[271]]]],[260,2],[63,292],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[260,133],[[],261],[[[69,[-1]]],58,253],[260,133],[266,58],[257,39],[[258,2],258],[[275,275],277],[[258,261],258],[[258,274],258],[[258,[45,[251]]],258],[[258,58],258],[[258,58],258],[[258,278],258],[[258,278],258],[[258,278],258],[[258,279],258],[[258,58],258],[[258,58],258],[[258,2],258],[[258,264],258],[[258,263],258],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-2],13,[],121],[[-1,-1,-2],13,[],121],[[-1,-2,-3],13,[],121,121],[[-1,-2],13,[],121],[-1,[[45,[5]]],[]],[[-1,-1],13,[]],[[-1,4,4],13,[]],[-1,[[13,[4,4,4,4]]],[]],0,[-1,45,[]],[-1,13,[]],[-1,45,[]],0,0,[-1,137,[]],[[-1,-2,4,4],[[16,[13,149]]],[],151],[[-1,152,4,4],2,[]],[-1,[[13,[4,4]]],[]],[-1,[[13,[4,4]]],[]],0,0,[[],-1,[]],[45,-1,[]],[45,-1,[]],[[-1,4,4],[],[]],[[-1,4,4],[],[]],[[[45,[5]]],[[16,[140,149]]]],[-1,4,[]],[-1,[[9,[[6,[5]]]]],[]],[-1,[[16,[[13,[4,4]],149]]],[[46,[162]]]],0,[[-1,4,4],2,[]],[-1,148,[]],[-1,[[16,[149]]],[]],[-1,13,[]],0,0,[[-1,140],[[16,[81,149]]],[166,167]],[[[45,[5]]],[[16,[81,149]]]],[[[45,[5]],140],[[16,[81,149]]]],[[-1,-2],-1,[],121],[[-1,-1,-2],-1,[],121],[[-1,-2,-3],-1,[],121,121],[[-1,-2],-1,[],121],0,[-1,[[16,[81,149]]],[[46,[162]]]],[-1,142,[]],[-1,[[146,[-1]]],147],[[-1,4,4],13,[]],[[-1,[45,[5]]],[[16,[13,149]]],[]],[[-1,[45,[5]],-2],[[16,[13,149]]],[],11],[[-1,4,4,4,4,[45,[5]]],[[16,[13,149]]],[]],[[-1,4,4,4,4,[45,[5]],-2],[[16,[13,149]]],[],11],0,[[-1,[45,[5]],4,4,137],[[16,[13,149]]],[[46,[162]]]],[[-1,[45,[5]],4,4,137,140],[[16,[13,149]]],[[46,[162]]]],[-1,153,[]],[[-1,177],[[16,[13,149]]],[]],[[-1,4,4,4,4],[[141,[-1]]],147],[-1,125,[]],[-1,127,[]],[-1,122,[]],[-1,126,[]],[-1,153,[]],[[-1,4,4],[],[]],[[-1,4,4],13,[]],[[-1,4,4,4,4],[[141,[-1]]],147],[-1,4,[]],[[-1,[45,[5]],4,4,137,-2],[[16,[13,149]]],[178,167],[[8,[144]]]],[[-1,[45,[5]],4,4,137],[[16,[13,149]]],[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[170,[-1]]],[[170,[-1]]],130],[[[173,[-1]]],[[173,[-1]]],130],[[[154,[-1]]],[[154,[-1]]],130],[[[156,[-1]]],[[156,[-1]]],130],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[-1,-2,[],[]],[[[170,[-1]],32],[[16,[13,33]]],130],[[[171,[-1]],32],[[16,[13,33]]],130],[[[173,[-1]],32],[[16,[13,33]]],130],[[[174,[-1]],32],[[16,[13,33]]],130],[[[154,[-1]],32],[[16,[13,33]]],130],[[[156,[-1]],32],[[16,[13,33]]],130],[[[155,[-1]],32],[[16,[13,33]]],130],[[[157,[-1]],32],[[16,[13,33]]],130],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[170,[-1]]],39,130],[[[171,[-1]]],39,130],[[[173,[-1]]],39,130],[[[174,[-1]]],39,130],[[[154,[-1]]],39,130],[[[156,[-1]]],39,130],[[[155,[-1]]],39,130],[[[157,[-1]]],39,130],[[[170,[-1]]],[[9,[-1]]],130],[[[171,[-1]]],[[9,[-1]]],130],[[[173,[-1]]],[[9,[[170,[-1]]]]],130],[[[174,[-1]]],[[9,[[171,[-1]]]]],130],[[[154,[-1]]],[[9,[[13,[4,4,-1]]]]],130],[[[156,[-1]]],[[9,[[13,[4,[154,[-1]]]]]]],130],[[[155,[-1]]],[[9,[[13,[4,4,-1]]]]],130],[[[157,[-1]]],[[9,[[13,[4,[155,[-1]]]]]]],130],[[[170,[-1]]],[[9,[-1]]],130],[[[171,[-1]]],[[9,[-1]]],130],[[[173,[-1]]],[[9,[[170,[-1]]]]],130],[[[174,[-1]]],[[9,[[171,[-1]]]]],130],[[[170,[-1]]],[[13,[39,[9,[39]]]]],130],[[[171,[-1]]],[[13,[39,[9,[39]]]]],130],[[[173,[-1]]],[[13,[39,[9,[39]]]]],130],[[[174,[-1]]],[[13,[39,[9,[39]]]]],130],[[[154,[-1]]],[[13,[39,[9,[39]]]]],130],[[[156,[-1]]],[[13,[39,[9,[39]]]]],130],[[[155,[-1]]],[[13,[39,[9,[39]]]]],130],[[[157,[-1]]],[[13,[39,[9,[39]]]]],130],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[293,[-1]]],[[294,[-1]]],295],[-1,70,[]],[-1,70,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[296,296],[297,297],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[[293,[-1]]],137,295],[[],296],[[],297],[[[293,[-1]]],[[13,[4,4]]],295],[[[298,[-1]],[45,[5]],4,4,137],[[16,[13,149]]],178],[[296,296],2],[[297,297],2],[[-1,70],2,[]],[[-1,70],2,[]],[[296,32],[[16,[13,33]]]],[[297,32],[[16,[13,33]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[293,[-1]]],[[9,[[6,[5]]]]],295],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[294,[-1]]],148,295],[[[293,[-1]]],[[16,[149]]],295],[[[293,[-1]]],2,295],[-1,[[16,[[293,[-1]],149]]],295],[-1,[[298,[-1]]],178],[[-1,296,297],[[298,[-1]]],178],[[],-1,[]],[[],-1,[]],[[[299,[-1]],[45,[5]]],[[16,[39,48]]],295],[[[293,[-1]],[45,[5]]],[[16,[13,149]]],295],[[[299,[-1]],[6,[5]]],[[16,[39,48]]],295],[[[293,[-1]]],153,295],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,177],[[16,[[293,[-1]],149]]],295],[[[298,[-1]],[45,[5]],4,4,137],[[16,[13,149]]],178],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[300,300],[301,301],[302,302],[303,303],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[300,300],2],[[301,301],2],[[302,302],2],[[303,303],2],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[304,32],[[16,[13,33]]]],[[304,32],[[16,[13,33]]]],[[300,32],[[16,[13,33]]]],[[305,32],[[16,[13,33]]]],[[305,32],[[16,[13,33]]]],[[306,32],[[16,[13,33]]]],[[306,32],[[16,[13,33]]]],[[301,32],[[16,[13,33]]]],[[307,32],[[16,[13,33]]]],[[307,32],[[16,[13,33]]]],[[308,32],[[16,[13,33]]]],[[308,32],[[16,[13,33]]]],[[302,32],[[16,[13,33]]]],[[303,32],[[16,[13,33]]]],[[303,32],[[16,[13,33]]]],[304,303],[305,303],[307,303],[-1,-1,[]],[303,304],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[162,303],[140,303],[-1,-1,[]],[[303,300],304],[303,305],[303,307],[301,306],[302,308],[[300,-1],13,37],[[301,-1],13,37],[[302,-1],13,37],[[303,-1],13,37],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[304,300],[306,301],[308,302],[[303,-1],305,[[8,[[77,[76]]]]]],[[303,-1],307,[[8,[[77,[76]]]]]],[305,[[9,[76]]]],[306,[[9,[76]]]],[307,[[9,[76]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,75,[]],[-1,75,[]],[-1,75,[]],[-1,75,[]],[-1,75,[]],[-1,75,[]],[[-1,47],75,[]],[[-1,47],75,[]],[[-1,47],75,[]],[[-1,47],75,[]],[[-1,47],75,[]],[[-1,47],75,[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,70,[]],[-1,70,[]],[-1,70,[]],[[[136,[-1,-2]],4,4],13,[[132,[45]],[46,[45]]],130],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[175,[[13,[5,4,4]]]],[[[134,[-1,-2]]],[[13,[4,4,4,4]]],[[46,[45]]],130],[[[136,[-1,-2]]],[[13,[4,4,4,4]]],[[132,[45]],[46,[45]]],130],0,0,[175,175],[[[134,[-1,-2]]],[[134,[-1,-2]]],[27,[46,[45]]],[27,130]],[[[136,[-1,-2]]],[[136,[-1,-2]]],[27,[132,[45]]],[27,130]],[135,135],[165,165],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],0,[[5,4,4],175],[[[134,[-1,-2]]],[[13,[4,4]]],[[46,[45]]],130],[[[136,[-1,-2]]],[[13,[4,4]]],[[132,[45]],[46,[45]]],130],[[175,175],2],[[135,135],2],[[165,165],2],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[175,[[13,[39,39,39]]]],[[175,39],2],[[[134,[-1,-2]]],[[129,[-1]]],[[46,[45]]],130],[[[136,[-1,-2]]],[[129,[-1]]],[[132,[45]]],130],[[175,32],[[16,[13,33]]]],[[[134,[-1,-2]],32],[[16,[13,33]]],[34,[46,[45]]],[34,130]],[[[136,[-1,-2]],32],[[16,[13,33]]],[34,[132,[45]]],[34,130]],[[135,32],[[16,[13,33]]]],[[135,32],[[16,[13,33]]]],[[165,32],[[16,[13,33]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[134,[-1,-2]],5,4,4],9,[[132,[45]],[46,[45]]],130],[[[136,[-1,-2]],5,4,4],9,[[132,[45]]],130],[[[134,[-1,-2]],4,4],[],[[46,[45]]],130],[[[136,[-1,-2]],4,4],[],[[132,[45]],[46,[45]]],130],[[[136,[-1,-2]],4,4],[],[[132,[45]],[46,[45]]],130],[[[134,[-1,-2]],5,4,4],9,[[46,[45]]],130],[[[136,[-1,-2]],5,4,4],9,[[46,[45]],[132,[45]]],130],[175,2],[[175,-1],13,37],[[135,-1],13,37],[[165,-1],13,37],0,0,[[[134,[-1,-2]]],45,[[132,[45]],[46,[45]]],130],[[[136,[-1,-2]]],45,[[132,[45]]],130],[[[134,[-1,-2]]],45,[[46,[45]]],130],[[[136,[-1,-2]]],45,[[46,[45]],[132,[45]]],130],[[175,5,4,4],2],[[[134,[-1,-2]],4,4],2,[[46,[45]]],130],[[[136,[-1,-2]],4,4],2,[[132,[45]],[46,[45]]],130],[[175,5,4,4],39],[[175,5,4,4],[[9,[39]]]],[[175,39,39,39],[[9,[39]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[134,[-1,-2]]],[[129,[-1]]],[[46,[45]]],130],[[[136,[-1,-2]]],[[129,[-1]]],[[132,[45]]],130],[[175,165],2],0,[175,[[9,[39]]]],[[[134,[-1,-2]]],39,[[46,[45]]],130],[[[136,[-1,-2]]],39,[[132,[45]]],130],[[165,165],[[9,[169]]]],[[[136,[-1,-2]],4,4],13,[[132,[45]],[46,[45]]],130],[[5,4,4],175],[[[134,[-1,-2]]],-1,[[46,[45]]],130],[[[136,[-1,-2]]],-1,[[132,[45]]],130],0,[[175,5,4,4],13],[[[134,[-1,-2]],4,4],13,[[46,[45]]],130],[[[136,[-1,-2]],4,4],13,[[132,[45]]],130],[175,[[13,[39,39,39]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,75,[]],[[-1,47],75,[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[[[134,[-1,-2]]],[[16,[[136,[-1,-2]],[13,[135,[134,[-1,-2]]]]]]],[[132,[45]],[46,[45]]],130],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[-1,70,[]],[[-1,58],[[128,[6]]],151],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,106],[[128,[-2,[6,[-3]]]]],151,130,123],[309,309],[172,172],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],0,[[-1,58],[[128,[-2,[6,[-3]]]]],151,130,123],[[-1,4,4,4,4],[[141,[-1]]],151],[[-1,4,4,4,4],[[141,[-1]]],151],[[[128,[-1,[6,[5]]]],-2],13,130,[310,147]],[[172,172],2],[[-1,70],2,[]],[[-1,[45,[58]]],[[128,[-2,[6,[-3]]]]],151,130,123],[-1,[[128,[6]]],151],[[-1,[128,[-2]]],[[16,[13,149]]],151,138],[-1,13,311],[-1,[[128,[6]]],151],[[-1,[128,[-2]]],[[16,[13,149]]],151,138],[-1,13,311],[[172,32],[[16,[13,33]]]],[-1,-1,[]],[-1,-1,[]],[-1,[[128,[125,6]]],151],[-1,[[128,[127,6]]],151],[-1,[[128,[-2,6]]],151,[130,[150,[125]]]],[-1,[[128,[-2,6]]],151,[130,[150,[127]]]],[-1,2,[]],[309,2],[[-1,-2,-2],13,311,130],[[-1,106],[[128,[-2,[6,[-3]]]]],151,130,123],[[[128,[-1,[6,[5]]]],-2],[[128,[[125,[5]],[6,[5]]]]],130,[310,147]],[-1,39,[]],[[309,[125,[5]]],39],[[-1,58,58],[[9,[-2]]],151,130],[[-1,58,58],[[9,[-2]]],151,130],[-1,-2,[],[]],[-1,-2,[],[]],[-1,13,311],[[-1,39],9,[]],[[309,39],9],[-1,13,[]],[[309,[125,[5]]],13],[[-1,-2,312,312],13,311,151],[[[13,[4,4]],[13,[4,4]],4,4],[[13,[4,4]]]],[[-1,-2,312,312],13,311,151],[[-1,4,4,172],[[128,[6]]],151],[-1,[[128,[6]]],151],[[-1,[128,[-2]]],[[16,[13,149]]],151,138],[-1,13,311],[-1,[[128,[6]]],151],[[-1,[128,[-2]]],[[16,[13,149]]],151,138],[-1,[[128,[6]]],151],[[-1,[128,[-2]]],[[16,[13,149]]],151,138],[[-1,58,58],[[9,[-2]]],151,130],[[-1,58,58],[[9,[-2]]],151,130],[[-1,4,4],[[128,[-2,[6,[-3]]]]],151,130,[123,124]],[[-1,-2],13,311,151],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[[-1,58,106],[[128,[-2,[6,[-3]]]]],151,130,123],[[-1,-2,-2],13,311,130],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[-1,106],[[128,[-2,[6,[-3]]]]],151,130,123],[[-1,106],13,311],[[-1,58],[[128,[-2,[6,[-3]]]]],151,130,123],[[-1,58],13,311],[[[128,[-1,[6,[5]]]],-2],13,130,[310,147]],[-1,[[128,[125,6]]],151],[-1,[[128,[127,6]]],151],[-1,[[128,[-2,6]]],151,[130,[150,[125]]]],[-1,[[128,[-2,6]]],151,[130,[150,[127]]]],[-1,2,[]],[[-1,106],[[128,[-2,[6,[-3]]]]],151,130,123],[[-1,106],13,311],[[[128,[-1,[6,[5]]]],-2],[[128,[[125,[5]],[6,[5]]]]],130,[310,147]],[-1,39,[]],[-1,13,311],[[-1,39],9,[]],[-1,13,[]],0,0,0,[-1,70,[]],[-1,70,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[177,4,4],[[16,[13,149]]]],[[177,313],[[16,[13,149]]]],[[[314,[-1]]],13,295],[313,313],[177,177],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[[314,[-1]]],[[16,[81,149]]],[166,167]],[[],313],[[],177],[[313,313],2],[[177,177],2],[[-1,70],2,[]],[[-1,70],2,[]],[[313,32],[[16,[13,33]]]],[[177,32],[[16,[13,33]]]],[[[314,[-1]]],[[9,[140]]],295],[[177,153],13],[[177,39],13],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[313,-1],13,37],[[177,-1],13,37],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[314,[-1]]],[[16,[[13,[4,4]],149]]],[166,167]],[[[314,[-1]]],-1,295],[[[314,[-1]],177],13,295],0,0,0,[-1,[[314,[-1]]],295],[[[314,[-1]]],13,295],[[],177],[[],-1,[]],[[],-1,[]],[-1,[[16,[[314,[[316,[315]]]],48]]],[[46,[162]]]],[[177,153],[[16,[13,149]]]],[[177,39],[[16,[13,149]]]],[[[314,[-1]],140],13,295],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,140],[[314,[-1]]],295],[[[314,[-1]]],[[16,[[314,[-1]],48]]],[166,167]],0,[-1,70,[]],[-1,-2,[],[]],[-1,-2,[],[]],[152,152],[[-1,-2],13,[],[]],[[152,152],2],[[-1,70],2,[]],[[152,32],[[16,[13,33]]]],[-1,-1,[]],[[152,-1],13,37],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,70,[]],[[[284,[[6,[-1]]]]],[[13,[[45,[-1]],39,39]]],317],[-1,[[284,[[45,[-2]]]]],[],[]],[[[284,[-2]]],[[284,[[45,[-1]]]]],[],[[132,[[45,[-1]]]]]],[[[284,[[6,[-1]]]]],[[284,[[45,[-1]]]]],[]],[-1,[[284,[[45,[-2]]]]],[],[]],[[[284,[-2]]],[[284,[[45,[-1]]]]],[],[[46,[[45,[-1]]]]]],[[[284,[[45,[-1]]]]],[[284,[[45,[-1]]]]],[]],[[[284,[[6,[-1]]]]],[[284,[[45,[-1]]]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[284,[-1]]],-1,[]],0,0,0,0,[[[284,[-1]]],-1,[]],[[[284,[-1]]],[[284,[-1]]],27],[[-1,-2],13,[],[]],[[[318,[-1]]],39,[]],[[[319,[-1]]],39,[]],[[[284,[[45,[-2]]]],[284,[[6,[-1]]]]],2,[],[[158,[-1]]]],[[[284,[[6,[-2]]]],[284,[[6,[-1]]]]],2,[],[[158,[-1]]]],[[[284,[[45,[-2]]]],[284,[[45,[-1]]]]],2,[],[[158,[-1]]]],[[[284,[[45,[-2]]]],[284,[[45,[-1]]]]],2,[],[[158,[-1]]]],[[[284,[[45,[-2]]]],[284,[[45,[-1]]]]],2,[],[[158,[-1]]]],[[[284,[[6,[-2]]]],[284,[[45,[-1]]]]],2,[],[[158,[-1]]]],[[[284,[[45,[-2]]]],[284,[[45,[-1]]]]],2,[],[[158,[-1]]]],[[-1,70],2,[]],[[[318,[-1]],32],[[16,[13,33]]],34],[[[319,[-1]],32],[[16,[13,33]]],34],[[[320,[-1]],32],[[16,[13,33]]],34],[[[321,[-1]],32],[[16,[13,33]]],34],[[[284,[-1]],32],[[16,[13,33]]],34],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[284,[[322,[[45,[-1]]]]]]],[[284,[[6,[-1]]]]],27],[[[284,[[6,[-1]]]]],[[284,[[322,[[45,[-1]]]]]]],27],[[[284,[[45,[-1]]]]],[[284,[[322,[[45,[-1]]]]]]],27],[[[284,[[45,[-1]]]],-2],13,38,37],[[[284,[[45,[-1]]]],-2],13,38,37],[[[284,[[6,[-1]]]],-2],13,38,37],[[[284,[-1]]],39,[]],0,0,0,0,[-1,39,[]],[[[284,[-2]]],39,[],[[46,[[45,[-1]]]]]],[[[284,[[45,[-1]]]],39],[],317],[[[284,[[45,[-1]]]],[13,[39,39]]],[],317],[[[284,[[45,[-1]]]],39],[],317],[[[284,[[6,[-1]]]],39],[],317],[[[284,[[45,[-1]]]],[13,[4,4]]],[],317],[[[284,[[6,[-1]]]],[13,[39,39]]],[],317],[[[284,[[45,[-1]]]],[13,[39,39]]],[],317],[[[284,[[6,[-1]]]],[13,[4,4]]],[],317],[[[284,[[45,[-1]]]],[13,[4,4]]],[],317],[[[284,[[45,[-1]]]],39],[],317],[[[284,[[45,[-1]]]],[13,[39,39]]],[],317],[[[284,[[6,[-1]]]],[13,[39,39]]],[],317],[[[284,[[45,[-1]]]],[13,[4,4]]],[],317],[[[284,[[6,[-1]]]],[13,[4,4]]],[],317],[[[284,[[6,[-1]]]],39],[],317],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[284,[-1]]],-1,[]],[[[284,[[6,[-1]]]]],[[13,[[6,[-1]],39,39]]],317],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[284,[-1]]],[],189],[[[284,[[322,[[45,[-1]]]]]]],[[284,[[6,[-1]]]]],27],[[[323,[-1]]],39,317],[[[318,[-1]]],39,[]],[[[284,[-2]],-3],[[284,[-5]]],[],[[46,[[45,[-1]]]]],10,[],[[46,[[45,[-4]]]]]],[[-1,39,39],[[284,[-1]]],[]],[[[284,[-2]],-4],[[284,[-4]]],[],[[46,[[45,[-1]]]]],[],[[46,[[45,[-3]]]]]],[[-1,39,39,39],[[284,[-1]]],[]],[[[323,[-1]]],9,317],[[[318,[-1]]],9,[]],[[[319,[-1]]],9,[]],[[[320,[-1]]],9,[]],[[[321,[-1]]],9,[]],[[[318,[-1]]],9,[]],[[[319,[-1]]],9,[]],[[[318,[-1]],39],9,[]],[[[319,[-1]],39],9,[]],[[[284,[[45,[-1]]]]],[[323,[-1]]],317],[[[284,[[6,[-1]]]]],[[323,[-1]]],317],[[[284,[[45,[-1]]]]],[[323,[-1]]],317],[[[284,[[45,[-1]]]]],[[321,[-1]]],317],[[[284,[[6,[-1]]]]],[[321,[-1]]],317],[[[284,[[45,[-1]]]]],[[320,[-1]]],[]],[[[284,[[6,[-1]]]]],[[318,[-1]]],[]],[[[284,[[45,[-1]]]]],[[318,[-1]]],[]],[[[284,[[45,[-1]]]]],[[318,[-1]]],[]],[[[284,[[6,[-1]]]]],[[319,[-1]]],[]],[[[284,[[45,[-1]]]]],[[319,[-1]]],[]],[-1,[[324,[-2]]],[],[]],[[[284,[-2]]],[[324,[-1]]],[],[[46,[[45,[-1]]]]]],[-1,[[325,[-2]]],[],[]],[[[284,[-2]]],[[325,[-1]]],[],[[132,[[45,[-1]]]]]],[[[318,[-1]]],[[13,[39,[9,[39]]]]],[]],[[[319,[-1]]],[[13,[39,[9,[39]]]]],[]],[[[320,[-1]]],[[13,[39,[9,[39]]]]],[]],[[[284,[-1]]],39,[]],0,0,0,0,[[[284,[[6,[-1]]]],39,39,39,39],[[284,[[45,[-1]]]]],[]],[[[284,[[45,[-1]]]],39,39,39,39],[[284,[[45,[-1]]]]],[]],[[[284,[[45,[-1]]]],39,39,39,39],[[284,[[45,[-1]]]]],[]],[[[284,[[45,[-1]]]],39,39,39,39],[[284,[[45,[-1]]]]],[]],[[[284,[[6,[-1]]]],39,39,39,39],[[284,[[45,[-1]]]]],[]],[[[284,[[45,[-1]]]]],[[13,[[322,[[45,[-1]]]],39,39]]],27],[-1,-2,[],[]],[[[284,[-1]]],284,326],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[284,[-1]]],39,[]],0,0,0,0,[-1,39,[]],[[[284,[-2]]],39,[],[[46,[[45,[-1]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,257],[[16,[252]]],[]],[[68,257],[[16,[252]]]],[[327,257],[[16,[252]]]],[-1,70,[]],[-1,70,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[328,328],[289,289],[329,329],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,257],[[16,[252]]],[]],[[68,257],[[16,[252]]]],[[327,257],[[16,[252]]]],[[],328],[[],289],[[],329],[[-1,269],13,[]],[[68,269],13],[[327,269],13],[68,13],[[289,289],2],[[329,329],2],[[-1,70],2,[]],[[-1,70],2,[]],[[328,32],[[16,[13,33]]]],[[330,32],[[16,[13,33]]]],[[290,32],[[16,[13,33]]]],[[289,32],[[16,[13,33]]]],[[329,32],[[16,[13,33]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[329,-1],13,37],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[68,2],[330,290],[[58,58,58,58],289],[-1,[[16,[68,252]]],121],[-1,[[16,[68,252]]],121],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[289,289],[[9,[169]]]],[[-1,288,[45,[289]],[6,[290]]],13,[]],[[68,288,[45,[289]],[6,[290]]],13],[[327,[288,[331]],[45,[289]],[6,[290]]],13],[-1,[[16,[[284,[[6,[[285,[5]]]]]],252]]],[]],[68,[[16,[[284,[[6,[[285,[5]]]]]],252]]]],[327,[[16,[[284,[[6,[[285,[5]]]]]],252]]]],[[289,58,58,58,58],13],[[68,9],13],[[-1,4,4,58],13,[]],[[68,4,4,58],13],[[327,4,4,58],13],[329,58],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[329,5],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],0,[[-1,271,39,39],[[16,[13,252]]],[]],[[68,271,39,39],[[16,[13,252]]]],[[327,271,39,39],[[16,[13,252]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[286,[-1]],[286,[-1]]],[],332],[[[286,[-1]],-1],[],[317,332]],[[[285,[-1,-2]],[285,[-1,-2]]],[],332,332],[[[285,[-1]],-1],[],[317,332]],[[[286,[-1]],-1],13,[317,332]],[[[286,[-1]],[286,[-1]]],13,[332,317]],[[[285,[-1]],-1],13,[317,332]],[[[285,[-1,-2]],[285,[-1,-2]]],13,[332,317],[332,317]],[[[286,[-1]],-1],[[285,[-1]]],27],[[[285,[-1,-2]],-2],[[285,[-1,-2]]],317,27],0,[-1,70,[]],[-1,70,[]],[-1,[[45,[[333,[-2]]]]],[],[]],[-1,[[45,[[333,[-2]]]]],[],[]],[-1,[[45,[[334,[-2]]]]],[],[]],[-1,[[45,[[334,[-2]]]]],[],[]],[-1,[[45,[5]]],[]],[-1,[[45,[5]]],[]],[-1,[[45,[[283,[-2]]]]],[],[]],[-1,[[45,[[335,[-2]]]]],[],[]],[-1,[[45,[[335,[-2]]]]],[],[]],[-1,[[45,[[283,[-2]]]]],[],[]],[[[286,[-1]]],[[45,[-1]]],[]],[[[285,[-1]]],[[45,[-1]]],[]],[-1,[[45,[-2]]],[],[]],[[[286,[-1]]],[[45,[-1]]],[]],[[[285,[-1]]],[[45,[-1]]],[]],[-1,[[45,[-2]]],[],[]],[-1,[[45,[-2]]],[],[]],[[[286,[-1]]],[[45,[-1]]],[]],[[[285,[-1]]],[[45,[-1]]],[]],[-1,[[45,[[286,[-2]]]]],[],[]],[-1,[[45,[[286,[-2]]]]],[],[]],[-1,[[45,[[285,[-2]]]]],[],[]],[-1,[[45,[[285,[-2]]]]],[],[]],[-1,[[45,[-2]]],[],[]],[[[286,[-1]]],[[45,[-1]]],[]],[[[285,[-1]]],[[45,[-1]]],[]],0,0,0,0,0,0,[[[285,[-1,-2]]],[[333,[-1]]],27,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[286,[-1]]],[[286,[-1]]],27],[[[285,[-1,-2]]],[[285,[-1,-2]]],27,27],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[[286,[-1]],[286,[-1]]],169,336],[[[285,[-1,-2]],[285,[-1,-2]]],169,336,336],[[],[[286,[-1]]],31],[[],[[285,[-1,-2]]],31,31],[[[286,[-1]],-1],[],[317,337]],[[[285,[-1]],-1],[],[317,337]],[[[286,[-1]],-1],13,[317,337]],[[[285,[-1]],-1],13,[317,337]],[-1,-2,[],[[339,[338]]]],[-1,-2,[],[[339,[338]]]],[-1,-2,[],[[339,[338]]]],[-1,-2,[],[[339,[338]]]],[[[286,[-1]],[286,[-1]]],2,158],[[[285,[-1,-2]],[285,[-1,-2]]],2,158,158],[[-1,70],2,[]],[[-1,70],2,[]],[[[286,[-1]],32],[[16,[13,33]]],340],[[[286,[-1]],32],[[16,[13,33]]],341],[[[286,[-1]],32],[[16,[13,33]]],342],[[[286,[-1]],32],[[16,[13,33]]],34],[[[285,[-1,-2]],32],[[16,[13,33]]],341,341],[[[285,[-1,-2]],32],[[16,[13,33]]],34,34],[[[286,[5]]],[[286,[343]]]],[[[283,[-1]]],[[286,[-1]]],27],[[[286,[133]]],[[286,[106]]]],[[[286,[343]]],[[286,[58]]]],[-1,-1,[]],[[[286,[5]]],[[286,[4]]]],[[[286,[5]]],[[286,[133]]]],[[[286,[133]]],[[286,[87]]]],[[[286,[106]]],[[286,[87]]]],[[[333,[-1]]],[[286,[-1]]],27],[[[286,[5]]],[[286,[87]]]],[[[286,[133]]],[[286,[58]]]],[[[13,[-1,-1,-1]]],[[286,[-1]]],[]],[[[286,[133]]],[[286,[4]]]],[[[286,[343]]],[[286,[87]]]],[[[286,[5]]],[[286,[58]]]],[[[286,[58]]],[[286,[87]]]],[[[286,[133]]],[[286,[153]]]],[[[159,[-1]]],[[286,[-1]]],317],[-1,-1,[]],[[[285,[133]]],[[285,[4]]]],[[[285,[343]]],[[285,[87]]]],[[[334,[-1]]],[[285,[-1]]],27],[[[285,[5]]],[[285,[87]]]],[[[283,[-1]]],[[285,[-1,5]]],27],[[[285,[343]]],[[285,[58]]]],[[[285,[133]]],[[285,[153]]]],[[[285,[133]]],[[285,[106]]]],[[[333,[-1]]],[[285,[-1,5]]],317],[[[333,[-1]]],[[285,[-1,133]]],317],[[[285,[133]]],[[285,[58]]]],[[[285,[5]]],[[285,[4]]]],[[[285,[106]]],[[285,[87]]]],[[[285,[5]]],[[285,[133]]]],[[[285,[58]]],[[285,[87]]]],[[[285,[5]]],[[285,[58]]]],[[[286,[-1]]],[[285,[-1,133]]],317],[[[335,[-1,-2]]],[[285,[-1,-2]]],27,[]],[[[13,[-1,-1,-1,-2]]],[[285,[-1,-2]]],[],[]],[[[159,[-1]]],[[285,[-1]]],317],[[[285,[5]]],[[285,[343]]]],[[[285,[133]]],[[285,[87]]]],[[[286,[-1]]],[[285,[-1,5]]],317],[-1,[[286,[-2]]],189,[]],[-1,[[285,[-2]]],189,[]],0,0,0,0,0,0,[[[286,[-1]],-2],13,38,37],[[[285,[-1,-2]],-3],13,38,38,37],[-1,-2,[],[]],[[[286,[-1]]],[[159,[-1]]],[]],[[[286,[-1]]],[[13,[-1,-1,-1]]],[]],[[[285,[-1,-2]]],[[13,[-1,-1,-1,-2]]],[],[]],[-1,-2,[],[]],[[[285,[-1]]],[[159,[-1]]],[]],[-1,2,[]],[-1,2,[]],[[[286,[-1]]],[[345,[[344,[-1]]]]],27],[[[285,[-1]]],[[345,[[344,[-1]]]]],27],[[-1,-2],-3,[],121,[]],[[[286,[-1]],-2],[[286,[-3]]],317,121,[]],[[[285,[-1]],-2],[[285,[-3]]],317,121,[]],[[[285,[-1,-2]],-3],[[285,[-1,-4]]],317,27,10,[]],[[-1,-2],-3,[],121,[]],[[[286,[-1]],-2],[[286,[-3]]],317,121,[]],[[[285,[-1,-2]],-3],[[285,[-4,-2]]],317,317,121,[]],[[[285,[-1,-2]],-3],[[285,[-4,-5]]],317,27,121,27,[[346,[-2]],27]],[[[286,[-1]],-1],[],[317,347]],[[[286,[-1]],[286,[-1]]],[],347],[[[285,[-1]],-1],[],[317,347]],[[[286,[-1]],[286,[-1]]],13,[347,317]],[[[286,[-1]],-1],13,[317,347]],[[[285,[-1]],-1],13,[317,347]],[[-1,-1,-1],[[286,[-1]]],[]],[[-1,-1,-1,-1],[[285,[-1]]],[]],[[[286,[-1]],-2],[[285,[-1,-2]]],27,[]],[[-1,-1,-1,-2],[[285,[-1,-2]]],[],[]],[[],-1,[]],[[],-1,[]],[[[286,[-1]],[286,[-1]]],[[9,[169]]],348],[[[285,[-1,-2]],[285,[-1,-2]]],[[9,[169]]],348,348],0,0,0,0,0,0,[[[285,[-1,-2]]],[[286,[-1]]],27,[]],[[[285,[-1,-2]]],[[286,[-1]]],[],[]],[[[286,[-1]],-1],[],[317,349]],[[[286,[-1]],[286,[-1]]],[],349],[[[285,[-1,-2]],[285,[-1,-2]]],[],349,349],[[[285,[-1]],-1],[],[317,349]],[[[286,[-1]],[286,[-1]]],13,[349,317]],[[[286,[-1]],-1],13,[317,349]],[[[285,[-1]],-1],13,[317,349]],[[[285,[-1,-2]],[285,[-1,-2]]],13,[349,317],[349,317]],[-1,[[286,[-2]]],168,[31,332]],[-1,[[285,[-2,-3]]],168,[31,332],[31,332]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,75,[]],[-1,75,[]],[[-1,47],75,[]],[[-1,47],75,[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[283,[-1]],-1],[],[317,332]],[[[283,[-1]],[283,[-1]]],[],332],[[[335,[-1,-2]],[335,[-1,-2]]],[],332,332],[[[335,[-1]],-1],[],[317,332]],[[[283,[-1]],[283,[-1]]],13,[332,317]],[[[283,[-1]],-1],13,[317,332]],[[[335,[-1]],-1],13,[317,332]],[[[335,[-1,-2]],[335,[-1,-2]]],13,[332,317],[332,317]],[[[333,[-1]],-1],[[334,[-1]]],27],[[[334,[-1,-2]],-2],[[334,[-1,-2]]],317,27],[[[335,[-1,-2]],-2],[[335,[-1,-2]]],317,27],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[[[283,[-1]]],-1,[]],[[[335,[-1]]],-1,[]],[[[333,[-1]]],[[45,[-1]]],[]],[[[334,[-1]]],[[45,[-1]]],[]],[[[283,[-1]]],[[45,[-1]]],[]],[[[335,[-1]]],[[45,[-1]]],[]],[[[283,[-1]]],-1,[]],[[[335,[-1]]],-1,[]],[[[333,[-1]]],[[45,[-1]]],[]],[[[334,[-1]]],[[45,[-1]]],[]],[[[283,[-1]]],[[45,[-1]]],[]],[[[335,[-1]]],[[45,[-1]]],[]],0,0,0,0,0,0,[[[334,[-1,-2]]],[[333,[-1]]],27,[]],[[[334,[-1,-2]]],[[333,[-1]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[333,[-1]]],[[333,[-1]]],27],[[[334,[-1,-2]]],[[334,[-1,-2]]],27,27],[[[283,[-1]]],[[283,[-1]]],27],[[[335,[-1,-2]]],[[335,[-1,-2]]],27,27],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[[333,[-1]],[333,[-1]]],169,336],[[[334,[-1,-2]],[334,[-1,-2]]],169,336,336],[[[283,[-1]],[283,[-1]]],169,336],[[[335,[-1,-2]],[335,[-1,-2]]],169,336,336],[[],[[333,[-1]]],31],[[],[[334,[-1,-2]]],31,31],[[],[[283,[-1]]],31],[[],[[335,[-1,-2]]],31,31],[[[283,[-1]]],-1,[]],[[[283,[-1]],-1],[],[317,337]],[[[335,[-1]],-1],[],[317,337]],[[[283,[-1]],-1],13,[317,337]],[[[335,[-1]],-1],13,[317,337]],[-1,-2,[],[[339,[338]]]],[-1,-2,[],[[339,[338]]]],[-1,-2,[],[[339,[338]]]],[-1,-2,[],[[339,[338]]]],[[[333,[-1]],[333,[-1]]],2,158],[[[334,[-1,-2]],[334,[-1,-2]]],2,158,158],[[[283,[-1]],[283,[-1]]],2,158],[[[335,[-1,-2]],[335,[-1,-2]]],2,158,158],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[[333,[-1]],32],[[16,[13,33]]],340],[[[333,[-1]],32],[[16,[13,33]]],341],[[[333,[-1]],32],[[16,[13,33]]],34],[[[333,[-1]],32],[[16,[13,33]]],342],[[[334,[-1,-2]],32],[[16,[13,33]]],341,341],[[[334,[-1,-2]],32],[[16,[13,33]]],34,34],[[[283,[-1]],32],[[16,[13,33]]],34],[[[335,[-1,-2]],32],[[16,[13,33]]],34,34],[-1,-1,[]],[[[286,[-1]]],[[333,[-1]]],27],[[[13,[-1,-1,-1]]],[[333,[-1]]],[]],[[[159,[-1]]],[[333,[-1]]],317],[[[285,[-1]]],[[334,[-1]]],27],[[[286,[-1]]],[[334,[-1,133]]],317],[-1,-1,[]],[[[13,[-1,-1,-1,-2]]],[[334,[-1,-2]]],[],[]],[[[333,[-1]]],[[334,[-1,5]]],317],[[[286,[-1]]],[[334,[-1,5]]],317],[[[159,[-1]]],[[334,[-1]]],317],[[[333,[-1]]],[[334,[-1,133]]],317],[-1,-1,[]],[350,-1,[]],[-1,[[283,[-1]]],317],[[[283,[-1]]],[[335,[-1,133]]],317],[[[283,[-1]]],[[335,[-1,5]]],317],[-1,-1,[]],0,0,0,0,0,0,[[[335,[-1,-2]]],[[283,[-1]]],27,[]],[[[335,[-1,-2]]],[[283,[-1]]],[],[]],[[[333,[-1]],-2],13,38,37],[[[334,[-1,-2]],-3],13,38,38,37],[[[283,[-1]],-2],13,38,37],[[[335,[-1,-2]],-3],13,38,38,37],[[[333,[-1]]],[[13,[-1,-1,-1]]],[]],[[[333,[-1]]],[[159,[-1]]],[]],[-1,-2,[],[]],[[[334,[-1]]],[[159,[-1]]],[]],[[[334,[-1,-2]]],[[13,[-1,-1,-1,-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[[[333,[-1]]],[[345,[[344,[-1]]]]],27],[[[334,[-1]]],[[345,[[344,[-1]]]]],27],[[[333,[-1]],-2],[[333,[-3]]],317,121,[]],[[[334,[-1]],-2],[[334,[-3]]],317,121,[]],[[[283,[-1]],-2],[[283,[-3]]],317,121,[]],[[[335,[-1]],-2],[[335,[-3]]],317,121,[]],[[[334,[-1,-2]],-3],[[334,[-1,-4]]],317,27,10,[]],[[[335,[-1,-2]],-3],[[335,[-1,-4]]],317,27,10,[]],[[[333,[-1]],-2],[[333,[-3]]],317,121,[]],[[[334,[-1,-2]],-3],[[334,[-4,-2]]],317,317,121,[]],[[[283,[-1]],-2],[[283,[-3]]],317,121,[]],[[[335,[-1,-2]],-3],[[335,[-4,-2]]],317,317,121,[]],[[[335,[-1,-2]],-3],[[335,[-4,-5]]],317,27,10,27,[[346,[-2]],27]],[[[334,[-1,-2]],-3],[[334,[-4,-5]]],317,27,121,27,[[346,[-2]],27]],[[[283,[-1]],[283,[-1]]],[],347],[[[283,[-1]],-1],[],[317,347]],[[[335,[-1]],-1],[],[317,347]],[[[283,[-1]],-1],13,[317,347]],[[[283,[-1]],[283,[-1]]],13,[347,317]],[[[335,[-1]],-1],13,[317,347]],[[-1,-1,-1],[[333,[-1]]],[]],[[-1,-1,-1,-1],[[334,[-1]]],[]],[-1,[[283,[-1]]],[]],[[-1,-2],[[335,[-1,-2]]],[],[]],[[[333,[-1]],-2],[[334,[-1,-2]]],27,[]],[[-1,-1,-1,-2],[[334,[-1,-2]]],[],[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[],-1,[]],[[[333,[-1]],[333,[-1]]],[[9,[169]]],348],[[[334,[-1,-2]],[334,[-1,-2]]],[[9,[169]]],348,348],[[[283,[-1]],[283,[-1]]],[[9,[169]]],348],[[[335,[-1,-2]],[335,[-1,-2]]],[[9,[169]]],348,348],0,0,0,0,0,0,[[[334,[-1,-2]]],[[333,[-1]]],27,[]],[[[334,[-1,-2]]],[[333,[-1]]],[],[]],[[[283,[-1]],[283,[-1]]],[],349],[[[283,[-1]],-1],[],[317,349]],[[[335,[-1]],-1],[],[317,349]],[[[335,[-1,-2]],[335,[-1,-2]]],[],349,349],[[[283,[-1]],[283,[-1]]],13,[349,317]],[[[283,[-1]],-1],13,[317,349]],[[[335,[-1,-2]],[335,[-1,-2]]],13,[349,317],[349,317]],[[[335,[-1]],-1],13,[317,349]],[-1,[[283,[-2]]],168,[31,332]],[-1,[[335,[-2,-3]]],168,[31,332],[31,332]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,75,[]],[-1,75,[]],[[-1,47],75,[]],[[-1,47],75,[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[-1,60,44],13,[]],[[[352,[351]],-1],[[352,[351]]],[[208,[55]]]],[[[352,[-1]],-2,-3],[[352,[-1]]],[],19,11],[-1,-2,[],[]],[-1,-2,[],[]],[[[352,[-1]]],61,[]],[[-1,36,-2],[[352,[-1]]],[],10],[[[352,[[353,[-1,-2]]]],2],[[352,[[353,[-1,-2]]]]],19,[354,204,317]],[[[352,[-1]]],36,[]],[[[352,[-1]]],[[9,[-2]]],[],[]],[[[352,[355]],-1],[[352,[355]]],[[8,[75]]]],[[-1,53,[69,[68]]],13,[]],[-1,[[9,[80]]],[]],[[[352,[-1]]],40,[]],[[-1,47,73],13,[]],[-1,-1,[]],[-1,-2,[],[]],[[[352,[356]],58],[[352,[356]]]],[[[352,[[357,[-1]]]],58],[[352,[[357,[-1]]]]],19],[[[352,[-1]]],[[352,[-1]]],[]],[[[352,[-1]],-2],[[352,[-1]]],[],10],[[[352,[-1]]],13,[]],[[[352,[-1]]],13,[]],[[[352,[-1]]],13,[]],[[[352,[[358,[-1]]]],-2],[[352,[[358,[-1]]]]],19,11],[[[352,[[359,[-1]]]],-2],[[352,[[359,[-1]]]]],19,[11,71,181]],[[[352,[[360,[-1]]]],-2],[[352,[[360,[-1]]]]],19,11],[[[352,[-1]],-2],[[352,[-1]]],[],11],[[[352,[[359,[-1]]]],-2],[[352,[[359,[-1]]]]],19,[11,71,181]],[[[352,[361]],-1],[[352,[361]]],11],[[[352,[362]],-1],[[352,[362]]],11],[[[352,[[363,[-1,-2]]]],-3],[[352,[[363,[-1,-2]]]]],19,[354,204],11],[[[352,[364]],-1],[[352,[364]]],11],[[[352,[[353,[-1,-2]]]],-3],[[352,[[353,[-1,-2]]]]],19,[354,204,317],11],[[[352,[[365,[-1]]]],-2],[[352,[[365,[-1]]]]],19,11],[[[352,[356]],-1],[[352,[356]]],11],[[[352,[[357,[-1]]]],-2],[[352,[[357,[-1]]]]],19,11],[[[352,[[366,[-1,-2]]]],-3],[[352,[[366,[-1,-2]]]]],19,204,11],[[[352,[367]],-1],[[352,[367]]],[11,71,181]],[[[352,[[366,[-1,-2]]]],-3],[[352,[[366,[-1,-2]]]]],19,204,11],[[[352,[368]],-1],[[352,[368]]],[11,71,181]],[[[352,[-1]],-2],[[352,[-1]]],78,[11,71,181]],[[[352,[-1]],-2],[[352,[-1]]],78,[11,71,181]],[[[352,[-1]],-2],[[352,[-1]]],78,[11,71,181]],[[[352,[[359,[-1]]]],-2],[[352,[[359,[-1]]]]],19,[11,71,181]],[[[352,[-1]],-2],[[352,[-1]]],78,[11,71,181]],[[[352,[-1]],-2],[[352,[-1]]],78,[11,71,181]],[[[352,[-1]],-2],[[352,[-1]]],78,[11,71,181]],[[[352,[-1]],-2],[[352,[-1]]],78,[11,71,181]],[[[352,[-1]],-2],[[352,[-1]]],78,[11,71,181]],[[[352,[368]],-1],[[352,[368]]],[11,71,181]],[[[352,[[366,[-1,-2]]]],-3],[[352,[[366,[-1,-2]]]]],19,204,11],[[[352,[-1]],-2],[[352,[-1]]],78,[11,71,181]],[[[352,[-1]],-2],[[352,[-1]]],78,[11,71,181]],[[[352,[-1]],-2],[[352,[-1]]],78,[11,71,181]],[[[352,[-1]],-2],[[352,[-1]]],78,[11,71,181]],[[[352,[-1]],-2],[[352,[-1]]],78,[11,71,181]],[[[352,[-1]],-2],[[352,[-1]]],78,[11,71,181]],[[[352,[-1]],-2],[[352,[-1]]],78,[11,71,181]],[[[352,[[369,[-1]]]],-2],[[352,[[369,[-1]]]]],19,[11,71,181]],[[[352,[370]],-1],[[352,[370]]],11],[[[352,[[371,[-1,-2,-3]]]],-4],[[352,[[371,[-1,-2,-3]]]]],19,19,[204,15],11],[[[352,[372]],-1],[[352,[372]]],11],[[[352,[373]],-1],[[352,[373]]],11],[[[352,[374]],-1],[[352,[374]]],11],[[[352,[[359,[-1]]]],-2],[[352,[[359,[-1]]]]],19,[11,71,181]],[[[352,[375]],-1],[[352,[375]]],11],[[[352,[376]],-1],[[352,[376]]],11],[[[352,[-1]]],40,[]],[[[352,[[359,[-1]]]],-3],[[352,[[359,[-1]]]]],19,15,[[208,[-2]]]],[[[352,[[357,[-1]]]],[262,[58]]],[[352,[[357,[-1]]]]],19],[[[352,[356]],[262,[58]]],[[352,[356]]]],[[[352,[-1]]],58,[]],[[[352,[361]],2],[[352,[361]]]],[[[352,[[377,[-1]]]],-2],[[352,[[377,[-1]]]]],19,[[208,[2]]]],[[[352,[[369,[-1]]]],2],[[352,[[369,[-1]]]]],19],[[[352,[[353,[-1,-2]]]],2],[[352,[[353,[-1,-2]]]]],19,[354,204,317]],[[[352,[[357,[-1]]]],58],[[352,[[357,[-1]]]]],19],[[[352,[-1]],-2],[[352,[-1]]],78,10],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[[[352,[[359,[-1]]]],-2],[[352,[[359,[-1]]]]],19,[11,71,181]],[[[352,[378]],-1],[[352,[378]]],19],[[[352,[379]],-1],[[352,[379]]],19],[-1,-2,[],[]],[[[352,[374]],-2],[[352,[374]]],[[8,[39]]],[[208,[-1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[357,[-1]],60,44],13,19],[[[359,[-1]],60,44],13,19],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[380,380],[381,381],[382,382],[383,383],[384,384],[385,385],[386,386],[387,387],[388,388],[389,389],[390,390],[391,391],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],0,0,0,0,[[36,58,-1,-2],[[352,[[365,[-1]]]]],19,11],[[36,2,2,-1,-2],[[352,[[369,[-1]]]]],19,10],[[36,-1,-2],[[352,[[357,[-1]]]]],19,10],[[36,-1,384,385],[[352,[368]]],11],[[],380],[[],382],[[],391],[[378,53,[69,[68]]],13],[[392,53,[69,[68]]],13],[[379,53,[69,[68]]],13],[[[359,[-1]],53,[69,[68]]],13,19],[393,[[9,[80]]]],[375,[[9,[80]]]],[394,[[9,[80]]]],[395,[[9,[80]]]],[396,[[9,[80]]]],[397,[[9,[80]]]],[[[365,[-1]]],[[9,[80]]],19],[378,[[9,[80]]]],[392,[[9,[80]]]],[379,[[9,[80]]]],[355,[[9,[80]]]],[398,[[9,[80]]]],[[[366,[-1,-2]]],[[9,[80]]],19,[]],[[[358,[-1]]],[[9,[80]]],19],[399,[[9,[80]]]],[372,[[9,[80]]]],[[[360,[-1]]],[[9,[80]]],19],[351,[[9,[80]]]],[373,[[9,[80]]]],[[[377,[-1]]],[[9,[80]]],19],[400,[[9,[80]]]],[401,[[9,[80]]]],[402,[[9,[80]]]],[376,[[9,[80]]]],[[[363,[-1,-2]]],[[9,[80]]],19,[354,204]],[403,[[9,[80]]]],[367,[[9,[80]]]],[[[371,[-1,-2,-3]]],[[9,[80]]],19,19,[204,15]],[370,[[9,[80]]]],[404,[[9,[80]]]],[405,[[9,[80]]]],[406,[[9,[80]]]],[381,[[9,[80]]]],[364,[[9,[80]]]],[[[369,[-1]]],[[9,[80]]],19],[[[357,[-1]]],[[9,[80]]],19],[356,[[9,[80]]]],[368,[[9,[80]]]],[374,[[9,[80]]]],[[[359,[-1]]],[[9,[80]]],19],[362,[[9,[80]]]],[[[353,[-1,-2]]],[[9,[80]]],19,[354,204,317]],[361,[[9,[80]]]],[[380,380],2],[[381,381],2],[[384,384],2],[[385,385],2],[[386,386],2],[[387,387],2],[[388,388],2],[[389,389],2],[[390,390],2],[[391,391],2],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[393,47,73],13],[[375,47,73],13],[[394,47,73],13],[[[365,[-1]],47,73],13,19],[[355,47,73],13],[[[366,[-1,-2]],47,73],13,19,[]],[[399,47,73],13],[[372,47,73],13],[[[360,[-1]],47,73],13,19],[[373,47,73],13],[[[377,[-1]],47,73],13,19],[[376,47,73],13],[[[363,[-1,-2]],47,73],13,19,[354,204]],[[[371,[-1,-2,-3]],47,73],13,19,19,[204,15]],[[370,47,73],13],[[404,47,73],13],[[405,47,73],13],[[406,47,73],13],[[381,47,73],13],[[382,47,73],13],[[364,47,73],13],[[383,47,73],13],[[[369,[-1]],47,73],13,19],[[[357,[-1]],47,73],13,19],[[356,47,73],13],[[368,47,73],13],[[374,47,73],13],[[[359,[-1]],47,73],13,19],[[362,47,73],13],[[[353,[-1,-2]],47,73],13,19,[354,204,317]],[[361,47,73],13],[[380,32],[[16,[13,33]]]],[[381,32],[[16,[13,33]]]],[[382,32],[[16,[13,33]]]],[[407,32],[[16,[13,33]]]],[[384,32],[[16,[13,33]]]],[[385,32],[[16,[13,33]]]],[[386,32],[[16,[13,33]]]],[[387,32],[[16,[13,33]]]],[[388,32],[[16,[13,33]]]],[[389,32],[[16,[13,33]]]],[[390,32],[[16,[13,33]]]],[[391,32],[[16,[13,33]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[36,-1],[[352,[351]]],19],0,0,0,[[36,-1,-2],[[352,[375]]],19,19],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[36,-1,-2],13,19,11],[[36,-1,-2],[[352,[393]]],11,10],[[36,-1],[[352,[375]]],19],[[36,-1,2,-2],[[352,[394]]],19,11],[[36,-1,-2],[[352,[395]]],11,11],[36,[[352,[396]]]],[[36,-2],[[352,[397]]],15,[[208,[-1]]]],[[36,-1,-2,2],[[352,[[365,[-2]]]]],[[208,[58]]],19],[[36,2,65,65,58,58,380],[[352,[378]]]],[[36,65,65,65,58,380],[[352,[392]]]],[[36,65,65,65,58,380],[[352,[379]]]],[[36,-2],[[352,[355]]],221,[[208,[-1]],27]],[[36,-2],[[352,[398]]],221,[[208,[-1]],27]],[[36,-1,-2],[[352,[[366,[-1,-3]]]]],19,11,27],[[36,-1,2,-2],[[352,[[358,[-1]]]]],19,11],[36,[[352,[399]]]],[[36,-1,-2,2],[[352,[372]]],19,19],[[36,-1,2,-2],[[352,[[360,[-1]]]]],19,11],[[36,-1,391],[[352,[351]]],19],[[36,-1],[[352,[373]]],19],[[36,-1,-2,391,-3],[[352,[[377,[-1]]]]],19,19,11],[[36,-1],[[352,[400]]],10],[[36,-1],[[352,[401]]],10],[[36,-1],[[352,[402]]],10],[[36,-1],[[352,[376]]],19],[[-1,-2],408,11,11],[[36,-1],[[352,[[363,[-1,-2]]]]],19,[354,204]],[[36,-1],[[352,[403]]],10],[[36,-2],[[352,[367]]],221,[[208,[-1]],27]],[[36,-1,-2],[[352,[[371,[-1,-2,-3]]]]],[317,19],[317,19],[204,15]],[[36,-1],[[352,[370]]],19],[[36,-1],[[352,[404]]],11],[[36,-1,-2],[[352,[405]]],11,11],[[36,-1,-2],[[352,[406]]],[11,71,181],11],[[36,75,[9,[75]]],[[352,[381]]]],[[36,4,-1],[[352,[364]]],19],[[36,58,58,2,2,-1],[[352,[[369,[[22,[409]]]]]]],10],[[36,-1],[[352,[[357,[-1]]]]],19],[[36,-1,-3],[[352,[356]]],19,15,[[208,[-2]]]],[[36,-1,384,385],[[352,[368]]],19],[[36,-1,-2],[[352,[374]]],19,[27,11]],[[36,-1],[[352,[[359,[-1]]]]],19],[[36,-1],[[352,[362]]],19],[[36,-1],[[352,[[353,[-1,-2]]]]],19,[354,204,317]],[[36,-1,58,-2],[[352,[361]]],19,11],[[36,-1,2],[[352,[[359,[-1]]]]],19],0,[[],-1,[]],[[],-1,[]],[[],-1,[]],0,0,[[382,382],2],[[383,383],2],[[384,384],2],[[389,389],2],[[391,391],2],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[[36,-1],[[352,[351]]],19],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[410,[-1,-2,-3]]],[[410,[-1,-2,-3]]],[],[],[]],[[[411,[-1,-2,-3]]],[[411,[-1,-2,-3]]],[],[],[]],[[[412,[-1,-2,-3]]],[[412,[-1,-2,-3]]],[],[],[]],[[[413,[-1,-2,-3]]],[[413,[-1,-2,-3]]],[],[],[]],[[[414,[-1,-2,-3]]],[[414,[-1,-2,-3]]],[],[],[]],[[[415,[-1,-2,-3]]],[[415,[-1,-2,-3]]],[],[],[]],[[[416,[-1,-2,-3]]],[[416,[-1,-2,-3]]],[],[],[]],[[[417,[-1,-2,-3]]],[[417,[-1,-2,-3]]],[],[],[]],[[[418,[-1,-2,-3]]],[[418,[-1,-2,-3]]],[],[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[[410,[-1,-2,-3]],[410,[-1,-2,-3]]],2,158,158,158],[[[411,[-1,-2,-3]],[411,[-1,-2,-3]]],2,158,158,158],[[[412,[-1,-2,-3]],[412,[-1,-2,-3]]],2,158,158,158],[[[413,[-1,-2,-3]],[413,[-1,-2,-3]]],2,158,158,158],[[[414,[-1,-2,-3]],[414,[-1,-2,-3]]],2,158,158,158],[[[415,[-1,-2,-3]],[415,[-1,-2,-3]]],2,158,158,158],[[[416,[-1,-2,-3]],[416,[-1,-2,-3]]],2,158,158,158],[[[417,[-1,-2,-3]],[417,[-1,-2,-3]]],2,158,158,158],[[[418,[-1,-2,-3]],[418,[-1,-2,-3]]],2,158,158,158],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],0,[[[410,[-1,-2,-3]],32],[[16,[13,33]]],[],[],[]],[[[411,[-1,-2,-3]],32],[[16,[13,33]]],[],[],[]],[[[412,[-1,-2,-3]],32],[[16,[13,33]]],[],[],[]],[[[413,[-1,-2,-3]],32],[[16,[13,33]]],[],[],[]],[[[414,[-1,-2,-3]],32],[[16,[13,33]]],[],[],[]],[[[415,[-1,-2,-3]],32],[[16,[13,33]]],[],[],[]],[[[416,[-1,-2,-3]],32],[[16,[13,33]]],[],[],[]],[[[417,[-1,-2,-3]],32],[[16,[13,33]]],[],[],[]],[[[418,[-1,-2,-3]],32],[[16,[13,33]]],[],[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[410,[-1,-2,-3]],-4],13,[],[],[],37],[[[411,[-1,-2,-3]],-4],13,[],[],[],37],[[[412,[-1,-2,-3]],-4],13,[],[],[],37],[[[413,[-1,-2,-3]],-4],13,[],[],[],37],[[[414,[-1,-2,-3]],-4],13,[],[],[],37],[[[415,[-1,-2,-3]],-4],13,[],[],[],37],[[[416,[-1,-2,-3]],-4],13,[],[],[],37],[[[417,[-1,-2,-3]],-4],13,[],[],[],37],[[[418,[-1,-2,-3]],-4],13,[],[],[],37],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],[[410,[-1,-2,-3]]],[],[],[]],[[],[[411,[-1,-2,-3]]],[],[],[]],[[],[[412,[-1,-2,-3]]],[],[],[]],[[],[[413,[-1,-2,-3]]],[],[],[]],[[],[[414,[-1,-2,-3]]],[],[],[]],[[],[[415,[-1,-2,-3]]],[],[],[]],[[],[[416,[-1,-2,-3]]],[],[],[]],[[],[[417,[-1,-2,-3]]],[],[],[]],[[],[[418,[-1,-2,-3]]],[],[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[[[410,[-1,-2,-3]],[371,[-1,-2,-3]],-4],-5,19,19,[204,15],10,[]],[[[411,[-1,-2,-3]],[371,[-1,-2,-3]],-4],-5,19,19,[204,15],10,[]],[[[412,[-1,-2,-3]],[371,[-1,-2,-3]],-4],-5,19,19,[204,15],10,[]],[[[413,[-1,-2,-3]],[371,[-1,-2,-3]],-4],-5,19,19,[204,15],10,[]],[[[414,[-1,-2,-3]],[371,[-1,-2,-3]],-4],-5,19,19,[204,15],10,[]],[[[415,[-1,-2,-3]],[371,[-1,-2,-3]],-4],-5,19,19,[204,15],10,[]],[[[416,[-1,-2,-3]],[371,[-1,-2,-3]],-4],-5,19,19,[204,15],10,[]],[[[417,[-1,-2,-3]],[371,[-1,-2,-3]],-4],-5,19,19,[204,15],10,[]],[[[418,[-1,-2,-3]],-4],-5,19,19,[204,15],10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,70,[]],[-1,70,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[419,419],[420,420],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[419,419],2],[[420,420],2],[[-1,70],2,[]],[[-1,70],2,[]],[[419,32],[[16,[13,33]]]],[[420,32],[[16,[13,33]]]],[-1,-1,[]],[-1,-1,[]],[[-1,36],[],[]],[[-1,36],9,[]],[[419,-1],13,37],[[420,-1],13,37],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],419],[[],420],0,[[-1,36,40,-2],13,[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[[419,404,-1],-2,10,[]],[[420,-1],-2,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,70,[]],[-1,-2,[],[]],[-1,-2,[],[]],[421,421],[[-1,-2],13,[],[]],[[421,421],2],[[-1,70],2,[]],[[421,32],[[16,[13,33]]]],[-1,-1,[]],[[421,-1],13,37],[-1,-2,[],[]],[[],421],0,[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[[421,-1],-2,10,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[58,58],[[422,58],58],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[422,58],58],[[423,58],58],[[424,106],106],[[425,58],58],[426,426],[427,427],[425,425],[422,422],[428,428],[423,423],[424,424],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[58,58],[[422,58],58],[[],426],[[],428],[[426,58],75],[[426,426],2],[[427,427],2],[[428,428],2],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[426,32],[[16,[13,33]]]],[[427,32],[[16,[13,33]]]],[[425,32],[[16,[13,33]]]],[[422,32],[[16,[13,33]]]],[[428,32],[[16,[13,33]]]],[[423,32],[[16,[13,33]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[423,58],58],[[424,106],58],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[425,58],[424,106],[422,58],[423,58],[425,58],[424,106],[422,58],[423,58],[[58,58,427,426,[9,[75]]],425],[[58,58,427,426,2],422],[[58,58,427,428,2],423],[[106,106,[9,[11]]],424],[[422,58],58],[[422,58],58],[[-1,58],75,[]],[[425,58],75],[[422,58],75],[[423,58],75],[[424,58],75],[[423,58],58],[[424,58],106],[[427,58,58,58],58],[[425,58],58],[[],-1,[]],[[],-1,[]],[[-1,58],58,[]],[[424,58],58],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[425,427],[422,427],[423,427],[[427,58,58,58],58],[[425,58],58],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,70,[]],[-1,70,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[429,429],[430,430],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[429,429],2],[[430,430],2],[[-1,70],2,[]],[[-1,70],2,[]],[[429,32],[[16,[13,33]]]],[[430,32],[[16,[13,33]]]],[-1,-1,[]],[-1,-1,[]],[[-1,36],[],[]],[[-1,36],[],[]],[[-1,36],9,[]],[[-1,36],9,[]],[[429,-1],13,37],[[430,-1],13,37],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],429],[[],430],0,[[-1,36,40,-2],13,[],11],[[-1,36,40,-2],13,[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[[429,382,-1],-2,10,[]],[[430,-1],-2,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[431,431],[432,432],[433,433],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[431,431],2],[[432,432],2],[[433,433],2],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[431,32],[[16,[13,33]]]],[[432,32],[[16,[13,33]]]],[[433,32],[[16,[13,33]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,36],[],[]],[[-1,36],[],[]],[[-1,36],9,[]],[[-1,36],9,[]],[[431,-1],13,37],[[432,-1],13,37],[[433,-1],13,37],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],431],[[],432],[[],433],0,0,[[-1,36,40,-2],13,[],11],[[-1,36,40,-2],13,[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[[431,405,-1],-2,10,[]],[[432,405,-1],-2,10,[]],[[433,-1],-2,10,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,70,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[434,434],[435,435],[436,436],[437,437],[438,438],[439,439],[440,440],[441,441],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[434,434],2],[[435,435],2],[[436,436],2],[[437,437],2],[[438,438],2],[[439,439],2],[[440,440],2],[[441,441],2],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[-1,70],2,[]],[[434,32],[[16,[13,33]]]],[[435,32],[[16,[13,33]]]],[[436,32],[[16,[13,33]]]],[[437,32],[[16,[13,33]]]],[[438,32],[[16,[13,33]]]],[[439,32],[[16,[13,33]]]],[[440,32],[[16,[13,33]]]],[[441,32],[[16,[13,33]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,36],[],[]],[[-1,36],[],[]],[[-1,36],[],[]],[[-1,36],[],[]],[[-1,36],[],[]],[[-1,36],[],[]],[[-1,36],9,[]],[[-1,36],9,[]],[[-1,36],9,[]],[[-1,36],9,[]],[[-1,36],9,[]],[[-1,36],9,[]],[[434,-1],13,37],[[435,-1],13,37],[[436,-1],13,37],[[437,-1],13,37],[[438,-1],13,37],[[439,-1],13,37],[[440,-1],13,37],[[441,-1],13,37],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],434],[[],435],[[],436],[[],437],[[],438],[[],439],[[],440],[[],441],0,0,0,0,0,0,[[-1,36,40,-2],13,[],11],[[-1,36,40,-2],13,[],11],[[-1,36,40,-2],13,[],11],[[-1,36,40,-2],13,[],11],[[-1,36,40,-2],13,[],11],[[-1,36,40,-2],13,[],11],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[[434,361,-1],-2,10,[]],[[435,361,-1],-2,10,[]],[[436,361,-1],-2,10,[]],[[437,361,-1],-2,10,[]],[[438,361,-1],-2,10,[]],[[439,361,-1],-2,10,[]],[[440,361,-1],-2,10,[]],[[441,-1],-2,10,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,2],-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[93,93],[442,442],[[-1,-2],13,[],[]],[[-1,-2],13,[],[]],[[-1,2],-1,[]],[[93,32],[[16,[13,33]]]],[[442,32],[[16,[13,33]]]],[250,93],[40,93],[-1,-1,[]],[-1,-1,[]],[[-1,4,4,[6,[5]]],-1,[]],[[-1,-2],-1,[],[[8,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[9,[-2]]],-1,[],[[8,[7]]]],[[-1,2],-1,[]],[[-1,[9,[-2]]],-1,[],[[8,[7]]]],[[-1,2],-1,[]],[[-1,-2],-1,[],[[8,[12]]]],[[-1,2],-1,[]],[[-1,-2],-1,[],15],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,2],-1,[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[[-1,2],-1,[]],[[-1,2],-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0],"c":[1445,1503,1657,1689,1860,5672,5676,5687,5691,5875,5881,5907,6519,6520,6521,6522,6554,6555,6556,6557,6624,6625,6626,6627,6661,6662,6663,6664,7200,7201,7205,7220,7221],"p":[[3,"Application",0],[15,"bool"],[3,"ContextProxy",284],[15,"u32"],[15,"u8"],[3,"Vec",8982],[3,"WindowSize",8983],[8,"Into",8984],[4,"Option",8985],[8,"FnOnce",8986],[8,"Fn",8986],[3,"Position",8983],[15,"tuple"],[3,"TextConfig",8987],[8,"ToString",8988],[4,"Result",8989],[3,"TypeId",8990],[3,"AndLens",54],[8,"Lens",54],[3,"Map",54],[3,"Then",54],[3,"Wrapper",54],[3,"OrLens",54],[3,"MapRef",54],[3,"Index",54],[3,"StaticLens",54],[8,"Clone",8991],[3,"UnwrapLens",54],[3,"IntoLens",54],[3,"RatioLens",54],[8,"Default",8992],[3,"Formatter",8993],[3,"Error",8993],[8,"Debug",8993],[8,"DataContext",284],[3,"Context",284],[8,"Hasher",8994],[8,"Hash",8994],[15,"usize"],[3,"Entity",8995],[8,"TryInto",8984],[3,"AnimationBuilder",8996],[3,"Animation",8997],[3,"AccessNode",284],[15,"slice"],[8,"AsRef",8984],[3,"EventContext",284],[3,"Error",8998],[8,"IntoCssStr",4683],[3,"Duration",8999],[3,"Timer",842],[3,"LanguageIdentifier",9000],[3,"DrawContext",284],[4,"Filter",3221],[4,"Color",3221],[4,"ImageOrGradient",3221],[4,"BackgroundSize",3221],[15,"f32"],[4,"BorderCornerShape",3221],[3,"AccessContext",284],[3,"BoundingBox",2731],[3,"BoxShadow",3221],[3,"Path",4701],[3,"TimedEventHandle",842],[4,"Units",2731],[4,"FamilyOwned",9001],[4,"Display",3221],[3,"OpenGl",6667],[3,"Canvas",4701],[8,"Any",8990],[8,"Send",9002],[4,"ProxyEmitError",284],[3,"Event",842],[3,"Environment",626],[3,"String",8988],[8,"Error",9003],[3,"Box",9004],[8,"View",7256],[8,"AnimId",8997],[15,"str"],[4,"DynamicImage",1261],[4,"ImageRetentionPolicy",3203],[3,"ResourceContext",284],[8,"EventProxy",284],[3,"Modifiers",2007],[3,"MouseState",2007],[15,"f64"],[3,"NodeId",9005],[4,"RawWindowHandle",9006],[3,"Instant",9007],[4,"ClipPath",3221],[4,"DefaultActionVerb",9005],[4,"DropData",8890],[4,"Live",9005],[4,"Overflow",3221],[4,"PointerEvents",3221],[4,"Role",9005],[4,"Angle",3221],[3,"Scale",3221],[4,"TextDirection",9005],[3,"TextSelection",9005],[4,"ThemeMode",626],[4,"Transform",3221],[3,"Translate",3221],[4,"Visibility",3221],[15,"i32"],[4,"TextAlign",3221],[3,"Transform2D",4701],[4,"AppTheme",626],[3,"Theme",626],[3,"locale",706],[3,"theme",706],[3,"caret_timer",706],[3,"root",706],[3,"app_theme",785],[3,"sys_theme",785],[3,"root",785],[4,"Propagation",842],[4,"TimerAction",842],[3,"EventMeta",842],[8,"FnMut",8986],[3,"Rgb",1261],[8,"Primitive",1261],[8,"Enlargeable",9008],[3,"Luma",1261],[3,"Rgba",1261],[3,"LumaA",1261],[3,"ImageBuffer",1261],[3,"FlatSamples",1261],[8,"Pixel",1261],[8,"Deref",9009],[8,"AsMut",8984],[15,"u16"],[3,"View",6148],[4,"Error",6148],[3,"ViewMut",6148],[4,"ColorType",1261],[8,"DerefMut",9009],[3,"Frame",1261],[4,"ImageFormat",1261],[3,"SubImage",1261],[4,"ExtendedColorType",1261],[3,"Delay",1261],[4,"ImageOutputFormat",1261],[3,"Progress",1261],[3,"Pixels",1261],[8,"Sized",9002],[3,"Frames",1261],[4,"ImageError",1261],[8,"FromColor",9010],[8,"GenericImageView",1261],[3,"Rect",6465],[15,"u64"],[3,"EnumeratePixels",5736],[3,"EnumeratePixelsMut",5736],[3,"EnumerateRows",5736],[3,"EnumerateRowsMut",5736],[8,"PartialEq",9011],[15,"array"],[8,"ImageDecoder",1261],[3,"OsStr",9012],[3,"Path",9013],[8,"Index",9014],[8,"IndexMut",9014],[4,"NormalForm",6148],[8,"BufRead",9015],[8,"Seek",9015],[8,"Iterator",9016],[4,"Ordering",9011],[3,"Pixels",5736],[3,"PixelsMut",5736],[4,"FilterType",6292],[3,"Rows",5736],[3,"RowsMut",5736],[3,"SampleLayout",6148],[8,"PixelWithColorType",1261],[3,"Limits",6396],[8,"Write",9015],[8,"ImageEncoder",1261],[3,"KeymapEntry",2007],[8,"Sync",9002],[4,"Code",2007],[4,"MouseButton",2007],[3,"MouseButtonData",2007],[8,"GenerationalId",9017],[4,"Key",2007],[3,"Keymap",2007],[3,"KeyChord",9018],[8,"IntoIterator",9019],[3,"GeoChanged",2731],[4,"LayoutType",2731],[4,"PositionType",2731],[3,"LengthPixels",9020],[3,"AutoKeyword",9021],[3,"Stretch",9022],[3,"Percentage",9023],[3,"Iter",9024],[3,"IterNames",9024],[3,"Parser",9025],[4,"CustomParseError",9026],[3,"ParseError",9025],[3,"Localized",2931],[4,"FluentValue",9027],[8,"Data",54],[3,"LinearGradientBuilder",2960],[4,"LengthOrPercentage",3221],[3,"ColorStop",9028],[8,"Res",54],[4,"Gradient",3221],[4,"BackgroundImage",3221],[3,"BoxShadowBuilder",2960],[4,"Length",3221],[3,"Rect",9029],[3,"BorderRadius",9030],[4,"CursorIcon",3221],[3,"TooltipModel",2960],[3,"FontSize",3221],[4,"FontStretch",3221],[4,"FontStyle",3221],[3,"FontWeight",3221],[8,"ToStringLocalized",2931],[3,"Opacity",3221],[3,"Position",3221],[4,"LineDirection",3221],[3,"tooltip_visible",3162],[3,"root",3162],[3,"RGBA",3221],[3,"Style",3221],[3,"SystemFlags",3221],[4,"GenericFontFamily",3221],[4,"FontFamily",3221],[4,"FontWeightKeyword",3221],[3,"LinearGradient",3221],[4,"HorizontalPositionKeyword",3221],[4,"LengthValue",3221],[3,"Matrix",3221],[3,"Transition",3221],[4,"VerticalPositionKeyword",3221],[4,"CssRule",3221],[4,"Calc",9031],[4,"Color",9032],[3,"RGBA",9032],[4,"FontSizeKeyword",9033],[4,"PositionComponent",9034],[3,"BorderWidthValue",9035],[4,"PercentageOrNumber",9036],[4,"EasingFunction",9037],[8,"Parse",9038],[4,"CSS",4683],[3,"PathBuf",9013],[3,"FontId",4701],[4,"ErrorKind",4701],[8,"Renderer",4701],[3,"TextContext",4701],[3,"Atlas",4701],[3,"ImageFlags",4701],[3,"ImageInfo",4701],[3,"Paint",4701],[4,"Solidity",4701],[3,"FontMetrics",4701],[3,"Color",4701],[3,"Range",9039],[4,"Baseline",4701],[4,"Align",4701],[4,"RenderMode",4701],[3,"TextMetrics",4701],[3,"DrawCommand",4701],[3,"Quad",4701],[3,"ImageId",4701],[4,"PixelFormat",4701],[4,"ImageSource",4701],[4,"ImageFilter",4701],[4,"RenderTarget",4701],[4,"FillRule",4701],[4,"BlendFactor",4701],[4,"CompositeOperation",4701],[3,"CompositeOperationState",4701],[4,"LineCap",4701],[4,"LineJoin",4701],[3,"Size",9040],[3,"GlyphDrawCommands",4701],[3,"NulError",9041],[3,"Gray",7039],[3,"Img",6486],[3,"RGBA",6828],[3,"RGB",6828],[3,"Bounds",9042],[3,"ImageStore",9040],[3,"Vertex",6667],[3,"Command",6667],[3,"NonZeroUsize",9043],[3,"PathIter",9044],[3,"PngDecoder",5867],[3,"ApngDecoder",5867],[8,"Read",9015],[4,"CompressionType",5867],[4,"FilterType",5867],[3,"PngEncoder",5867],[3,"PngReader",5867],[4,"UnsupportedErrorKind",5967],[4,"ParameterErrorKind",5967],[4,"LimitErrorKind",5967],[4,"ImageFormatHint",5967],[3,"UnsupportedError",5967],[3,"EncodingError",5967],[3,"ParameterError",5967],[3,"DecodingError",5967],[3,"LimitError",5967],[3,"BiLevel",6292],[8,"ColorMap",6292],[8,"GenericImage",1261],[15,"i64"],[3,"LimitSupport",6396],[3,"Reader",6396],[3,"File",9045],[3,"BufReader",9046],[8,"Copy",9002],[3,"RowsIter",6486],[3,"RowsIterMut",6486],[3,"PixelsRefIter",6486],[3,"PixelsIterMut",6486],[4,"Cow",9047],[3,"PixelsIter",6486],[3,"Chunks",9048],[3,"ChunksMut",9048],[8,"ToOwned",9047],[3,"Void",6667],[3,"Drawable",6667],[4,"ShaderType",6667],[4,"CommandType",6667],[3,"VoidImage",9049],[8,"Add",9050],[3,"BGR",7039],[3,"BGRA",7039],[3,"GrayAlpha",7039],[8,"Ord",9011],[8,"Div",9050],[15,"char"],[8,"FromIterator",9019],[8,"UpperHex",8993],[8,"Display",8993],[8,"LowerHex",8993],[15,"i16"],[3,"Iter",9048],[3,"Cloned",9051],[8,"From",8984],[8,"Mul",9050],[8,"PartialOrd",9011],[8,"Sub",9050],[15,"never"],[3,"ProgressBar",7346],[3,"Handle",7256],[3,"AnalogTimepicker",7346],[8,"Timelike",9052],[3,"Label",7346],[3,"NamedSlider",7346],[3,"Slider",7346],[3,"MenuPopup",7346],[3,"Textbox",7346],[3,"Popup",7346],[3,"VirtualList",7346],[3,"Timepicker",7346],[3,"DigitalTimepicker",7346],[3,"Rating",7346],[3,"Knob",7346],[3,"List",7346],[3,"Chip",7346],[3,"Spinbox",7346],[3,"ScrollView",7346],[3,"Datepicker",7346],[3,"ComboBox",7346],[3,"PickList",7346],[3,"RadioButton",7346],[3,"TabView",7346],[3,"Checkbox",7346],[3,"Switch",7346],[3,"Scrollbar",7346],[3,"ArcTrack",7346],[3,"TickKnob",7346],[4,"KnobMode",7346],[3,"Notification",7346],[3,"PopupData",7346],[3,"ScrollData",7346],[4,"SpinboxKind",7346],[4,"SpinboxIcons",7346],[4,"AMOrPM",7346],[3,"DayTime",7346],[4,"DigitalTimepickerEvent",7346],[4,"AnalogTimepickerPage",7346],[4,"AnalogTimepickerEvent",7346],[4,"Orientation",7346],[3,"Ticks",7346],[3,"Button",7346],[3,"ComboPopup",7346],[3,"Dropdown",7346],[3,"Element",7346],[3,"Image",7346],[3,"Icon",7346],[3,"MenuDivider",7346],[3,"VStack",7346],[3,"HStack",7346],[3,"ZStack",7346],[3,"Tooltip",7346],[3,"MenuBar",7346],[3,"Submenu",7346],[3,"MenuButton",7346],[4,"PopupEvent",7346],[3,"TabPair",7346],[3,"root",9053],[3,"filter_text",8224],[3,"placeholder",8224],[3,"on_select",8224],[3,"list_lens",8224],[3,"selected",8224],[3,"is_open",8224],[3,"hovered",8224],[3,"p",8224],[3,"root",8224],[3,"is_open",8395],[3,"root",8395],[3,"root",8436],[3,"DecibelMap",8455],[3,"FrequencyMap",8455],[3,"IntMap",8455],[3,"GenericMap",8455],[4,"DisplayDecimals",8455],[4,"ValueScaling",8455],[4,"FrequencyDisplayMode",8455],[3,"is_open",8613],[3,"root",8613],[3,"is_open",8657],[3,"open_on_hover",8657],[3,"root",8657],[3,"offset",8720],[3,"num_items",8720],[3,"item_height",8720],[3,"visible_items",8720],[3,"scrolly",8720],[3,"scroll_to_cursor",8720],[3,"on_change",8720],[3,"root",8720],[4,"WindowEvent",8890],[8,"Setter",54],[8,"LensExt",54],[3,"MapState",54],[3,"MapRefState",54],[8,"EmitContext",284],[8,"TreeProps",284],[4,"EnvironmentEvent",626],[13,"Press",991],[13,"PressDown",991],[6,"ImageResult",1261],[8,"EncodableLayout",1261],[8,"AnimationDecoder",1261],[8,"ImageDecoderRect",1261],[4,"KeymapEvent",2007],[8,"Model",2956],[4,"TooltipEvent",2960],[8,"WindowModifiers",8890],[8,"StyleModifiers",2960],[8,"LayoutModifiers",2960],[8,"TextModifiers",2960],[8,"AbilityModifiers",2960],[8,"AccessibilityModifiers",2960],[8,"ActionModifiers",2960],[6,"HorizontalPosition",3221],[6,"VerticalPosition",3221],[13,"Explicit",4679],[13,"Corner",4681],[13,"GaussianBlur",5551],[8,"ConvertBuffer",5736],[13,"Unsupported",6146],[8,"ImgExtMut",6486],[8,"ImgExt",6486],[6,"ImgVec",6486],[6,"ImgRef",6486],[6,"ImgRefMut",6486],[13,"ClearRect",6814],[13,"ConcaveFill",6814],[13,"RenderFilteredImage",6814],[13,"ConvexFill",6814],[13,"Stroke",6814],[13,"Triangles",6814],[13,"StencilStroke",6814],[6,"RGBA8",6828],[6,"RGBA16",6828],[8,"FromSlice",6828],[8,"ComponentBytes",6828],[8,"ComponentSlice",6828],[8,"AsPixels",6828],[6,"RGB8",6828],[6,"RGB16",6828],[8,"ComponentMap",6828],[8,"ColorComponentMap",6828],[8,"Zeroable",6828],[6,"BGRA8",7039],[6,"BGRA16",7039],[6,"BGR8",7039],[6,"BGR16",7039],[4,"TextEvent",7346],[4,"ScrollEvent",7346],[4,"ComboBoxEvent",7346],[4,"MenuEvent",7346],[4,"SpinboxEvent",7346],[4,"VirtualListEvent",7346],[3,"Binding",7346],[8,"NormalizedMap",8455],[13,"HzThenKHz",8611]],"b":[[399,"impl-Debug-for-ProxyEmitError"],[400,"impl-Display-for-ProxyEmitError"],[1565,"impl-GenericImageView-for-ImageBuffer%3CP,+Container%3E"],[1566,"impl-ImageBuffer%3CP,+Container%3E"],[1603,"impl-Display-for-ImageError"],[1604,"impl-Debug-for-ImageError"],[1621,"impl-From%3CError%3E-for-ImageError"],[1622,"impl-From%3CError%3E-for-ImageError"],[1638,"impl-From%3CImageBuffer%3CLumaA%3Cu16%3E,+Vec%3Cu16%3E%3E%3E-for-DynamicImage"],[1640,"impl-From%3CImageBuffer%3CRgb%3Cu16%3E,+Vec%3Cu16%3E%3E%3E-for-DynamicImage"],[1641,"impl-From%3CImageBuffer%3CLumaA%3Cf32%3E,+Vec%3Cf32%3E%3E%3E-for-DynamicImage"],[1642,"impl-From%3CImageBuffer%3CLuma%3Cu16%3E,+Vec%3Cu16%3E%3E%3E-for-DynamicImage"],[1643,"impl-From%3CImageBuffer%3CLuma%3Cf32%3E,+Vec%3Cf32%3E%3E%3E-for-DynamicImage"],[1644,"impl-From%3CImageBuffer%3CLumaA%3Cu8%3E,+Vec%3Cu8%3E%3E%3E-for-DynamicImage"],[1645,"impl-From%3CImageBuffer%3CRgb%3Cf32%3E,+Vec%3Cf32%3E%3E%3E-for-DynamicImage"],[1646,"impl-From%3CImageBuffer%3CRgb%3Cu8%3E,+Vec%3Cu8%3E%3E%3E-for-DynamicImage"],[1647,"impl-From%3CImageBuffer%3CRgba%3Cu8%3E,+Vec%3Cu8%3E%3E%3E-for-DynamicImage"],[1648,"impl-From%3CImageBuffer%3CRgba%3Cu16%3E,+Vec%3Cu16%3E%3E%3E-for-DynamicImage"],[1649,"impl-From%3CImageBuffer%3CLuma%3Cu8%3E,+Vec%3Cu8%3E%3E%3E-for-DynamicImage"],[1650,"impl-From%3CImageBuffer%3CRgba%3Cf32%3E,+Vec%3Cf32%3E%3E%3E-for-DynamicImage"],[1685,"impl-GenericImageView-for-ImageBuffer%3CP,+Container%3E"],[1686,"impl-ImageBuffer%3CP,+Container%3E"],[1690,"impl-GenericImage-for-ImageBuffer%3CP,+Container%3E"],[1691,"impl-ImageBuffer%3CP,+Container%3E"],[1719,"impl-Index%3C(u8,+u32,+u32)%3E-for-FlatSamples%3CBuffer%3E"],[1720,"impl-FlatSamples%3CBuffer%3E"],[1827,"impl-ImageBuffer%3CP,+Container%3E"],[1828,"impl-GenericImage-for-ImageBuffer%3CP,+Container%3E"],[2595,"impl-PartialEq%3CT%3E-for-KeymapEntry%3CT%3E"],[2596,"impl-PartialEq-for-KeymapEntry%3CT%3E"],[2607,"impl-UpperHex-for-Modifiers"],[2608,"impl-Octal-for-Modifiers"],[2609,"impl-Debug-for-Modifiers"],[2610,"impl-Binary-for-Modifiers"],[2611,"impl-LowerHex-for-Modifiers"],[2612,"impl-Display-for-Code"],[2613,"impl-Debug-for-Code"],[2617,"impl-Debug-for-Key"],[2618,"impl-Display-for-Key"],[2757,"impl-GeoChanged"],[2758,"impl-Flags-for-GeoChanged"],[2815,"impl-LowerHex-for-GeoChanged"],[2816,"impl-Octal-for-GeoChanged"],[2817,"impl-Debug-for-GeoChanged"],[2818,"impl-UpperHex-for-GeoChanged"],[2819,"impl-Binary-for-GeoChanged"],[2820,"impl-Display-for-BoundingBox"],[2821,"impl-Debug-for-BoundingBox"],[2825,"impl-From%3CLengthPixels%3E-for-Units"],[2826,"impl-From%3CAutoKeyword%3E-for-Units"],[2827,"impl-From%3CStretch%3E-for-Units"],[2828,"impl-From%3CPercentage%3E-for-Units"],[2832,"impl-Flags-for-GeoChanged"],[2833,"impl-GeoChanged"],[3640,"impl-SystemFlags"],[3641,"impl-Flags-for-SystemFlags"],[3885,"impl-PartialEq-for-Angle"],[3886,"impl-PartialEq%3Cf32%3E-for-Angle"],[3908,"impl-PartialEq%3Cf32%3E-for-Length"],[3909,"impl-PartialEq-for-Length"],[3910,"impl-PartialEq%3Cf32%3E-for-LengthValue"],[3911,"impl-PartialEq-for-LengthValue"],[3978,"impl-Display-for-CursorIcon"],[3979,"impl-Debug-for-CursorIcon"],[4009,"impl-Binary-for-SystemFlags"],[4010,"impl-UpperHex-for-SystemFlags"],[4011,"impl-LowerHex-for-SystemFlags"],[4012,"impl-Octal-for-SystemFlags"],[4021,"impl-From%3CBoxShadowBuilder%3E-for-BoxShadow"],[4023,"impl-From%3C%26str%3E-for-BoxShadow"],[4024,"impl-From%3CRect%3CLengthOrPercentage%3E%3E-for-ClipPath"],[4026,"impl-From%3CLength%3E-for-ClipPath"],[4027,"impl-From%3CLengthOrPercentage%3E-for-ClipPath"],[4029,"impl-From%3CRGBA%3E-for-Color"],[4030,"impl-From%3CColor%3E-for-Color"],[4031,"impl-From%3C%26str%3E-for-Color"],[4032,"impl-From%3CColor%3E-for-RGBA"],[4033,"impl-From%3CRGBA%3E-for-RGBA"],[4041,"impl-From%3Cf64%3E-for-FontSize"],[4042,"impl-From%3Cf32%3E-for-FontSize"],[4043,"impl-From%3CFontSizeKeyword%3E-for-FontSize"],[4044,"impl-From%3C%26str%3E-for-FontSize"],[4048,"impl-From%3Cu16%3E-for-FontWeight"],[4049,"impl-From%3C%26str%3E-for-FontWeight"],[4050,"impl-From%3Cu32%3E-for-FontWeight"],[4051,"impl-From%3CFontWeightKeyword%3E-for-FontWeight"],[4055,"impl-From%3C%26str%3E-for-Gradient"],[4056,"impl-From%3CLinearGradientBuilder%3E-for-Gradient"],[4057,"impl-From%3CLinearGradient%3E-for-Gradient"],[4059,"impl-From%3CVerticalPositionKeyword%3E-for-LineDirection"],[4060,"impl-From%3CAngle%3E-for-LineDirection"],[4061,"impl-From%3C%26str%3E-for-LineDirection"],[4062,"impl-From%3C(HorizontalPositionKeyword,+VerticalPositionKeyword)%3E-for-LineDirection"],[4063,"impl-From%3CHorizontalPositionKeyword%3E-for-LineDirection"],[4066,"impl-From%3CGradient%3E-for-BackgroundImage%3C\'i%3E"],[4068,"impl-From%3C%26str%3E-for-BackgroundImage%3C\'i%3E"],[4069,"impl-From%3CUnits%3E-for-Length"],[4071,"impl-From%3CCalc%3CLength%3E%3E-for-Length"],[4072,"impl-From%3Cf32%3E-for-Length"],[4074,"impl-From%3CLength%3E-for-LengthOrPercentage"],[4075,"impl-From%3CPositionComponent%3CHorizontalPositionKeyword%3E%3E-for-LengthOrPercentage"],[4076,"impl-From%3CBorderWidthValue%3E-for-LengthOrPercentage"],[4077,"impl-From%3CHorizontalPositionKeyword%3E-for-LengthOrPercentage"],[4078,"impl-From%3CPositionComponent%3CVerticalPositionKeyword%3E%3E-for-LengthOrPercentage"],[4080,"impl-From%3C%26str%3E-for-LengthOrPercentage"],[4081,"impl-From%3CVerticalPositionKeyword%3E-for-LengthOrPercentage"],[4082,"impl-From%3CLengthValue%3E-for-LengthOrPercentage"],[4083,"impl-From%3CPercentage%3E-for-LengthOrPercentage"],[4084,"impl-From%3CUnits%3E-for-LengthOrPercentage"],[4087,"impl-From%3Cf64%3E-for-Opacity"],[4089,"impl-From%3Cf32%3E-for-Opacity"],[4090,"impl-From%3C%26str%3E-for-Opacity"],[4091,"impl-From%3CPercentage%3E-for-Opacity"],[4097,"impl-From%3C(T1,+T2)%3E-for-Scale"],[4099,"impl-From%3C%26str%3E-for-Scale"],[4103,"impl-From%3CT%3E-for-Translate"],[4105,"impl-From%3C(T1,+T2)%3E-for-Translate"],[4114,"impl-SystemFlags"],[4115,"impl-Flags-for-SystemFlags"],[4355,"impl-PartialOrd-for-Angle"],[4356,"impl-PartialOrd%3Cf32%3E-for-Angle"],[4357,"impl-PartialOrd-for-Length"],[4358,"impl-PartialOrd%3Cf32%3E-for-Length"],[4359,"impl-PartialOrd%3Cf32%3E-for-LengthValue"],[4360,"impl-PartialOrd-for-LengthValue"],[4689,"impl-From%3C%26str%3E-for-CSS"],[4691,"impl-From%3CPathBuf%3E-for-CSS"],[4847,"impl-Flags-for-ImageFlags"],[4848,"impl-ImageFlags"],[4977,"impl-Path"],[4978,"impl-OutlineBuilder-for-Path"],[5069,"impl-Display-for-ErrorKind"],[5070,"impl-Debug-for-ErrorKind"],[5073,"impl-Octal-for-ImageFlags"],[5074,"impl-Debug-for-ImageFlags"],[5075,"impl-LowerHex-for-ImageFlags"],[5076,"impl-Binary-for-ImageFlags"],[5077,"impl-UpperHex-for-ImageFlags"],[5108,"impl-From%3CImageError%3E-for-ErrorKind"],[5109,"impl-From%3CNulError%3E-for-ErrorKind"],[5111,"impl-From%3CError%3E-for-ErrorKind"],[5115,"impl-From%3CImg%3C%26%5BGray%3Cu8%3E%5D%3E%3E-for-ImageSource%3C\'a%3E"],[5116,"impl-From%3CImg%3C%26%5BRGBA%3Cu8%3E%5D%3E%3E-for-ImageSource%3C\'a%3E"],[5118,"impl-From%3CImg%3C%26%5BRGB%3Cu8%3E%5D%3E%3E-for-ImageSource%3C\'a%3E"],[5122,"impl-From%3CColor%3E-for-Color"],[5123,"impl-From%3CRGBA%3E-for-Color"],[5136,"impl-ImageFlags"],[5137,"impl-Flags-for-ImageFlags"],[5223,"impl-OutlineBuilder-for-Path"],[5224,"impl-Path"],[5235,"impl-Path"],[5236,"impl-OutlineBuilder-for-Path"],[5278,"impl-OutlineBuilder-for-Path"],[5279,"impl-Path"],[6038,"impl-Display-for-UnsupportedError"],[6039,"impl-Debug-for-UnsupportedError"],[6041,"impl-Debug-for-EncodingError"],[6042,"impl-Display-for-EncodingError"],[6043,"impl-Display-for-ParameterError"],[6044,"impl-Debug-for-ParameterError"],[6046,"impl-Display-for-DecodingError"],[6047,"impl-Debug-for-DecodingError"],[6048,"impl-Debug-for-LimitError"],[6049,"impl-Display-for-LimitError"],[6051,"impl-Display-for-ImageFormatHint"],[6052,"impl-Debug-for-ImageFormatHint"],[6065,"impl-From%3C%26Path%3E-for-ImageFormatHint"],[6066,"impl-From%3CImageFormat%3E-for-ImageFormatHint"],[6209,"impl-Display-for-Error"],[6210,"impl-Debug-for-Error"],[6500,"impl-ImgExtMut%3CPixel%3E-for-Img%3CContainer%3E"],[6501,"impl-Img%3CVec%3CT%3E%3E"],[6503,"impl-ImgExt%3CPixel%3E-for-Img%3CContainer%3E"],[6504,"impl-Img%3C%26mut+%5BT%5D%3E"],[6505,"impl-Img%3CVec%3CT%3E%3E"],[6528,"impl-PartialEq%3CImg%3CVec%3CU%3E%3E%3E-for-Img%3C%26%5BT%5D%3E"],[6529,"impl-PartialEq%3CImg%3CVec%3CU%3E%3E%3E-for-Img%3CVec%3CT%3E%3E"],[6530,"impl-PartialEq%3CImg%3C%26%5BU%5D%3E%3E-for-Img%3C%26mut+%5BT%5D%3E"],[6531,"impl-PartialEq%3CImg%3C%26mut+%5BU%5D%3E%3E-for-Img%3C%26%5BT%5D%3E"],[6532,"impl-PartialEq%3CImg%3C%26mut+%5BU%5D%3E%3E-for-Img%3C%26mut+%5BT%5D%3E"],[6533,"impl-PartialEq%3CImg%3C%26%5BU%5D%3E%3E-for-Img%3CVec%3CT%3E%3E"],[6534,"impl-PartialEq%3CImg%3C%26%5BU%5D%3E%3E-for-Img%3C%26%5BT%5D%3E"],[6547,"impl-From%3CImg%3CCow%3C\'_,+%5BT%5D%3E%3E%3E-for-Img%3CVec%3CT%3E%3E"],[6548,"impl-From%3CImg%3CVec%3CT%3E%3E%3E-for-Img%3CCow%3C\'static,+%5BT%5D%3E%3E"],[6549,"impl-From%3CImg%3C%26%5BT%5D%3E%3E-for-Img%3CCow%3C\'a,+%5BT%5D%3E%3E"],[6550,"impl-Hash-for-Img%3C%26%5BT%5D%3E"],[6551,"impl-Hash-for-Img%3C%26mut+%5BT%5D%3E"],[6552,"impl-Hash-for-Img%3CVec%3CT%3E%3E"],[6560,"impl-Index%3Cusize%3E-for-Img%3C%26%5BPixel%5D%3E"],[6561,"impl-Index%3C(usize,+usize)%3E-for-Img%3C%26mut+%5BPixel%5D%3E"],[6562,"impl-Index%3Cusize%3E-for-Img%3C%26mut+%5BPixel%5D%3E"],[6563,"impl-Index%3Cusize%3E-for-Img%3CVec%3CPixel%3E%3E"],[6564,"impl-Index%3C(u32,+u32)%3E-for-Img%3C%26mut+%5BPixel%5D%3E"],[6565,"impl-Index%3C(usize,+usize)%3E-for-Img%3CVec%3CPixel%3E%3E"],[6566,"impl-Index%3C(usize,+usize)%3E-for-Img%3C%26%5BPixel%5D%3E"],[6567,"impl-Index%3C(u32,+u32)%3E-for-Img%3CVec%3CPixel%3E%3E"],[6568,"impl-Index%3C(u32,+u32)%3E-for-Img%3C%26%5BPixel%5D%3E"],[6569,"impl-IndexMut%3Cusize%3E-for-Img%3C%26mut+%5BPixel%5D%3E"],[6570,"impl-IndexMut%3C(usize,+usize)%3E-for-Img%3C%26mut+%5BPixel%5D%3E"],[6571,"impl-IndexMut%3C(usize,+usize)%3E-for-Img%3CVec%3CPixel%3E%3E"],[6572,"impl-IndexMut%3C(u32,+u32)%3E-for-Img%3C%26mut+%5BPixel%5D%3E"],[6573,"impl-IndexMut%3C(u32,+u32)%3E-for-Img%3CVec%3CPixel%3E%3E"],[6574,"impl-IndexMut%3Cusize%3E-for-Img%3CVec%3CPixel%3E%3E"],[6605,"impl-Img%3C%26mut+%5BT%5D%3E"],[6606,"impl-Img%3CVec%3CT%3E%3E"],[6607,"impl-Img%3C%26%5BT%5D%3E"],[6608,"impl-Img%3C%26mut+%5BT%5D%3E"],[6609,"impl-Img%3CVec%3CT%3E%3E"],[6611,"impl-Img%3CVec%3CT%3E%3E"],[6612,"impl-Img%3C%26%5BT%5D%3E"],[6613,"impl-Img%3C%26mut+%5BT%5D%3E"],[6614,"impl-Img%3CVec%3CT%3E%3E"],[6615,"impl-Img%3C%26mut+%5BT%5D%3E"],[6628,"impl-Img%3CVec%3CT%3E%3E"],[6629,"impl-Img%3C%26mut+%5BT%5D%3E"],[6630,"impl-Img%3C%26%5BT%5D%3E"],[6631,"impl-Img%3C%26mut+%5BT%5D%3E"],[6632,"impl-Img%3CVec%3CT%3E%3E"],[6845,"impl-Add-for-RGB%3CT%3E"],[6846,"impl-Add%3CT%3E-for-RGB%3CT%3E"],[6847,"impl-Add-for-RGBA%3CT,+A%3E"],[6848,"impl-Add%3CT%3E-for-RGBA%3CT%3E"],[6849,"impl-AddAssign%3CT%3E-for-RGB%3CT%3E"],[6850,"impl-AddAssign-for-RGB%3CT%3E"],[6851,"impl-AddAssign%3CT%3E-for-RGBA%3CT%3E"],[6852,"impl-AddAssign-for-RGBA%3CT,+A%3E"],[6915,"impl-UpperHex-for-RGB%3CT%3E"],[6916,"impl-Display-for-RGB%3CT%3E"],[6917,"impl-LowerHex-for-RGB%3CT%3E"],[6918,"impl-Debug-for-RGB%3CComponentType%3E"],[6919,"impl-Display-for-RGBA%3CT,+A%3E"],[6920,"impl-Debug-for-RGBA%3CComponentType,+AlphaComponentType%3E"],[6921,"impl-From%3CRGB%3Cu8%3E%3E-for-RGB%3Ci16%3E"],[6922,"impl-From%3CGray%3CT%3E%3E-for-RGB%3CT%3E"],[6923,"impl-From%3CRGB%3Cu16%3E%3E-for-RGB%3Ci32%3E"],[6924,"impl-From%3CRGB%3Ci16%3E%3E-for-RGB%3Cf32%3E"],[6926,"impl-From%3CRGB%3Cu8%3E%3E-for-RGB%3Cu32%3E"],[6927,"impl-From%3CRGB%3Cu8%3E%3E-for-RGB%3Cu16%3E"],[6928,"impl-From%3CRGB%3Cu16%3E%3E-for-RGB%3Cf64%3E"],[6929,"impl-From%3CRGB%3Ci32%3E%3E-for-RGB%3Cf64%3E"],[6930,"impl-From%3CBGR%3CT%3E%3E-for-RGB%3CT%3E"],[6931,"impl-From%3CRGB%3Cu8%3E%3E-for-RGB%3Cf64%3E"],[6932,"impl-From%3CRGB%3Cu16%3E%3E-for-RGB%3Cf32%3E"],[6933,"impl-From%3C(T,+T,+T)%3E-for-RGB%3CT%3E"],[6934,"impl-From%3CRGB%3Cu16%3E%3E-for-RGB%3Cu32%3E"],[6935,"impl-From%3CRGB%3Ci16%3E%3E-for-RGB%3Cf64%3E"],[6936,"impl-From%3CRGB%3Cu8%3E%3E-for-RGB%3Cf32%3E"],[6937,"impl-From%3CRGB%3Cf32%3E%3E-for-RGB%3Cf64%3E"],[6938,"impl-From%3CRGB%3Cu16%3E%3E-for-RGB%3Cu64%3E"],[6939,"impl-From%3C%5BT;+3%5D%3E-for-RGB%3CT%3E"],[6941,"impl-From%3CRGBA%3Cu16%3E%3E-for-RGBA%3Cu32%3E"],[6942,"impl-From%3CRGBA%3Ci16%3E%3E-for-RGBA%3Cf64%3E"],[6943,"impl-From%3CBGRA%3CT%3E%3E-for-RGBA%3CT%3E"],[6944,"impl-From%3CRGBA%3Cu8%3E%3E-for-RGBA%3Cf64%3E"],[6945,"impl-From%3CGray%3CT%3E%3E-for-RGBA%3CT,+u8%3E"],[6946,"impl-From%3CRGBA%3Ci16%3E%3E-for-RGBA%3Cf32%3E"],[6947,"impl-From%3CRGBA%3Cu16%3E%3E-for-RGBA%3Cu64%3E"],[6948,"impl-From%3CRGBA%3Cu16%3E%3E-for-RGBA%3Ci32%3E"],[6949,"impl-From%3CBGR%3CT%3E%3E-for-RGBA%3CT,+u8%3E"],[6950,"impl-From%3CBGR%3CT%3E%3E-for-RGBA%3CT,+u16%3E"],[6951,"impl-From%3CRGBA%3Cu16%3E%3E-for-RGBA%3Cf32%3E"],[6952,"impl-From%3CRGBA%3Cu8%3E%3E-for-RGBA%3Cu32%3E"],[6953,"impl-From%3CRGBA%3Ci32%3E%3E-for-RGBA%3Cf64%3E"],[6954,"impl-From%3CRGBA%3Cu8%3E%3E-for-RGBA%3Cu16%3E"],[6955,"impl-From%3CRGBA%3Cf32%3E%3E-for-RGBA%3Cf64%3E"],[6956,"impl-From%3CRGBA%3Cu8%3E%3E-for-RGBA%3Cf32%3E"],[6957,"impl-From%3CRGB%3CT%3E%3E-for-RGBA%3CT,+u16%3E"],[6958,"impl-From%3CGrayAlpha%3CT,+A%3E%3E-for-RGBA%3CT,+A%3E"],[6959,"impl-From%3C(T,+T,+T,+A)%3E-for-RGBA%3CT,+A%3E"],[6960,"impl-From%3C%5BT;+4%5D%3E-for-RGBA%3CT%3E"],[6961,"impl-From%3CRGBA%3Cu8%3E%3E-for-RGBA%3Ci16%3E"],[6962,"impl-From%3CRGBA%3Cu16%3E%3E-for-RGBA%3Cf64%3E"],[6963,"impl-From%3CRGB%3CT%3E%3E-for-RGBA%3CT,+u8%3E"],[6975,"impl-Into%3C%5BT;+3%5D%3E-for-RGB%3CT%3E"],[6976,"impl-Into%3C(T,+T,+T)%3E-for-RGB%3CT%3E"],[6977,"impl-Into%3C(T,+T,+T,+A)%3E-for-RGBA%3CT,+A%3E"],[6979,"impl-Into%3C%5BT;+4%5D%3E-for-RGBA%3CT%3E"],[6992,"impl-Mul%3CT%3E-for-RGB%3CT%3E"],[6993,"impl-Mul-for-RGB%3CT%3E"],[6995,"impl-MulAssign-for-RGB%3CT%3E"],[6996,"impl-MulAssign%3CT%3E-for-RGB%3CT%3E"],[7014,"impl-Sub%3CT%3E-for-RGB%3CT%3E"],[7015,"impl-Sub-for-RGB%3CT%3E"],[7016,"impl-Sub-for-RGBA%3CT,+A%3E"],[7017,"impl-Sub%3CT%3E-for-RGBA%3CT%3E"],[7018,"impl-SubAssign-for-RGB%3CT%3E"],[7019,"impl-SubAssign%3CT%3E-for-RGB%3CT%3E"],[7020,"impl-SubAssign%3CT%3E-for-RGBA%3CT%3E"],[7021,"impl-SubAssign-for-RGBA%3CT,+A%3E"],[7054,"impl-Add%3CT%3E-for-Gray%3CT%3E"],[7055,"impl-Add-for-Gray%3CT%3E"],[7056,"impl-Add-for-GrayAlpha%3CT,+A%3E"],[7057,"impl-Add%3CT%3E-for-GrayAlpha%3CT%3E"],[7058,"impl-AddAssign-for-Gray%3CT%3E"],[7059,"impl-AddAssign%3CT%3E-for-Gray%3CT%3E"],[7060,"impl-AddAssign%3CT%3E-for-GrayAlpha%3CT%3E"],[7061,"impl-AddAssign-for-GrayAlpha%3CT,+A%3E"],[7130,"impl-UpperHex-for-BGR%3CT%3E"],[7131,"impl-Display-for-BGR%3CT%3E"],[7132,"impl-Debug-for-BGR%3CComponentType%3E"],[7133,"impl-LowerHex-for-BGR%3CT%3E"],[7134,"impl-Display-for-BGRA%3CT,+A%3E"],[7135,"impl-Debug-for-BGRA%3CComponentType,+AlphaComponentType%3E"],[7139,"impl-From%3CRGB%3CT%3E%3E-for-BGR%3CT%3E"],[7140,"impl-From%3C(T,+T,+T)%3E-for-BGR%3CT%3E"],[7141,"impl-From%3C%5BT;+3%5D%3E-for-BGR%3CT%3E"],[7142,"impl-From%3CRGBA%3CT%3E%3E-for-BGRA%3CT%3E"],[7143,"impl-From%3CRGB%3CT%3E%3E-for-BGRA%3CT,+u16%3E"],[7145,"impl-From%3C(T,+T,+T,+A)%3E-for-BGRA%3CT,+A%3E"],[7146,"impl-From%3CBGR%3CT%3E%3E-for-BGRA%3CT,+u8%3E"],[7147,"impl-From%3CRGB%3CT%3E%3E-for-BGRA%3CT,+u8%3E"],[7148,"impl-From%3C%5BT;+4%5D%3E-for-BGRA%3CT%3E"],[7149,"impl-From%3CBGR%3CT%3E%3E-for-BGRA%3CT,+u16%3E"],[7153,"impl-From%3CGray%3CT%3E%3E-for-GrayAlpha%3CT,+u16%3E"],[7154,"impl-From%3CGray%3CT%3E%3E-for-GrayAlpha%3CT,+u8%3E"],[7168,"impl-Into%3C(T,+T,+T)%3E-for-BGR%3CT%3E"],[7169,"impl-Into%3C%5BT;+3%5D%3E-for-BGR%3CT%3E"],[7171,"impl-Into%3C%5BT;+4%5D%3E-for-BGRA%3CT%3E"],[7172,"impl-Into%3C(T,+T,+T,+A)%3E-for-BGRA%3CT,+A%3E"],[7194,"impl-Mul-for-Gray%3CT%3E"],[7195,"impl-Mul%3CT%3E-for-Gray%3CT%3E"],[7197,"impl-MulAssign%3CT%3E-for-Gray%3CT%3E"],[7198,"impl-MulAssign-for-Gray%3CT%3E"],[7222,"impl-Sub-for-Gray%3CT%3E"],[7223,"impl-Sub%3CT%3E-for-Gray%3CT%3E"],[7224,"impl-Sub%3CT%3E-for-GrayAlpha%3CT%3E"],[7225,"impl-Sub-for-GrayAlpha%3CT,+A%3E"],[7226,"impl-SubAssign-for-Gray%3CT%3E"],[7227,"impl-SubAssign%3CT%3E-for-Gray%3CT%3E"],[7228,"impl-SubAssign-for-GrayAlpha%3CT,+A%3E"],[7229,"impl-SubAssign%3CT%3E-for-GrayAlpha%3CT%3E"],[7276,"impl-Handle%3C\'_,+NamedSlider%3E"],[7277,"impl-Handle%3C\'_,+Slider%3CL%3E%3E"],[7283,"impl-Handle%3C\'a,+MenuPopup%3CL%3E%3E"],[7284,"impl-Handle%3C\'a,+Textbox%3CL%3E%3E"],[7285,"impl-Handle%3C\'a,+Popup%3CL%3E%3E"],[7288,"impl-Handle%3C\'a,+VirtualList%3E"],[7289,"impl-Handle%3C\'a,+Timepicker%3E"],[7290,"impl-Handle%3C\'a,+DigitalTimepicker%3CL,+T%3E%3E"],[7291,"impl-Handle%3C\'a,+Rating%3E"],[7292,"impl-Handle%3C\'v,+AnalogTimepicker%3CL,+T%3E%3E"],[7293,"impl-Handle%3C\'a,+Knob%3CL%3E%3E"],[7294,"impl-Handle%3C\'_,+NamedSlider%3E"],[7295,"impl-Handle%3C\'_,+Slider%3CL%3E%3E"],[7298,"impl-Handle%3C\'_,+List%3CL,+T%3E%3E"],[7299,"impl-Handle%3C\'a,+Spinbox%3E"],[7309,"impl-Handle%3C\'a,+Spinbox%3E"],[7310,"impl-Handle%3C\'_,+List%3CL,+T%3E%3E"],[7319,"impl-Handle%3C\'a,+Datepicker%3E"],[7320,"impl-Handle%3C\'v,+ComboBox%3CL1,+L2,+T%3E%3E"],[7321,"impl-Handle%3C\'v,+PickList%3E"],[7322,"impl-Handle%3C\'_,+RadioButton%3E"],[7323,"impl-Handle%3C\'a,+TabView%3E"],[7325,"impl-Handle%3C\'_,+Checkbox%3E"],[7326,"impl-Handle%3C\'_,+Switch%3E"],[7329,"impl-Handle%3C\'_,+Slider%3CL%3E%3E"],[7330,"impl-Handle%3C\'_,+NamedSlider%3E"],[7332,"impl-Handle%3C\'a,+VirtualList%3E"],[7333,"impl-Handle%3C\'a,+Scrollbar%3CL1%3E%3E"],[7334,"impl-Handle%3C\'a,+ScrollView%3CL%3E%3E"],[7342,"impl-Handle%3C\'_,+ArcTrack%3E"],[7343,"impl-Handle%3C\'_,+TickKnob%3E"],[8952,"impl-From%3CPathBuf%3E-for-DropData"],[8953,"impl-From%3CEntity%3E-for-DropData"]]},\
"vizia_baseview":{"doc":"","t":"DDNNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Application","ParentWindow","ScaleFactor","SystemScaleFactor","WindowScalePolicy","as_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","eq","equals","fmt","from","from","from","ignore_default_theme","inner_size","into","into","into","new","on_idle","open_parented","raw_window_handle","run","title","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","user_scale_factor","with_scale_policy","with_text_config"],"q":[[0,"vizia_baseview"],[44,"core::any"],[45,"core::fmt"],[46,"core::fmt"],[47,"core::ops::function"],[48,"core::marker"],[49,"vizia_window::window_description"],[50,"core::convert"],[51,"baseview::window"],[52,"raw_window_handle"],[53,"raw_window_handle"]],"d":["Creating a new application creates a root <code>Window</code> and a …","","Use the given dpi scale factor (e.g. <code>1.0</code> = 96 dpi)","Use the system’s dpi scale factor","The dpi scaling policy of the window","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Sets the default built-in theming to be ignored.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Takes a closure which will be called at the end of every …","Open a new child window.","","Open a new window that blocks the current thread until the …","","","","","","","","","","","","A scale factor applied on top of any DPI scaling, defaults …","Change the window’s scale policy. Not part of <code>new()</code> to …",""],"i":[0,0,2,2,0,2,8,15,2,8,15,2,2,2,2,2,2,8,15,2,8,8,8,15,2,8,8,8,15,8,8,2,8,15,2,8,15,2,8,15,2,8,8,8],"f":[0,0,0,0,0,[-1,1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[[-1,-2],3,[],[]],[[2,2],4],[[-1,1],4,[]],[[2,5],[[7,[3,6]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[8,[-1]]],[[8,[-1]]],[9,10]],[[[8,[-1]],-2],[[8,[-1]]],[9,10],[[12,[11]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[8,[-1]]],[9,10]],[[[8,[-1]],-2],[[8,[-1]]],[9,10],[9,10]],[[[8,[-1]],-2],13,[9,10],14],[15,16],[[[8,[-1]]],3,[9,10]],[[[8,[-1]],17],[[8,[-1]]],[9,10]],[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,18,[]],[-1,18,[]],[-1,18,[]],[[[8,[-1]],19],[[8,[-1]]],[9,10]],[[[8,[-1]],2],[[8,[-1]]],[9,10]],[[[8,[-1]],20],[[8,[-1]]],[9,10]]],"c":[],"p":[[8,"Any",44],[4,"WindowScalePolicy",0],[15,"tuple"],[15,"bool"],[3,"Formatter",45],[3,"Error",45],[4,"Result",46],[3,"Application",0],[8,"Fn",47],[8,"Send",48],[3,"WindowSize",49],[8,"Into",50],[3,"WindowHandle",51],[8,"HasRawWindowHandle",52],[3,"ParentWindow",0],[4,"RawWindowHandle",52],[15,"str"],[3,"TypeId",44],[15,"f64"],[3,"TextConfig",53]],"b":[]},\
"vizia_core":{"doc":"","t":"","n":["binding","context","environment","events","fonts","icons","image","include_style","input","layout","localization","model","modifiers","resource","style","util","vg","view","views","window","AndLens","Binding","Data","Index","IntoLens","Lens","LensExt","Map","MapRef","MapRefState","MapState","OrLens","RatioLens","Res","Setter","Source","Source","StaticLens","Target","Then","UnwrapLens","Wrapper","and","and","apply","bitand","bitand","bitand","bitand","bitor","bitor","bitor","bitor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get","get","get_fallible","get_fallible","get_val","get_val_fallible","get_val_fallible","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","idx","index","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_lens","into_lens","map","map","map_ref","map_ref","new","new","new","new","new","new","new","new","new","or","or","same","set_or_bind","swap","then","then","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap","unwrap","view","view","view","view","view","view","view","view","view","view","view","view","AccessContext","AccessNode","CURRENT","Context","ContextProxy","DataContext","DrawContext","EmitContext","EventContext","EventLoopClosed","EventProxy","MAPS","MAP_MANAGER","ProxyEmitError","ResourceContext","TreeProps","Unsupported","add_animation","add_child","add_font_mem","add_global_listener","add_listener","add_listener","add_stylesheet","add_timer","add_timer","add_translation","backdrop_filter","background_color","background_color","background_images","background_size","border_bottom_left_radius","border_bottom_left_shape","border_bottom_right_radius","border_bottom_right_shape","border_color","border_top_left_radius","border_top_left_shape","border_top_right_radius","border_top_right_shape","border_width","border_width","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","bounds","box_shadows","build_path","cache","cancel_scheduled","cancel_scheduled","cancel_scheduled","capture","caret_color","child_bottom","child_left","child_right","child_top","clip_region","clip_region","clone","clone_into","current","current","current","data","data","data","data","default","default_font","display","draw_backdrop_filter","draw_background","draw_border","draw_inset_box_shadows","draw_outline","draw_shadows","draw_text","draw_text_and_selection","draw_text_caret","draw_text_selection","emit","emit","emit","emit","emit_custom","emit_custom","emit_custom","emit_to","emit_to","emit_to","emit_to","environment","environment","event_proxy","first_child","first_child","fmt","fmt","fmt","focus","focus","focus_next","focus_prev","focus_with_visibility","focus_with_visibility","focused","font_color","font_size","font_size","from","from","from","from","from","from","from","from","get_clipboard","get_proxy","get_view","has_drop_data","hovered","ignore_default_theme","into","into","into","into","into","into","into","into","is_active","is_animating","is_checked","is_cursor_icon_locked","is_disabled","is_draggable","is_focused","is_hovered","is_over","is_placeholder_shown","is_read_only","is_valid","labelled_by","last_child","load_image","load_image","load_image","lock_cursor_icon","logical_to_physical","logical_to_physical","make_clone","modifiers","modifiers","modify","modify_timer","modify_timer","mouse","mouse","needs_redraw","needs_redraw","needs_relayout","needs_relayout","needs_restyle","needs_restyle","new","new","new","new_from_parent","new_with_current","nth_child","numeric_value","opacity","outline_color","outline_offset","outline_width","parent","parent","physical_to_logical","physical_to_logical","play_animation","play_animation_for","redraw","release","reload_styles","remove_user_themes","resolve_entity_identifier","resolve_entity_identifier","scale_factor","scale_factor","scale_factor","schedule_emit","schedule_emit","schedule_emit","schedule_emit_custom","schedule_emit_custom","schedule_emit_custom","schedule_emit_to","schedule_emit_to","schedule_emit_to","selection_color","send","set_active","set_backdrop_filter","set_background_color","set_bottom","set_bounds","set_bounds","set_character_lengths","set_character_positions","set_character_widths","set_checked","set_clip_path","set_clipboard","set_default_action_verb","set_default_font","set_display","set_drop_data","set_hidden","set_hover","set_id","set_image_loader","set_language","set_language","set_left","set_live","set_max_numeric_value","set_min_numeric_value","set_name","set_numeric_value","set_numeric_value_jump","set_numeric_value_step","set_opacity","set_overflowx","set_overflowy","set_placeholder_shown","set_pointer_events","set_read_only","set_read_write","set_right","set_role","set_role","set_rotate","set_scale","set_text","set_text_direction","set_text_selection","set_theme_mode","set_top","set_transform","set_transform_origin","set_translate","set_user_scale_factor","set_valid","set_value","set_visibility","set_window_size","set_word_lengths","set_z_index","spawn","spawn","spawn","spawn","start_timer","start_timer","stop_timer","stop_timer","text_align","text_value","text_wrap","timer_is_running","timer_is_running","to_owned","to_string","to_string_local","toggle_class","transform","transform","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unlock_cursor_icon","user_scale_factor","user_scale_factor","visibility","window_has_focus","window_size","window_size","with_current","with_current","AppTheme","BuiltIn","DarkMode","Environment","EnvironmentEvent","LightMode","SetLocale","SetThemeMode","System","Theme","ThemeMode","ToggleThemeMode","UseSystemLocale","app_theme","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","environment_derived_lenses","eq","eq","equals","equals","event","fmt","fmt","from","from","from","from","from","get_current_theme","into","into","into","into","into","locale","new","sys_theme","theme","theme_derived_lenses","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","as_any","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","caret_timer","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","equals","equals","equals","equals","fmt","fmt","fmt","fmt","from","from","from","from","get_val","get_val_fallible","hash","hash","hash","hash","into","into","into","into","locale","new","new","new","new","root","set_or_bind","theme","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","view","view","view","view","app_theme","as_any","as_any","as_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","eq","eq","eq","equals","equals","equals","fmt","fmt","fmt","from","from","from","hash","hash","hash","into","into","into","new","new","new","root","sys_theme","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","view","view","view","Direct","Event","EventMeta","Propagation","Start","Stop","Subtree","Tick","TimedEventHandle","Timer","TimerAction","Up","WindowEvent","as_any","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","consume","consume","default","direct","eq","eq","eq","eq","equals","equals","equals","equals","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","map","new","origin","origin","propagate","propagation","take","target","target","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","ROBOTO_BOLD","ROBOTO_ITALIC","ROBOTO_REGULAR","TABLER_ICONS","ICON_123","ICON_ADJUSTMENTS_ALT","ICON_ARROWS_SORT","ICON_ARROW_AUTOFIT_CONTENT","ICON_ARROW_AUTOFIT_DOWN","ICON_ARROW_AUTOFIT_HEIGHT","ICON_ARROW_AUTOFIT_LEFT","ICON_ARROW_AUTOFIT_RIGHT","ICON_ARROW_AUTOFIT_UP","ICON_ARROW_AUTOFIT_WIDTH","ICON_ARROW_BACK","ICON_ARROW_BACK_UP","ICON_ARROW_BACK_UP_DOUBLE","ICON_ARROW_BADGE_DOWN","ICON_ARROW_BADGE_LEFT","ICON_ARROW_BADGE_RIGHT","ICON_ARROW_BADGE_UP","ICON_ARROW_BAR_DOWN","ICON_ARROW_BAR_LEFT","ICON_ARROW_BAR_RIGHT","ICON_ARROW_BAR_TO_DOWN","ICON_ARROW_BAR_TO_LEFT","ICON_ARROW_BAR_TO_RIGHT","ICON_ARROW_BAR_TO_UP","ICON_ARROW_BAR_UP","ICON_ARROW_BEAR_LEFT","ICON_ARROW_BEAR_LEFT_2","ICON_ARROW_BEAR_RIGHT","ICON_ARROW_BEAR_RIGHT_2","ICON_ARROW_BIG_DOWN","ICON_ARROW_BIG_DOWN_LINE","ICON_ARROW_BIG_DOWN_LINES","ICON_ARROW_BIG_LEFT","ICON_ARROW_BIG_LEFT_LINE","ICON_ARROW_BIG_LEFT_LINES","ICON_ARROW_BIG_RIGHT","ICON_ARROW_BIG_RIGHT_LINE","ICON_ARROW_BIG_RIGHT_LINES","ICON_ARROW_BIG_UP","ICON_ARROW_BIG_UP_LINE","ICON_ARROW_BIG_UP_LINES","ICON_BAT","ICON_BOOKMARK","ICON_BOOKMARKS","ICON_BOOKMARKS_OFF","ICON_BOOKMARK_OFF","ICON_BOX_ALIGN_BOTTOM","ICON_BOX_ALIGN_BOTTOM_FILLED","ICON_BOX_ALIGN_BOTTOM_LEFT","ICON_BOX_ALIGN_BOTTOM_LEFT_FILLED","ICON_BOX_ALIGN_BOTTOM_RIGHT","ICON_BOX_ALIGN_BOTTOM_RIGHT_FILLED","ICON_BOX_ALIGN_LEFT","ICON_BOX_ALIGN_LEFT_FILLED","ICON_BOX_ALIGN_RIGHT","ICON_BOX_ALIGN_RIGHT_FILLED","ICON_BOX_ALIGN_TOP","ICON_BOX_ALIGN_TOP_FILLED","ICON_BOX_ALIGN_TOP_LEFT","ICON_BOX_ALIGN_TOP_LEFT_FILLED","ICON_BOX_ALIGN_TOP_RIGHT","ICON_BOX_ALIGN_TOP_RIGHT_FILLED","ICON_BOX_MARGIN","ICON_BOX_MULTIPLE_0","ICON_BOX_MULTIPLE_1","ICON_BOX_MULTIPLE_2","ICON_BOX_MULTIPLE_3","ICON_BOX_MULTIPLE_4","ICON_BOX_MULTIPLE_5","ICON_BOX_MULTIPLE_6","ICON_BOX_MULTIPLE_7","ICON_BOX_MULTIPLE_8","ICON_BOX_MULTIPLE_9","ICON_CALENDAR","ICON_CALENDAR_TIME","ICON_CAT","ICON_CHECK","ICON_CHEVRON_DOWN","ICON_CHEVRON_DOWN_LEFT","ICON_CHEVRON_DOWN_RIGHT","ICON_CHEVRON_LEFT","ICON_CHEVRON_RIGHT","ICON_CHEVRON_UP","ICON_CHEVRON_UP_LEFT","ICON_CHEVRON_UP_RIGHT","ICON_CIRCLE_NUMBER_0","ICON_CIRCLE_NUMBER_1","ICON_CIRCLE_NUMBER_2","ICON_CIRCLE_NUMBER_3","ICON_CIRCLE_NUMBER_4","ICON_CIRCLE_NUMBER_5","ICON_CIRCLE_NUMBER_6","ICON_CIRCLE_NUMBER_7","ICON_CIRCLE_NUMBER_8","ICON_CIRCLE_NUMBER_9","ICON_CLIPBOARD","ICON_CLOCK","ICON_COLUMNS_1","ICON_COLUMNS_2","ICON_COLUMNS_3","ICON_COLUMN_INSERT_LEFT","ICON_COLUMN_INSERT_RIGHT","ICON_COMMAND","ICON_COPY","ICON_CURSOR_TEXT","ICON_CUT","ICON_DEER","ICON_DOG","ICON_EDIT","ICON_EDIT_CIRCLE","ICON_EDIT_CIRCLE_OFF","ICON_EDIT_OFF","ICON_EYE","ICON_EYE_OFF","ICON_FILE_PENCIL","ICON_FILTER","ICON_FILTER_BOLT","ICON_FILTER_CANCEL","ICON_FILTER_CHECK","ICON_FILTER_CODE","ICON_FILTER_COG","ICON_FILTER_DISCOUNT","ICON_FILTER_DOLLAR","ICON_FILTER_DOWN","ICON_FILTER_EDIT","ICON_FILTER_EXCLAMATION","ICON_FILTER_HEART","ICON_FILTER_MINUS","ICON_FILTER_OFF","ICON_FILTER_PAUSE","ICON_FILTER_PIN","ICON_FILTER_PLUS","ICON_FILTER_QUESTION","ICON_FILTER_SEARCH","ICON_FILTER_SHARE","ICON_FILTER_STAR","ICON_FILTER_UP","ICON_FILTER_X","ICON_FISH","ICON_FISH_BONE","ICON_FISH_OFF","ICON_FOLDER","ICON_FOLDERS","ICON_FOLDERS_OFF","ICON_FOLDER_BOLT","ICON_FOLDER_CANCEL","ICON_FOLDER_CHECK","ICON_FOLDER_CODE","ICON_FOLDER_COG","ICON_FOLDER_DOLLAR","ICON_FOLDER_DOWN","ICON_FOLDER_EXCLAMATION","ICON_FOLDER_FILLED","ICON_FOLDER_HEART","ICON_FOLDER_MINUS","ICON_FOLDER_OFF","ICON_FOLDER_OPEN","ICON_FOLDER_PAUSE","ICON_FOLDER_PIN","ICON_FOLDER_PLUS","ICON_FOLDER_QUESTION","ICON_FOLDER_SEARCH","ICON_FOLDER_SHARE","ICON_FOLDER_STAR","ICON_FOLDER_SYMLINK","ICON_FOLDER_UP","ICON_FOLDER_X","ICON_GRID_DOTS","ICON_HEXAGON_NUMBER_0","ICON_HEXAGON_NUMBER_1","ICON_HEXAGON_NUMBER_2","ICON_HEXAGON_NUMBER_3","ICON_HEXAGON_NUMBER_4","ICON_HEXAGON_NUMBER_5","ICON_HEXAGON_NUMBER_6","ICON_HEXAGON_NUMBER_7","ICON_HEXAGON_NUMBER_8","ICON_HEXAGON_NUMBER_9","ICON_LAYOUT_2","ICON_LAYOUT_ALIGN_BOTTOM","ICON_LAYOUT_ALIGN_CENTER","ICON_LAYOUT_ALIGN_LEFT","ICON_LAYOUT_ALIGN_MIDDLE","ICON_LAYOUT_ALIGN_RIGHT","ICON_LAYOUT_ALIGN_TOP","ICON_LAYOUT_DISTRIBUTE_HORIZONTAL","ICON_LAYOUT_DISTRIBUTE_VERTICAL","ICON_LAYOUT_LIST","ICON_LETTER_CASE","ICON_LETTER_CASE_LOWER","ICON_LETTER_CASE_TOGGLE","ICON_LETTER_CASE_UPPER","ICON_LIST","ICON_LIST_SEARCH","ICON_LIST_TREE","ICON_MENU","ICON_MENU_2","ICON_MINUS","ICON_MOON","ICON_PENCIL","ICON_PENCIL_MINUS","ICON_PENCIL_OFF","ICON_PENCIL_PLUS","ICON_PIG","ICON_PIG_MONEY","ICON_PIG_OFF","ICON_PLAYER_PAUSE","ICON_PLAYER_PAUSE_FILLED","ICON_PLAYER_PLAY","ICON_PLAYER_PLAY_FILLED","ICON_PLAYER_RECORD","ICON_PLAYER_RECORD_FILLED","ICON_PLAYER_SKIP_BACK","ICON_PLAYER_SKIP_BACK_FILLED","ICON_PLAYER_SKIP_FORWARD","ICON_PLAYER_SKIP_FORWARD_FILLED","ICON_PLAYER_STOP","ICON_PLAYER_STOP_FILLED","ICON_PLAYLIST","ICON_PLAYLIST_ADD","ICON_PLAYLIST_OFF","ICON_PLAYLIST_X","ICON_PLUS","ICON_POINTER","ICON_REPEAT","ICON_REPEAT_OFF","ICON_ROW_INSERT_BOTTOM","ICON_ROW_INSERT_TOP","ICON_SEARCH","ICON_SETTINGS_AUTOMATION","ICON_SHARE","ICON_SHARE_2","ICON_SHARE_3","ICON_SLICE","ICON_SORT_0_9","ICON_SORT_9_0","ICON_SORT_ASCENDING","ICON_SORT_ASCENDING_2","ICON_SORT_ASCENDING_LETTERS","ICON_SORT_ASCENDING_NUMBERS","ICON_SORT_A_Z","ICON_SORT_DESCENDING","ICON_SORT_DESCENDING_2","ICON_SORT_DESCENDING_LETTERS","ICON_SORT_DESCENDING_NUMBERS","ICON_SORT_Z_A","ICON_SPACING_HORIZONTAL","ICON_SPACING_VERTICAL","ICON_SPIDER","ICON_SQUARE_PLUS","ICON_STAR_FILLED","ICON_SUN","ICON_TAG","ICON_TAGS","ICON_TAGS_OFF","ICON_TAG_OFF","ICON_TEXT_WRAP","ICON_TEXT_WRAP_DISABLED","ICON_TRASH","ICON_WAVE_SAW_TOOL","ICON_WAVE_SINE","ICON_WAVE_SQUARE","ICON_WEIGHT","ICON_X","A8","AnimationDecoder","Avif","Bgr8","Bgra8","Bmp","CHANNEL_COUNT","COLOR_MODEL","COLOR_TYPE","ColorType","DEFAULT_MAX_VALUE","DEFAULT_MIN_VALUE","Dds","Decoding","Delay","DynamicImage","EncodableLayout","Encoding","Err","ExtendedColorType","Farbfeld","FlatSamples","Frame","Frames","GenericImage","GenericImageView","Gif","GrayAlphaImage","GrayImage","Hdr","Ico","ImageBuffer","ImageDecoder","ImageDecoderRect","ImageEncoder","ImageError","ImageFormat","ImageLuma16","ImageLuma8","ImageLumaA16","ImageLumaA8","ImageOutputFormat","ImageResult","ImageRgb16","ImageRgb32F","ImageRgb8","ImageRgba16","ImageRgba32F","ImageRgba8","IoError","Jpeg","L1","L16","L16","L2","L4","L8","L8","La1","La16","La16","La2","La4","La8","La8","Limits","Luma","LumaA","Ok","OpenExr","Parameter","Pixel","Pixel","PixelWithColorType","Pixels","Png","Png","Pnm","Primitive","Progress","Qoi","Reader","Rgb","Rgb1","Rgb16","Rgb16","Rgb2","Rgb32F","Rgb32F","Rgb32FImage","Rgb4","Rgb8","Rgb8","RgbImage","Rgba","Rgba1","Rgba16","Rgba16","Rgba2","Rgba32F","Rgba32F","Rgba32FImage","Rgba4","Rgba8","Rgba8","RgbaImage","SubImage","Subpixel","Tga","Tiff","Unknown","Unsupported","Unsupported","WebP","adjust_contrast","apply","apply","apply","apply","apply","apply2","apply2","apply2","apply2","apply2","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_with_alpha","apply_without_alpha","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_bytes","as_bytes","as_flat_samples","as_flat_samples_f32","as_flat_samples_mut","as_flat_samples_u16","as_flat_samples_u8","as_luma16","as_luma8","as_luma_alpha16","as_luma_alpha8","as_mut","as_mut_luma16","as_mut_luma8","as_mut_luma_alpha16","as_mut_luma_alpha8","as_mut_rgb16","as_mut_rgb32f","as_mut_rgb8","as_mut_rgba16","as_mut_rgba32f","as_mut_rgba8","as_mut_slice","as_raw","as_ref","as_rgb16","as_rgb32f","as_rgb8","as_rgba16","as_rgba32f","as_rgba8","as_slice","as_view","as_view_mut","as_view_with_mut_samples","bits_per_pixel","blend","blend","blend","blend","blend","blend_pixel","blend_pixel","blend_pixel","blur","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","bounds","bounds","brighten","buffer","buffer","buffer_mut","bytes_per_pixel","can_read","can_write","change_bounds","channel_count","channel_count","channels","channels","channels","channels","channels","channels4","channels4","channels4","channels4","channels4","channels_mut","channels_mut","channels_mut","channels_mut","channels_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","codecs","collect_frames","color","color_hint","color_type","convert","copy_from","copy_within","copy_within","crop","crop_imm","current","default","default","delay","deref","deref","deref_mut","deref_mut","dimensions","dimensions","dimensions","dimensions","dimensions","enumerate_pixels","enumerate_pixels_mut","enumerate_rows","enumerate_rows_mut","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","error","expand_palette","extensions_str","extents","filter3x3","fits","flat","fliph","flipv","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_channels","from_channels","from_channels","from_channels","from_channels","from_decoder","from_extension","from_fn","from_mime_type","from_numer_denom_ms","from_parts","from_path","from_pixel","from_raw","from_saturating_duration","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_mut","from_slice_mut","from_slice_mut","from_slice_mut","from_slice_mut","from_vec","get_mut_sample","get_pixel","get_pixel","get_pixel","get_pixel","get_pixel_checked","get_pixel_mut","get_pixel_mut","get_pixel_mut","get_pixel_mut","get_pixel_mut_checked","get_sample","grayscale","guess_format","has_aliased_samples","has_alpha","has_color","hash","hash","hash","hash","hash","hash","hash","hash","height","height","height","huerotate","icc_profile","image_dimensions","image_mut_slice","image_slice","imageops","in_bounds","in_bounds","in_bounds_index","index","index","index","index","index","index","index","index_ignoring_bounds","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","inner","inner_mut","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_buffer","into_bytes","into_flat_samples","into_frames","into_iter","into_iter","into_luma16","into_luma8","into_luma_alpha16","into_luma_alpha8","into_raw","into_reader","into_rgb16","into_rgb32f","into_rgb8","into_rgba16","into_rgba32f","into_rgba8","into_vec","invert","invert","invert","invert","invert","invert","io","is_normal","layout","left","load","load_from_memory","load_from_memory_with_format","map","map","map","map","map","map2","map2","map2","map2","map2","map_with_alpha","map_with_alpha","map_with_alpha","map_with_alpha","map_with_alpha","map_without_alpha","math","min_length","new","new","new","new","new_luma16","new_luma8","new_luma_a16","new_luma_a8","new_rgb16","new_rgb32f","new_rgb8","new_rgba16","new_rgba32f","new_rgba8","next","next","numer_denom_ms","open","original_color_type","partial_cmp","pixels","pixels","pixels_mut","put_pixel","put_pixel","put_pixel","put_pixel","read_image","read_image_with_progress","read_rect","read_rect_with_progress","remaining","resize","resize_exact","resize_to_fill","rotate180","rotate270","rotate90","rows","rows_mut","sample_layout","samples","save","save","save_buffer","save_buffer_with_format","save_with_format","save_with_format","scanline_bytes","set_limits","shrink_to","source","strides_cwh","sub_image","sub_image","thumbnail","thumbnail_exact","to_bytes","to_image","to_luma","to_luma","to_luma","to_luma","to_luma","to_luma16","to_luma32f","to_luma8","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha","to_luma_alpha16","to_luma_alpha32f","to_luma_alpha8","to_mime_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_rgb","to_rgb","to_rgb","to_rgb","to_rgb","to_rgb16","to_rgb32f","to_rgb8","to_rgba","to_rgba","to_rgba","to_rgba","to_rgba","to_rgba16","to_rgba32f","to_rgba8","to_string","to_string_local","to_vec","top","total","total_bytes","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_buffer","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsafe_get_pixel","unsafe_get_pixel","unsafe_put_pixel","unsafe_put_pixel","unsharpen","view","view","width","width","width","with_monocolor","write_buffer_with_format","write_image","write_to","write_to","write_with_encoder","write_with_encoder","ConvertBuffer","EnumeratePixels","EnumeratePixelsMut","EnumerateRows","EnumerateRowsMut","Pixels","PixelsMut","Rows","RowsMut","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","convert","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","len","len","len","len","len","len","len","len","next","next","next","next","next","next","next","next","next_back","next_back","next_back","next_back","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","png","Adaptive","ApngDecoder","Avg","Best","CompressionType","Default","Fast","FilterType","Huffman","NoFilter","Paeth","PngDecoder","PngEncoder","PngReader","Rle","Sub","Up","apng","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","color_type","default","default","dimensions","encode","eq","eq","equals","equals","fmt","fmt","from","from","from","from","from","from","icc_profile","into","into","into","into","into","into","into_frames","into_reader","is_apng","new","new","new_with_quality","read","read_image","read_to_end","scanline_bytes","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","with_limits","write_image","Color","Decoding","DecodingError","DimensionError","DimensionMismatch","Encoding","EncodingError","Err","Exact","FailedAlready","Format","Generic","GenericFeature","ImageError","ImageFormatHint","ImageResult","InsufficientMemory","IoError","LimitError","LimitErrorKind","Limits","Name","NoMoreData","Ok","Parameter","ParameterError","ParameterErrorKind","PathExtension","Unknown","Unsupported","Unsupported","UnsupportedError","UnsupportedErrorKind","as_any","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","equals","equals","equals","equals","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format_hint","format_hint","format_hint","from","from","from","from","from","from","from","from","from","from","from","from","from_format_and_kind","from_format_hint","from_format_hint","from_kind","from_kind","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","kind","kind","kind","new","new","source","source","source","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string_local","to_string_local","to_string_local","to_string_local","to_string_local","to_string_local","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","limits","supported","ChannelCountMismatch","ColumnMajorPacked","Error","FlatSamples","ImagePacked","NormalForm","NormalFormRequired","PixelPacked","RowMajorPacked","SampleLayout","TooLarge","Unaliased","View","ViewMut","WrongColor","as_any","as_any","as_any","blend_pixel","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","bounds","channel_stride","channels","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","color_hint","column_major_packed","dimensions","dimensions","eq","eq","eq","equals","equals","equals","extents","fits","flat","flat","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","get_mut_sample","get_mut_sample","get_pixel","get_pixel","get_pixel_mut","get_sample","get_sample","has_aliased_samples","hash","hash","hash","height","height_stride","image_mut_slice","image_mut_slice","image_slice","image_slice","in_bounds","in_bounds","in_bounds","in_bounds_index","index","index_ignoring_bounds","into","into","into","into","into","into_inner","into_inner","is_normal","layout","min_length","min_length","min_length","partial_cmp","put_pixel","row_major_packed","samples","samples","samples","shrink_to","shrink_to","shrink_to","strides_cwh","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string_local","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_upgrade","type_id","type_id","type_id","type_id","type_id","width","width_stride","BiLevel","CatmullRom","Color","ColorMap","FilterType","Gaussian","Lanczos3","Nearest","Triangle","as_any","blur","borrow","borrow","borrow_mut","borrow_mut","brighten","clone","clone","clone_into","clone_into","colorops","contrast","crop","crop_imm","dither","eq","equals","filter3x3","flip_horizontal","flip_horizontal_in","flip_horizontal_in_place","flip_vertical","flip_vertical_in","flip_vertical_in_place","fmt","from","from","grayscale","grayscale_alpha","grayscale_with_type","grayscale_with_type_alpha","has_lookup","has_lookup","horizontal_gradient","huerotate","index_colors","index_of","index_of","interpolate_bilinear","interpolate_nearest","into","into","invert","lookup","lookup","map_color","map_color","overlay","overlay_bounds","replace","resize","rotate180","rotate180_in","rotate180_in_place","rotate270","rotate270_in","rotate90","rotate90_in","sample_bilinear","sample_nearest","thumbnail","tile","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unsharpen","vertical_gradient","BiLevel","Color","ColorMap","brighten","brighten_in_place","contrast","contrast_in_place","dither","grayscale","grayscale_alpha","grayscale_with_type","grayscale_with_type_alpha","has_lookup","huerotate","huerotate_in_place","index_colors","index_of","invert","lookup","map_color","LimitSupport","Limits","Reader","as_any","as_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_dimensions","check_support","clear_format","clone","clone","clone_into","clone_into","decode","default","default","eq","eq","equals","equals","fmt","fmt","format","free","free_usize","from","from","from","hash","hash","into","into","into","into_dimensions","into_inner","limits","max_alloc","max_image_height","max_image_width","new","no_limits","no_limits","open","reserve","reserve_usize","set_format","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","with_format","with_guessed_format","Rect","as_any","borrow","borrow_mut","clone","clone_into","eq","equals","fmt","from","hash","height","into","to_owned","try_from","try_into","type_id","width","x","y","ALT","AVRInput","AVRPower","Abort","Accept","Again","Again","AllCandidates","Alphanumeric","Alt","AltGraph","AltLeft","AltRight","AppSwitch","ArrowDown","ArrowDown","ArrowLeft","ArrowLeft","ArrowRight","ArrowRight","ArrowUp","ArrowUp","Attn","AudioBalanceLeft","AudioBalanceRight","AudioBassBoostDown","AudioBassBoostToggle","AudioBassBoostUp","AudioFaderFront","AudioFaderRear","AudioSurroundModeNext","AudioTrebleDown","AudioTrebleUp","AudioVolumeDown","AudioVolumeDown","AudioVolumeMute","AudioVolumeMute","AudioVolumeUp","AudioVolumeUp","Backquote","Backslash","Backspace","Backspace","BracketLeft","BracketRight","BrightnessDown","BrightnessDown","BrightnessUp","BrightnessUp","BrowserBack","BrowserBack","BrowserFavorites","BrowserFavorites","BrowserForward","BrowserForward","BrowserHome","BrowserHome","BrowserRefresh","BrowserRefresh","BrowserSearch","BrowserSearch","BrowserStop","BrowserStop","CTRL","Call","Camera","CameraFocus","Cancel","CapsLock","CapsLock","ChannelDown","ChannelUp","Character","Clear","Close","ClosedCaptionToggle","Code","CodeInput","ColorF0Red","ColorF1Green","ColorF2Yellow","ColorF3Blue","ColorF4Grey","ColorF5Brown","Comma","Compose","ContextMenu","ContextMenu","Control","ControlLeft","ControlRight","Convert","Convert","Copy","Copy","CrSel","Cut","Cut","DVR","Dead","Delete","Delete","Digit0","Digit1","Digit2","Digit3","Digit4","Digit5","Digit6","Digit7","Digit8","Digit9","Dimmer","DisplaySwap","DisplayToggleIntExt","Eisu","Eject","Eject","End","End","EndCall","Enter","Enter","Equal","EraseEof","Escape","Escape","ExSel","Execute","Exit","F1","F1","F10","F10","F11","F11","F12","F12","F13","F13","F14","F14","F15","F15","F16","F16","F17","F17","F18","F18","F19","F19","F2","F2","F20","F20","F21","F21","F22","F22","F23","F23","F24","F24","F3","F3","F4","F4","F5","F5","F6","F6","F7","F7","F8","F8","F9","F9","FavoriteClear0","FavoriteClear1","FavoriteClear2","FavoriteClear3","FavoriteRecall0","FavoriteRecall1","FavoriteRecall2","FavoriteRecall3","FavoriteStore0","FavoriteStore1","FavoriteStore2","FavoriteStore3","FinalMode","Find","Find","Fn","Fn","FnLock","FnLock","GoBack","GoHome","GroupFirst","GroupLast","GroupNext","GroupPrevious","Guide","GuideNextDay","GuidePreviousDay","HangulMode","HanjaMode","Hankaku","HeadsetHook","Help","Help","Hibernate","Hiragana","Hiragana","HiraganaKatakana","Home","Home","Hyper","Hyper","Info","Insert","Insert","InsertAction","InstantReplay","IntlBackslash","IntlRo","IntlYen","JunjaMode","KanaMode","KanaMode","KanjiMode","Katakana","Katakana","Key","Key11","Key12","KeyA","KeyB","KeyC","KeyD","KeyE","KeyF","KeyG","KeyH","KeyI","KeyJ","KeyK","KeyL","KeyM","KeyN","KeyO","KeyP","KeyQ","KeyR","KeyS","KeyT","KeyU","KeyV","KeyW","KeyX","KeyY","KeyZ","KeyboardLayoutSelect","Keymap","KeymapEntry","KeymapEvent","LOGO","Lang1","Lang2","Lang3","Lang4","Lang5","LastNumberRedial","LaunchApp1","LaunchApp2","LaunchApplication1","LaunchApplication2","LaunchAssistant","LaunchCalendar","LaunchContacts","LaunchControlPanel","LaunchMail","LaunchMail","LaunchMediaPlayer","LaunchMusicPlayer","LaunchPhone","LaunchScreenSaver","LaunchScreenSaver","LaunchSpreadsheet","LaunchWebBrowser","LaunchWebCam","LaunchWordProcessor","Left","Link","ListProgram","LiveContent","Lock","LogOff","MailForward","MailForward","MailReply","MailReply","MailSend","MailSend","MannerMode","MediaApps","MediaAudioTrack","MediaClose","MediaFastForward","MediaFastForward","MediaLast","MediaPause","MediaPause","MediaPlay","MediaPlay","MediaPlayPause","MediaPlayPause","MediaRecord","MediaRecord","MediaRewind","MediaRewind","MediaSelect","MediaSkipBackward","MediaSkipForward","MediaStepBackward","MediaStepForward","MediaStop","MediaStop","MediaTopMenu","MediaTrackNext","MediaTrackNext","MediaTrackPrevious","MediaTrackPrevious","Meta","MetaLeft","MetaRight","MicrophoneMuteToggle","MicrophoneToggle","MicrophoneVolumeDown","MicrophoneVolumeMute","MicrophoneVolumeUp","Middle","Minus","ModeChange","Modifiers","MouseButton","MouseButtonData","MouseState","NavigateIn","NavigateNext","NavigateOut","NavigatePrevious","New","NextCandidate","NextFavoriteChannel","NextUserProfile","NonConvert","NonConvert","Notification","NumLock","NumLock","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","NumpadAdd","NumpadBackspace","NumpadClear","NumpadClearEntry","NumpadComma","NumpadDecimal","NumpadDivide","NumpadEnter","NumpadEqual","NumpadHash","NumpadMemoryAdd","NumpadMemoryClear","NumpadMemoryRecall","NumpadMemoryStore","NumpadMemorySubtract","NumpadMultiply","NumpadParenLeft","NumpadParenRight","NumpadStar","NumpadSubtract","OnDemand","Open","Open","Other","PageDown","PageDown","PageUp","PageUp","Pairing","Paste","Paste","Pause","Pause","Period","PinPDown","PinPMove","PinPToggle","PinPUp","Play","PlaySpeedDown","PlaySpeedReset","PlaySpeedUp","Power","Power","PowerOff","PreviousCandidate","Print","PrintScreen","PrintScreen","PrivacyScreenToggle","Process","Props","Props","Quote","RandomToggle","RcLowBattery","RecordSpeedNext","Redo","RemoveAction","Resume","RfBypass","Right","Romaji","SHIFT","STBInput","STBPower","Save","ScanChannelsToggle","ScreenModeNext","ScrollLock","ScrollLock","Select","Select","SelectTask","Semicolon","Settings","Shift","ShiftLeft","ShiftRight","ShowAllWindows","SingleCandidate","Slash","Sleep","Soft1","Soft2","Soft3","Soft4","Space","SpeechCorrectionList","SpeechInputToggle","SpellCheck","SplitScreenToggle","Standby","Subtitle","Super","Super","Suspend","Symbol","SymbolLock","TV","TV3DMode","TVAntennaCable","TVAudioDescription","TVAudioDescriptionMixDown","TVAudioDescriptionMixUp","TVContentsMenu","TVDataService","TVInput","TVInputComponent1","TVInputComponent2","TVInputComposite1","TVInputComposite2","TVInputHDMI1","TVInputHDMI2","TVInputHDMI3","TVInputHDMI4","TVInputVGA1","TVMediaContext","TVNetwork","TVNumberEntry","TVPower","TVRadioService","TVSatellite","TVSatelliteBS","TVSatelliteCS","TVSatelliteToggle","TVTerrestrialAnalog","TVTerrestrialDigital","TVTimer","Tab","Tab","Teletext","Turbo","Undo","Undo","Unidentified","Unidentified","VideoModeNext","VoiceDial","WakeUp","WakeUp","Wink","Zenkaku","ZenkakuHankaku","ZoomIn","ZoomOut","ZoomToggle","ZoomToggle","action","all","as_any","as_any","as_any","as_any","as_any","as_any","as_any","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","complement","contains","cursorx","cursory","default","default","default","default","default","default","delta","difference","empty","eq","eq","eq","eq","eq","eq","eq","eq","equals","equals","equals","equals","equals","equals","equals","event","export","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","frame_delta","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_str","from_str","hash","hash","hash","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","is_all","is_empty","left","legacy_charcode","legacy_keycode","middle","new","new","not","on_action","partial_cmp","pos_down","pos_up","pressed","pressed_actions","previous_cursorx","previous_cursory","released","remove","right","set","state","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string_local","to_string_local","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","Auto","Column","GeoChanged","HEIGHT_CHANGED","LayoutType","POSX_CHANGED","POSY_CHANGED","ParentDirected","Percentage","Pixels","PositionType","Row","SelfDirected","Stretch","Units","WIDTH_CHANGED","all","as_any","as_any","as_any","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","clamp","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","complement","contains","default","default","default","difference","empty","eq","eq","eq","equals","equals","equals","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","get_val","get_val","get_val","insert","intersection","intersects","into","into","into","into","into_iter","is_all","is_auto","is_empty","is_percentage","is_pixels","is_stretch","iter","iter_names","not","parse","parse","parse","remove","same","same","same","set","set_or_bind","set_or_bind","set_or_bind","sub","sub_assign","symmetric_difference","to_owned","to_owned","to_owned","to_owned","to_px","to_px_clamped","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","BoundingBox","as_any","borrow","borrow_mut","bottom","bottom_left","bottom_right","center","center_bottom","center_left","center_right","center_top","clone","clone_into","contains","default","eq","equals","expand","expand_horizontal","expand_vertical","fmt","fmt","from","from_min_max","h","height","intersection","intersects","into","left","right","shrink","shrink_horizontal","shrink_sides","shrink_vertical","to_owned","to_string","to_string_local","top","top_left","top_right","transform","try_from","try_into","type_id","w","width","x","y","Localized","ToStringLocalized","arg","arg_const","as_any","borrow","borrow_mut","clone","clone_into","eq","equals","from","get_val","into","map","new","same","set_or_bind","to_owned","to_string_local","to_string_local","try_from","try_into","type_id","Model","build","event","name","AbilityModifiers","AccessibilityModifiers","ActionModifiers","BoxShadowBuilder","HideTooltip","LayoutModifiers","LinearGradientBuilder","ShowTooltip","StyleModifiers","TextModifiers","TooltipEvent","TooltipModel","WindowModifiers","add_stop","backdrop_filter","backdrop_filter","background_color","background_color","background_gradient","background_gradient","background_image","background_image","blur","border_bottom_left_radius","border_bottom_left_radius","border_bottom_left_shape","border_bottom_left_shape","border_bottom_right_radius","border_bottom_right_radius","border_bottom_right_shape","border_bottom_right_shape","border_color","border_color","border_corner_shape","border_corner_shape","border_radius","border_radius","border_top_left_radius","border_top_left_radius","border_top_left_shape","border_top_left_shape","border_top_right_radius","border_top_right_radius","border_top_right_shape","border_top_right_shape","border_width","border_width","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom","bottom","box_shadow","box_shadow","caret_color","caret_color","checkable","checkable","checked","checked","child_bottom","child_bottom","child_left","child_left","child_right","child_right","child_space","child_space","child_top","child_top","class","class","clip_path","clip_path","clone","clone","clone_into","clone_into","col_between","col_between","color","color","color","cursor","cursor","default","default","default_action_verb","default_action_verb","disabled","disabled","display","display","event","fmt","fmt","focusable","focusable","focused","focused","font_family","font_family","font_size","font_size","font_stretch","font_stretch","font_style","font_style","font_weight","font_weight","from","from","from","from","get_val","get_val","height","height","hidden","hidden","hoverable","hoverable","id","id","inset","into","into","into","into","layout_type","layout_type","left","left","live","live","max_bottom","max_bottom","max_height","max_height","max_left","max_left","max_right","max_right","max_size","max_size","max_space","max_space","max_top","max_top","max_width","max_width","min_bottom","min_bottom","min_height","min_height","min_left","min_left","min_right","min_right","min_size","min_size","min_space","min_space","min_top","min_top","min_width","min_width","name","name","navigable","navigable","new","new","numeric_value","numeric_value","on_double_click","on_drag","on_drop","on_focus_in","on_focus_out","on_geo_changed","on_hover","on_hover_out","on_mouse_down","on_mouse_move","on_mouse_up","on_over","on_over_out","on_press","on_press_down","opacity","opacity","outline_color","outline_color","outline_offset","outline_offset","outline_width","outline_width","overflow","overflow","overflowx","overflowx","overflowy","overflowy","pointer_events","pointer_events","position_type","position_type","read_only","read_only","read_write","read_write","right","right","role","role","rotate","rotate","row_between","row_between","scale","scale","selection_color","selection_color","set_or_bind","set_or_bind","size","size","space","space","spread","text","text","text_align","text_align","text_value","text_value","text_wrap","text_wrap","to_owned","to_owned","toggle_class","toggle_class","tooltip","tooltip_model_derived_lenses","tooltip_visible","top","top","transform","transform","transform_origin","transform_origin","translate","translate","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","visibility","visibility","width","width","with_direction","x_offset","y_offset","z_index","z_index","as_any","as_any","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","equals","equals","fmt","fmt","from","from","get_val","get_val_fallible","hash","hash","into","into","new","new","root","set_or_bind","to_owned","to_owned","tooltip_visible","try_from","try_from","try_into","try_into","type_id","type_id","view","view","DropWhenNoObservers","DropWhenUnusedForOneFrame","Forever","ImageRetentionPolicy","as_any","borrow","borrow_mut","clone","clone_into","eq","equals","from","into","to_owned","try_from","try_into","type_id","ALICEBLUE","ANTIQUEWHITE","AQUA","AQUAMARINE","AZURE","Alias","AllScroll","Angle","Angle","Arrow","Auto","Auto","BEIGE","BISQUE","BLACK","BLANCHEDALMOND","BLUE","BLUEVIOLET","BROWN","BURLYWOOD","BackgroundImage","BackgroundSize","Bevel","Black","Blur","Bold","BorderCornerShape","Bottom","BoxShadow","CADETBLUE","CHARTREUSE","CHOCOLATE","CORAL","CORNFLOWERBLUE","CORNSILK","CRIMSON","CYAN","Calc","Cell","Center","Center","Center","Ch","ClipPath","Cm","ColResize","Color","Condensed","Contain","ContextMenu","Copy","Corner","Cover","Crosshair","CssRule","CurrentColor","Cursive","CursorIcon","DARKBLUE","DARKCYAN","DARKGOLDENROD","DARKGRAY","DARKGREEN","DARKGREY","DARKKHAKI","DARKMAGENTA","DARKOLIVEGREEN","DARKORANGE","DARKORCHID","DARKRED","DARKSALMON","DARKSEAGREEN","DARKSLATEBLUE","DARKSLATEGRAY","DARKSLATEGREY","DARKTURQUOISE","DARKVIOLET","DEEPPINK","DEEPSKYBLUE","DIMGRAY","DIMGREY","DODGERBLUE","Default","Deg","DemiBold","Display","EResize","Em","End","EwResize","Ex","Expanded","Explicit","ExtraBlack","ExtraBold","ExtraCondensed","ExtraExpanded","ExtraLight","FIREBRICK","FLORALWHITE","FORESTGREEN","FUCHSIA","Fantasy","Filter","Flex","FontFamily","FontSize","FontStretch","FontStyle","FontWeight","FontWeightKeyword","GAINSBORO","GHOSTWHITE","GOLD","GOLDENROD","GRAY","GREEN","GREENYELLOW","GREY","Generic","GenericFontFamily","Grab","Grabbing","Grad","Gradient","Gradient","Gradient","HONEYDEW","HOTPINK","Hairline","Hand","Heavy","Help","Hidden","Hidden","Horizontal","HorizontalPosition","HorizontalPositionKeyword","INDIANRED","INDIGO","IVORY","Ignored","Image","ImageOrGradient","In","Italic","Justify","KHAKI","Keyframes","LAVENDER","LAVENDERBLUSH","LAWNGREEN","LEMONCHIFFON","LIGHTBLUE","LIGHTCORAL","LIGHTCYAN","LIGHTGOLDENRODYELLOW","LIGHTGRAY","LIGHTGREEN","LIGHTGREY","LIGHTPINK","LIGHTSALMON","LIGHTSEAGREEN","LIGHTSKYBLUE","LIGHTSLATEGRAY","LIGHTSLATEGREY","LIGHTSTEELBLUE","LIGHTYELLOW","LIME","LIMEGREEN","LINEN","Left","Left","Length","Length","Length","Length","LengthOrPercentage","LengthValue","Light","LineDirection","Linear","LinearGradient","MAGENTA","MAROON","MEDIUMAQUAMARINE","MEDIUMBLUE","MEDIUMORCHID","MEDIUMPURPLE","MEDIUMSEAGREEN","MEDIUMSLATEBLUE","MEDIUMSPRINGGREEN","MEDIUMTURQUOISE","MEDIUMVIOLETRED","MIDNIGHTBLUE","MINTCREAM","MISTYROSE","MOCCASIN","Matrix","Matrix","Medium","Mm","Monospace","Move","NAVAJOWHITE","NAVY","NResize","Named","NeResize","NeswResize","NoDrop","None","None","None","None","None","Normal","Normal","Normal","NotAllowed","NsResize","NwResize","NwseResize","OLDLACE","OLIVE","OLIVEDRAB","ORANGE","ORANGERED","ORCHID","Oblique","Opacity","Overflow","PALEGOLDENROD","PALEGREEN","PALETURQUOISE","PALEVIOLETRED","PAPAYAWHIP","PEACHPUFF","PERU","PINK","PLUM","POWDERBLUE","PURPLE","PX_PER_CM","PX_PER_IN","PX_PER_MM","PX_PER_PC","PX_PER_PT","PX_PER_Q","Pc","Percentage","PointerEvents","Position","Progress","Property","Pt","Px","Q","REBECCAPURPLE","RED","REDRAW","REFLOW","RELAYOUT","RESTYLE","RGBA","RGBA","ROSYBROWN","ROYALBLUE","Rad","Radial","Regular","Rem","Right","Right","Rotate","Round","RowResize","SADDLEBROWN","SALMON","SANDYBROWN","SEAGREEN","SEASHELL","SIENNA","SILVER","SKYBLUE","SLATEBLUE","SLATEGRAY","SLATEGREY","SNOW","SPRINGGREEN","SResize","STEELBLUE","SansSerif","Scale","Scale","ScaleX","ScaleY","SeResize","SemiBold","SemiCondensed","SemiExpanded","Serif","Shape","Side","Side","Skew","SkewX","SkewY","Start","Style","Style","SwResize","SystemFlags","TAN","TEAL","THISTLE","TOMATO","TRANSPARENT","TURQUOISE","Text","TextAlign","Thin","Top","Transform","Transition","Translate","Translate","TranslateX","TranslateY","Turn","UltraBlack","UltraBold","UltraCondensed","UltraExpanded","UltraLight","Url","VIOLET","Value","Vertical","VerticalPosition","VerticalPositionKeyword","VerticalText","Vh","Visibility","Visible","Visible","Vmax","Vmin","Vw","WHEAT","WHITE","WHITESMOKE","WResize","Wait","YELLOW","YELLOWGREEN","ZoomIn","ZoomOut","a","a","a","add","add","add","aliceblue","all","alpha","antiquewhite","aqua","aquamarine","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","azure","b","b","b","beige","bisque","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","black","blanchedalmond","blue","blue","blueviolet","blur_radius","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","brown","burlywood","c","cadetblue","center","chartreuse","chocolate","clear_style_rules","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","color","complement","contains","coral","cornflowerblue","cornsilk","crimson","cyan","d","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_action_verb","delay","difference","dimgray","dimgrey","direction","dodgerblue","duration","e","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","extend","f","firebrick","floralwhite","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forestgreen","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","fuchsia","g","g","gainsboro","get_rgba","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","get_val","ghostwhite","gold","goldenrod","gray","green","green","greenyellow","grey","hidden","honeydew","hotpink","hsl","hsla","indianred","indigo","insert","inset","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","is_all","is_center","is_empty","is_gradient","is_zero","iter","iter_names","ivory","khaki","labelled_by","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","live","logical_to_physical","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","mul","mul","mul","name","navajowhite","navy","needs_access_update","needs_access_update","needs_redraw","needs_relayout","needs_restyle","needs_text_layout","new","new","new","new","new","new","not","numeric_value","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","parse","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","peachpuff","peru","physical_to_logical","pink","plum","powderblue","property","purple","px","px","r","r","rebeccapurple","red","red","remove","remove","rgb","rgb","rgba","rgba","role","rosybrown","royalblue","saddlebrown","salmon","same","same","same","same","same","same","sandybrown","scale_factor","seagreen","seashell","set","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","should_redraw","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","spread_radius","springgreen","steelblue","stops","sub","sub_assign","symmetric_difference","tan","teal","text_value","thistle","timing_function","to_degrees","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_pixels","to_px","to_px","to_radians","to_string","to_string_local","to_unit_value","toggle","tomato","transparent","try_add","try_add","try_add","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","turquoise","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","violet","wheat","white","whitesmoke","x","x","x","x_offset","y","y","y","y_offset","yellow","yellowgreen","zero","height","width","horizontal","vertical","CSS","IntoCssStr","Path","String","borrow","borrow_mut","from","from","from","from_file","from_string","get_style","get_style","into","try_from","try_into","type_id","Align","Alphabetic","Atlas","Atop","Baseline","Bevel","BlendFactor","Bottom","Butt","Canvas","Center","Color","CompositeOperation","CompositeOperationState","Copy","DestinationAtop","DestinationIn","DestinationOut","DestinationOver","DrawCommand","DstAlpha","DstColor","ErrorKind","EvenOdd","FLIP_Y","Fill","FillRule","FontId","FontInfoExtracionError","FontMetrics","FontParseError","FontSizeTooLargeForAtlas","GENERATE_MIPMAPS","GaussianBlur","GeneralError","GlyphDrawCommands","Gray","Gray8","Hole","Image","Image","ImageError","ImageFilter","ImageFlags","ImageId","ImageIdNotFound","ImageInfo","ImageSource","ImageUpdateOutOfBounds","ImageUpdateWithDifferentFormat","IoError","Left","Lighter","LineCap","LineJoin","Middle","Miter","NEAREST","NativeTexture","NoFontFound","NonZero","One","OneMinusDstAlpha","OneMinusDstColor","OneMinusSrcAlpha","OneMinusSrcColor","PREMULTIPLIED","Paint","Path","PixelFormat","Quad","REPEAT_X","REPEAT_Y","RenderMode","RenderTarget","RenderTargetError","Renderer","Rgb","Rgb8","Rgba","Rgba8","Right","Round","Round","Screen","ShaderCompileError","ShaderLinkError","Solid","Solidity","SourceIn","SourceOut","SourceOver","Square","SrcAlpha","SrcAlphaSaturate","SrcColor","Stroke","TextContext","TextMetrics","Top","Transform2D","UnknownError","UnsuportedImageFromat","Xor","Zero","a","add_font","add_font_dir","add_font_dir","add_font_file","add_font_mem","add_font_mem","add_rect","add_shared_font_with_index","all","alloc_image","alpha_glyphs","anti_alias","arc","arc_to","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","ascender","average_scale","b","bezier_to","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","black","bold","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","box_gradient","break_text","break_text","break_text_vec","break_text_vec","cache_key","circle","clear_rect","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","close","close","cmp","cmp","cmp","color","color_glyphs","complement","contains","contains_point","create_image","create_image_empty","create_image_from_native_texture","create_image_from_native_texture","curve_to","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","delete_image","delete_image","descender","difference","dimensions","draw_glyph_commands","drop","ellipse","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","expand","extend","fill_path","fill_rule","fill_text","filter_image","flags","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","font_size","format","format","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","g","get_image","get_image_mut","global_composite_blend_func","global_composite_blend_func_separate","global_composite_operation","glyphs","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","height","height","height","height","hex","hsl","hsla","identity","image","image_id","image_info","image_size","image_tint","index","index_mut","insert","intersect_scissor","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","inverse","inversed","is_all","is_black","is_empty","is_empty","italic","iter","iter_names","letter_spacing","line_cap_end","line_cap_start","line_join","line_to","line_to","line_width","linear_gradient","linear_gradient_stops","load_image_file","load_image_mem","measure_font","measure_font","measure_text","measure_text","miter_limit","move_to","move_to","multiply","new","new","new","new","new","new","new_translation","new_with_text_context","not","oblique","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","path_bbox","premultiplied","premultiply","quad_to","quad_to","quads","r","radial_gradient","radial_gradient_stops","realloc_image","rect","regular","remove","render","renderer","reset","reset","reset_scissor","reset_transform","resize_shaped_words_cache","resize_shaping_run_cache","restore","rgb","rgba","rgbaf","rgbf","rotate","rotate","rounded_rect","rounded_rect_varying","s0","s1","save","save_with","scale","scale","scissor","screenshot","screenshot","set","set_alpha","set_alphaf","set_anti_alias","set_color","set_distance_tolerance","set_fill_rule","set_font","set_font_size","set_format","set_global_alpha","set_letter_spacing","set_line_cap","set_line_cap_end","set_line_cap_start","set_line_join","set_line_width","set_miter_limit","set_render_target","set_size","set_size","set_stencil_strokes","set_text_align","set_text_baseline","set_transform","size","size","size","skew_x","skew_x","skew_y","skew_y","solidity","stencil_strokes","stroke_path","stroke_text","sub","sub_assign","symmetric_difference","t0","t1","text_align","text_baseline","to_array","to_mat3x4","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string_local","toggle","transform","transform_point","translate","translate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","update_image","update_image","variable","verbs","weight","white","width","width","width","width","with_anti_alias","with_blend_factors","with_color","with_fill_rule","with_font","with_font_size","with_letter_spacing","with_line_cap","with_line_cap_end","with_line_cap_start","with_line_join","with_line_width","with_miter_limit","with_stencil_strokes","with_text_align","with_text_baseline","x","x0","x1","y","y0","y1","sigma","A8","AnimationDecoder","Avif","Bgr8","Bgra8","Bmp","CHANNEL_COUNT","COLOR_MODEL","COLOR_TYPE","ColorType","DEFAULT_MAX_VALUE","DEFAULT_MIN_VALUE","Dds","Decoding","Delay","DynamicImage","EncodableLayout","Encoding","Err","ExtendedColorType","Farbfeld","FlatSamples","Frame","Frames","GenericImage","GenericImageView","Gif","GrayAlphaImage","GrayImage","Hdr","Ico","ImageBuffer","ImageDecoder","ImageDecoderRect","ImageEncoder","ImageError","ImageFormat","ImageLuma16","ImageLuma8","ImageLumaA16","ImageLumaA8","ImageOutputFormat","ImageResult","ImageRgb16","ImageRgb32F","ImageRgb8","ImageRgba16","ImageRgba32F","ImageRgba8","IoError","Jpeg","L1","L16","L16","L2","L4","L8","L8","La1","La16","La16","La2","La4","La8","La8","Limits","Luma","LumaA","Ok","OpenExr","Parameter","Pixel","Pixel","PixelWithColorType","Pixels","Png","Png","Pnm","Primitive","Progress","Qoi","Reader","Rgb","Rgb1","Rgb16","Rgb16","Rgb2","Rgb32F","Rgb32F","Rgb32FImage","Rgb4","Rgb8","Rgb8","RgbImage","Rgba","Rgba1","Rgba16","Rgba16","Rgba2","Rgba32F","Rgba32F","Rgba32FImage","Rgba4","Rgba8","Rgba8","RgbaImage","SubImage","Subpixel","Tga","Tiff","Unknown","Unsupported","Unsupported","WebP","apply","apply2","apply_with_alpha","apply_without_alpha","as_bytes","blend","blend_pixel","bounds","buffer","channels","channels4","channels_mut","codecs","color_hint","color_type","copy_from","copy_within","dimensions","dimensions","error","flat","from_channels","from_slice","from_slice_mut","get_pixel","get_pixel_mut","guess_format","height","icc_profile","image_dimensions","imageops","in_bounds","into_frames","into_reader","invert","io","layout","load","load_from_memory","load_from_memory_with_format","map","map2","map_with_alpha","map_without_alpha","math","open","original_color_type","pixels","put_pixel","read_image","read_image_with_progress","read_rect","read_rect_with_progress","samples","save_buffer","save_buffer_with_format","scanline_bytes","set_limits","sub_image","to_luma","to_luma_alpha","to_rgb","to_rgba","total_bytes","unsafe_get_pixel","unsafe_put_pixel","view","width","write_buffer_with_format","write_image","ConvertBuffer","EnumeratePixels","EnumeratePixelsMut","EnumerateRows","EnumerateRowsMut","Pixels","PixelsMut","Rows","RowsMut","convert","png","Adaptive","ApngDecoder","Avg","Best","CompressionType","Default","Fast","FilterType","Huffman","NoFilter","Paeth","PngDecoder","PngEncoder","PngReader","Rle","Sub","Up","Color","Decoding","DecodingError","DimensionError","DimensionMismatch","Encoding","EncodingError","Err","Exact","FailedAlready","Format","Generic","GenericFeature","ImageError","ImageFormatHint","ImageResult","InsufficientMemory","IoError","LimitError","LimitErrorKind","Limits","Name","NoMoreData","Ok","Parameter","ParameterError","ParameterErrorKind","PathExtension","Unknown","Unsupported","Unsupported","UnsupportedError","UnsupportedErrorKind","limits","supported","ChannelCountMismatch","ColumnMajorPacked","Error","FlatSamples","ImagePacked","NormalForm","NormalFormRequired","PixelPacked","RowMajorPacked","SampleLayout","TooLarge","Unaliased","View","ViewMut","WrongColor","channel_stride","channels","color_hint","height","height_stride","layout","samples","width","width_stride","BiLevel","CatmullRom","Color","ColorMap","FilterType","Gaussian","Lanczos3","Nearest","Triangle","blur","brighten","colorops","contrast","crop","crop_imm","dither","filter3x3","flip_horizontal","flip_horizontal_in","flip_horizontal_in_place","flip_vertical","flip_vertical_in","flip_vertical_in_place","grayscale","grayscale_alpha","grayscale_with_type","grayscale_with_type_alpha","has_lookup","horizontal_gradient","huerotate","index_colors","index_of","interpolate_bilinear","interpolate_nearest","invert","lookup","map_color","overlay","overlay_bounds","replace","resize","rotate180","rotate180_in","rotate180_in_place","rotate270","rotate270_in","rotate90","rotate90_in","sample_bilinear","sample_nearest","thumbnail","tile","unsharpen","vertical_gradient","BiLevel","Color","ColorMap","brighten","brighten_in_place","contrast","contrast_in_place","dither","grayscale","grayscale_alpha","grayscale_with_type","grayscale_with_type_alpha","has_lookup","huerotate","huerotate_in_place","index_colors","index_of","invert","lookup","map_color","LimitSupport","Limits","Reader","max_alloc","max_image_height","max_image_width","Rect","height","width","x","y","Img","ImgExt","ImgExtMut","ImgRef","ImgRefMut","ImgVec","PixelsIter","PixelsIterMut","PixelsRefIter","RowsIter","RowsIterMut","as_any","as_contiguous_buf","as_mut","as_mut","as_mut","as_ref","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buf","buf","buf","buf","buf","buf_mut","clone","clone_into","count","count","eq","eq","eq","eq","eq","eq","eq","equals","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","hash","hash","hash","height","height","height","height","height","height_padded","height_padded","index","index","index","index","index","index","index","index","index","index_mut","index_mut","index_mut","index_mut","index_mut","index_mut","into","into","into","into","into","into","into_buf","into_contiguous_buf","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_owned","len","len","map_buf","new","new_buf","new_stride","next","next","next","next","next","next_back","next_back","nth","nth","pixels","pixels","pixels","pixels_mut","pixels_mut","pixels_ref","rows","rows","rows","rows_mut","rows_mut","rows_padded","rows_padded","rows_padded_mut","rows_padded_mut","size_hint","size_hint","size_hint","stride","stride","stride","stride","stride","sub_image","sub_image","sub_image","sub_image_mut","sub_image_mut","to_contiguous_buf","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","width","width","width","width","width","width_padded","width_padded","ClearRect","Command","CommandType","ConcaveFill","ConvexFill","Drawable","FillColor","FillGradient","FillImage","FillImageGradient","FilterImage","Image","Image","NativeTexture","OpenGl","RenderFilteredImage","RenderTarget","Renderer","Screen","SetRenderTarget","ShaderType","Stencil","StencilStroke","Stroke","TextureCopyUnclipped","Triangles","Vertex","Void","alloc_image","alloc_image","alloc_image","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","create_image_from_native_texture","create_image_from_native_texture","create_image_from_native_texture","default","default","default","delete_image","delete_image","delete_image","drop","eq","eq","equals","equals","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","into","into","into","into","into","into","into","is_opengles","new","new","new_from_function","new_from_function_cstr","partial_cmp","render","render","render","screenshot","screenshot","screenshot","set","set_screen_target","set_size","set_size","set_size","to_f32","to_owned","to_owned","to_owned","to_u8","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","u","update_image","update_image","update_image","v","x","y","color","fill_params","filter","height","params","params","params","params1","params2","stencil_params","target_image","width","x","y","AsPixels","ColorComponentMap","ComponentBytes","ComponentMap","ComponentSlice","FromSlice","Pod","RGB","RGB16","RGB8","RGBA","RGBA16","RGBA8","Zeroable","a","a","a","add","add","add","add","add_assign","add_assign","add_assign","add_assign","alpha","alpha","alt","as_any","as_any","as_bgr","as_bgr_mut","as_bgra","as_bgra_mut","as_bytes","as_bytes_mut","as_gray","as_gray_alpha","as_gray_alpha_mut","as_gray_mut","as_mut","as_mut","as_mut_slice","as_mut_slice","as_mut_slice","as_pixels","as_pixels_mut","as_ref","as_ref","as_rgb","as_rgb_mut","as_rgba","as_rgba_mut","as_slice","as_slice","as_slice","b","b","b","b","b","b","bgr","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","cmp","default","default","div","div","div_assign","div_assign","eq","eq","equals","equals","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_iter","from_iter","g","g","g","g","g","g","hash","hash","into","into","into","into","into","into","is_valid_bit_pattern","is_valid_bit_pattern","iter","iter","map","map","map","map_alpha","map_c","map_c","map_c","map_rgb","mul","mul","mul","mul_assign","mul_assign","mul_assign","new","new","new_alpha","new_alpha","partial_cmp","partial_cmp","r","r","r","r","r","r","rgb","rgb_mut","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","to_owned","to_owned","to_string","to_string","to_string_local","to_string_local","try_from","try_from","try_into","try_into","type_id","type_id","zeroed","BGR","BGR16","BGR8","BGRA","BGRA16","BGRA8","GRAY16","GRAY8","GRAYA16","GRAYA8","Gray","GrayAlpha","a","a","a","add","add","add","add","add_assign","add_assign","add_assign","add_assign","alpha","alpha","alpha","as_any","as_any","as_any","as_any","as_mut","as_mut","as_mut_slice","as_mut_slice","as_mut_slice","as_mut_slice","as_ref","as_ref","as_slice","as_slice","as_slice","as_slice","b","b","b","b","b","b","bgr","bgr_mut","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","default","default","default","default","deref","div","div","div_assign","div_assign","eq","eq","eq","eq","equals","equals","equals","equals","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","g","g","g","g","g","g","gray","gray_mut","hash","hash","hash","hash","into","into","into","into","into","into","into","into","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","is_valid_bit_pattern","iter","iter","map","map","map","map","map_alpha","map_alpha","map_c","map_c","map_c","map_c","map_gray","map_rgb","mul","mul","mul","mul_assign","mul_assign","mul_assign","new","new","new","new","new_alpha","new_alpha","partial_cmp","partial_cmp","partial_cmp","partial_cmp","r","r","r","r","r","r","rgb","rgb_mut","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sum","sum","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string_local","to_string_local","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","Canvas","Handle","View","accessibility","bar_color","bind","borrow","borrow_mut","bounds","build","change_page_on_select","context","data","describing","draw","element","entity","event","from","into","keyboard_fraction","keyboard_fraction","lock_focus_to_within","modify","needs_redraw","needs_relayout","needs_restyle","on_blur","on_blur","on_blur","on_build","on_cancel","on_change","on_change","on_change","on_change","on_change","on_changing","on_changing","on_changing","on_clear","on_close","on_decrement","on_decrement","on_double_click","on_drag","on_drop","on_edit","on_focus_in","on_focus_out","on_geo_changed","on_hover","on_hover_out","on_increment","on_increment","on_mouse_down","on_mouse_move","on_mouse_up","on_over","on_over_out","on_press","on_press_down","on_scroll","on_select","on_select","on_select","on_select","on_select","on_submit","on_toggle","on_toggle","parent","placeholder","range","range","scale_factor","scroll_to_cursor","scroll_to_cursor","scroll_to_cursor","show_controls","step","tooltip","try_from","try_into","type_id","validate","value","value","with_selected","AM","AMOrPM","AnalogTimepicker","AnalogTimepickerEvent","AnalogTimepickerPage","ArcTrack","Binding","Blur","Button","Checkbox","Chevrons","ChildGeo","Chip","Clear","Close","Close","Close","CloseAll","ComboBox","ComboBoxEvent","ComboPopup","Continuous","Copy","Cut","Datepicker","DayTime","Decrement","DecrementHour","DecrementMinutes","DeleteText","DigitalTimepicker","DigitalTimepickerEvent","Discrete","Drag","Dropdown","Element","EndEdit","HStack","Hit","Horizontal","Horizontal","Hours","HoverMenu","Icon","Image","Increment","IncrementHour","IncrementMinutes","InsertText","Knob","KnobMode","Label","List","MenuBar","MenuButton","MenuDivider","MenuEvent","MenuIsOpen","MenuPopup","Minutes","MoveCursor","NamedSlider","Notification","Open","Open","Orientation","PM","ParentGeo","Paste","PickList","PlusMinus","Popup","PopupData","PopupEvent","ProgressBar","RadioButton","Rating","Scroll","ScrollData","ScrollEvent","ScrollView","ScrollX","ScrollY","Scrollbar","Seconds","SelectAll","SelectParagraph","SelectWord","SetFilterText","SetHour","SetHours","SetHovered","SetMinutes","SetMinutes","SetNumItems","SetOnScroll","SetOption","SetPage","SetPlaceholder","SetScrollY","SetSeconds","SetX","SetY","SetZone","Slider","Spinbox","SpinboxEvent","SpinboxIcons","SpinboxKind","StartEdit","Submenu","Submit","Switch","Switch","TabPair","TabView","TextEvent","Textbox","TickKnob","Ticks","Timepicker","ToggleAMOrPM","ToggleAMOrPM","ToggleCaret","ToggleOpen","Tooltip","VStack","Vertical","Vertical","VirtualList","VirtualListEvent","ZStack","accessibility","accessibility","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","combo_box_derived_lenses","container_height","container_width","content","custom","custom","custom","custom","default","default","default","draw","draw","draw","draw","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","element","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","event","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","header","horizontal","hour","inner_height","inner_width","intermediate","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_open","menu_bar_derived_lenses","menu_button_derived_lenses","minutes","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_multiline","normalized_map","on_scroll","popup_data_derived_lenses","same","same","same","same","same","scroll_x","scroll_y","submenu_derived_lenses","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vertical","virtual_list_derived_lenses","zone","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","eq","eq","eq","eq","equals","equals","equals","equals","equals","equals","equals","equals","equals","filter_text","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","hash","hash","hovered","into","into","into","into","into","into","into","into","into","is_open","list_lens","new","new","new","new","new","new","new","new","new","on_select","p","placeholder","root","selected","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","view","view","view","view","view","view","view","view","view","as_any","as_any","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","equals","equals","fmt","fmt","from","from","get_val","get_val_fallible","hash","hash","into","into","is_open","new","new","root","set_or_bind","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","view","view","as_any","borrow","borrow_mut","clone","clone_into","eq","equals","fmt","from","hash","into","new","root","to_owned","try_from","try_into","type_id","view","DecibelMap","DisplayDecimals","Five","Four","Frequency","FrequencyDisplayMode","FrequencyMap","GenericMap","HzThenKHz","IntMap","Linear","NormalizedMap","One","OnlyHz","Power","Three","Two","ValueScaling","Zero","amplitude_to_db","amplitude_to_normalized","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clamp_db","clamp_hz","clamp_int","clamp_value","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","db_to_amplitude","db_to_normalized","default","default","display_value","eq","eq","eq","equals","equals","equals","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","hz_to_normalized","int_to_normalized","into","into","into","into","into","into","into","max","max","max_db","max_hz","min","min","min_db","min_hz","new","new","new","new","normalized_to_amplitude","normalized_to_db","normalized_to_display","normalized_to_display","normalized_to_display","normalized_to_display","normalized_to_display","normalized_to_hz","normalized_to_int","normalized_to_value","normalized_to_value","snap","snap","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value_scaling","value_scaling","value_scaling","value_to_normalized","value_to_normalized","over_1k","under_1k","as_any","as_any","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","eq","eq","equals","equals","fmt","fmt","from","from","get_val","get_val","get_val_fallible","get_val_fallible","hash","hash","into","into","is_open","new","new","root","set_or_bind","set_or_bind","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","view","view","as_any","as_any","as_any","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","eq","eq","eq","equals","equals","equals","fmt","fmt","fmt","from","from","from","get_val","get_val","get_val_fallible","get_val_fallible","hash","hash","hash","into","into","into","is_open","new","new","new","open_on_hover","root","set_or_bind","set_or_bind","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","view","view","view","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","eq","eq","eq","eq","eq","eq","eq","eq","equals","equals","equals","equals","equals","equals","equals","equals","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","get_val","get_val","get_val","get_val","get_val","get_val","get_val_fallible","get_val_fallible","get_val_fallible","get_val_fallible","get_val_fallible","get_val_fallible","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","item_height","new","new","new","new","new","new","new","new","num_items","offset","on_change","root","scroll_to_cursor","scrolly","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","set_or_bind","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","view","view","view","view","view","view","view","view","visible_items","ActionRequest","CharInput","Debug","Drop","DropData","File","FocusIn","FocusNext","FocusOut","FocusPrev","GeometryChanged","GrabCursor","Id","KeyDown","KeyUp","MouseCaptureEvent","MouseCaptureOutEvent","MouseDoubleClick","MouseDown","MouseEnter","MouseLeave","MouseMove","MouseOut","MouseOver","MouseScroll","MouseTripleClick","MouseUp","Press","PressDown","Redraw","Relayout","ReloadStyles","Restyle","SetAlwaysOnTop","SetCursor","SetCursorPosition","SetDecorations","SetMaxSize","SetMaximized","SetMinSize","SetMinimized","SetPosition","SetResizable","SetSize","SetTitle","SetVisible","ThemeChanged","WindowClose","WindowEvent","WindowModifiers","always_on_top","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","decorations","fmt","fmt","from","from","from","icon","inner_size","into","into","max_inner_size","maximized","min_inner_size","minimized","position","resizable","title","to_owned","to_owned","transparent","try_from","try_from","try_into","try_into","type_id","type_id","visible","vsync","mouse","mouse"],"q":[[0,"vizia_core"],[20,"vizia_core::binding"],[254,"vizia_core::context"],[583,"vizia_core::environment"],[656,"vizia_core::environment::environment_derived_lenses"],[731,"vizia_core::environment::theme_derived_lenses"],[785,"vizia_core::events"],[882,"vizia_core::fonts"],[886,"vizia_core::icons"],[1150,"vizia_core::image"],[1883,"vizia_core::image::buffer"],[2005,"vizia_core::image::codecs"],[2006,"vizia_core::image::codecs::png"],[2098,"vizia_core::image::error"],[2268,"vizia_core::image::error::LimitErrorKind"],[2270,"vizia_core::image::flat"],[2409,"vizia_core::image::imageops"],[2491,"vizia_core::image::imageops::colorops"],[2511,"vizia_core::image::io"],[2575,"vizia_core::image::math"],[2595,"vizia_core::input"],[3304,"vizia_core::layout"],[3440,"vizia_core::layout::bounds"],[3490,"vizia_core::localization"],[3514,"vizia_core::model"],[3518,"vizia_core::modifiers"],[3798,"vizia_core::modifiers::tooltip_model_derived_lenses"],[3837,"vizia_core::resource"],[3854,"vizia_core::style"],[5244,"vizia_core::style::BackgroundSize"],[5246,"vizia_core::style::LineDirection"],[5248,"vizia_core::util"],[5265,"vizia_core::vg"],[6068,"vizia_core::vg::ImageFilter"],[6069,"vizia_core::vg::img"],[6253,"vizia_core::vg::img::buffer"],[6263,"vizia_core::vg::img::codecs"],[6264,"vizia_core::vg::img::codecs::png"],[6281,"vizia_core::vg::img::error"],[6314,"vizia_core::vg::img::error::LimitErrorKind"],[6316,"vizia_core::vg::img::flat"],[6340,"vizia_core::vg::img::imageops"],[6394,"vizia_core::vg::img::imageops::colorops"],[6414,"vizia_core::vg::img::io"],[6420,"vizia_core::vg::img::math"],[6425,"vizia_core::vg::imgref"],[6600,"vizia_core::vg::renderer"],[6737,"vizia_core::vg::renderer::CommandType"],[6751,"vizia_core::vg::rgb"],[6954,"vizia_core::vg::rgb::alt"],[7159,"vizia_core::view"],[7248,"vizia_core::views"],[8052,"vizia_core::views::combo_box_derived_lenses"],[8214,"vizia_core::views::menu_bar_derived_lenses"],[8253,"vizia_core::views::menu_button_derived_lenses"],[8271,"vizia_core::views::normalized_map"],[8418,"vizia_core::views::normalized_map::FrequencyDisplayMode"],[8420,"vizia_core::views::popup_data_derived_lenses"],[8462,"vizia_core::views::submenu_derived_lenses"],[8522,"vizia_core::views::virtual_list_derived_lenses"],[8684,"vizia_core::window"],[8771,"vizia_core::window::WindowEvent"],[8773,"core::clone"],[8774,"core::default"],[8775,"core::fmt"],[8776,"core::fmt"],[8777,"core::hash"],[8778,"core::hash"],[8779,"core::result"],[8780,"core::any"],[8781,"core::ops::function"],[8782,"core::convert"],[8783,"core::time"],[8784,"unic_langid_impl"],[8785,"alloc::string"],[8786,"alloc::vec"],[8787,"cosmic_text::attrs"],[8788,"core::any"],[8789,"alloc::string"],[8790,"alloc::boxed"],[8791,"vizia_window::window_description"],[8792,"accesskit"],[8793,"instant::native"],[8794,"core::convert"],[8795,"core::ops::deref"],[8796,"core::convert"],[8797,"core::cmp"],[8798,"core::fmt"],[8799,"std::path"],[8800,"core::ops::index"],[8801,"core::ops::index"],[8802,"std::io"],[8803,"core::cmp"],[8804,"std::io::buffered::bufreader"],[8805,"core::marker"],[8806,"vizia_input::chord"],[8807,"core::iter::traits::collect"],[8808,"vizia_style::values::stretch"],[8809,"vizia_style::values::keywords::auto"],[8810,"vizia_style::values::basic::percentage"],[8811,"vizia_style::values::length::pixels"],[8812,"bitflags::iter"],[8813,"bitflags::iter"],[8814,"vizia_style::error"],[8815,"cssparser::parser"],[8816,"vizia_style::values::gradient"],[8817,"vizia_style::values::rect"],[8818,"vizia_style::values::border::border_radius"],[8819,"vizia_style::values::calc"],[8820,"cssparser::color"],[8821,"cssparser::color"],[8822,"vizia_style::values::position"],[8823,"vizia_style::values::border::border_width_value"],[8824,"vizia_style::values::number_or_percentage"],[8825,"vizia_style::values::easing"],[8826,"vizia_style::traits"],[8827,"std::path"],[8828,"femtovg::image"],[8829,"alloc::ffi::c_str"],[8830,"femtovg::geometry"],[8831,"femtovg::image"],[8832,"femtovg::path"],[8833,"core::marker"],[8834,"core::slice::iter"],[8835,"core::slice::iter"],[8836,"core::ops::arith"],[8837,"core::cmp"],[8838,"core::convert"],[8839,"vizia_window::window_description"]],"d":["Data binding provides a way to link views to model data so …","Context types for retained state, used during view …","A model for system specific state which can be accessed by …","Events for communicating state change to views and models.","","A collection of codepoints for built-in icons.","Contains types and functions used for loading and …","","Types used for handling input events such as mouse and …","Vizia uses morphorm for layout.","Provides types for adapting an application to a particular …","Models are used to store application data and can be bound …","Methods on views for changing their properties or for …","Resource management for fonts, themes, images, and …","Styling determines the appearance of a view.","","Contains types and functions used for custom drawing …","Views are used to visually present model data and to act …","Built-in views provided by vizia.","Window management and system events.","","A view with a binding which rebuilds its contents when the …","A trait for fast comparisons of data. Implemented by any …","","","A Lens allows the construction of a reference to a piece …","Helpers for constructing more complex <code>Lens</code>es.","","","","","","","A trait which allows passing a value or a lens to a view …","","","","","","<code>Lens</code> composed of two lenses joined together","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Retrieve a copy of the lensed data from context. This will …","Retrieve a copy of the lensed data from context. This will …","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Creates a new binding view.","","","","","","","","","","","","Used to construct a lens to some data contained within …","Used to construct a lens to some data contained within …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A context used for configuring the accessibility features …","Wrapper around an accesskit node builder, a node id, and a …","","The main storage and control object for a Vizia …","A bundle of data representing a snapshot of the context …","A trait for any Context-like object that lets you access …","A context used when drawing.","","A context used when handling events.","The event loop has been closed; the application is exiting.","","","","Errors that might occur when emitting an event via a …","A context used when loading images.","Trait for querying properties of the tree from a context.","The current runtime does not support proxying events.","","Adds a child accessibility node.","","Adds a global listener to the application.","Add a listener to an entity.","Add a listener to an entity.","","Adds a timer to the application.","Adds a timer to the application.","","","","Returns the background color of the view.","","","Returns the border radius for the bottom-left corner of …","Returns the border corner shape for the top-left corner of …","Returns the border radius for the bottom-right corner of …","Returns the border corner shape for the top-left corner of …","","Returns the border radius for the top-left corner of the …","Returns the border corner shape for the top-left corner of …","Returns the border radius for the top-right corner of the …","Returns the border corner shape for the top-left corner of …","Returns the border width of the current view in physical …","Returns the border width of the current view in physical …","","","","","","","","","","","","","","","","","Returns the bounds of the current view.","Returns the bounds of the current view.","Returns the bounds of the current view.","","Get the vector path of the current view.","","Cancel a scheduled event before it is sent.","","","Capture mouse input for the current view.","","Returns the child-bottom space of the current view.","Returns the child-left space of the current view.","Returns the child-right space of the current view.","Returns the child-top space of the current view.","Returns the bounding box of the clip region of the current …","Returns the clip bounds of the current view.","","","Returns the Entity id of the current view.","The “current” entity, generally the entity which is …","","Get model/view data from the context. Returns <code>None</code> if the …","","","","","Returns the lookup pattern to pick the default font.","Returns the display of the current view.","Draw backdrop filters for the current view.","Draw background color or background image (including …","Draw the border of the current view.","Draw inset box shadows for the current view.","Draw the outline of the current view.","Draw non-inset box shadows for the current view.","Draw any text for the current view.","","Draw text caret for the current view.","Draw the selection box for the text of the current view.","Send an event containing the provided message up the tree …","","","","Send a custom event with custom origin and propagation …","","","Send an event containing the provided message directly to …","","","","Returns a reference to the Environment model.","Returns a reference to the Environment model.","","Returns the id of the first_child of the current view.","","","","","Sets application focus to the current view using the …","Sets application focus to the current entity using the …","Moves the keyboard focus to the next navigable view.","","Sets application focus to the current view with the …","Sets application focus to the current entity with the …","Returns the currently focused view.","","Returns the font-size of the current view in physical …","Returns the font-size of the current view in physical …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get the contents of the system clipboard.","","","","Returns the currently hovered view.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns true if the current view is active.","Returns true if the current view is currently animating …","Returns true if the current view is checked.","Returns true if the cursor icon is locked.","Returns true if the current view is disabled.","","Returns true if the current view is focused.","Returns true if the current view is being hovered.","Returns true if the mouse cursor is over the current view.","","Returns true if the view is in a read-only state.","","Sets the view, by id name, which labels the current view …","","","","","Prevents the cursor icon from changing until the lock is …","Function to convert logical points to physical pixels.","Converts logical points to physical pixels.","","Returns a reference to the keyboard modifiers state.","Returns a reference to the keyboard modifiers state.","","Modifies the state of an existing timer with the provided …","Modifies the state of an existing timer with the provided …","Returns a reference to the mouse state.","Returns a reference to the mouse state.","Marks the current view as needing to be redrawn.","Mark the application as needing to rerun the draw method","Marks the current view as needing a layout computation.","Mark the application as needing to rerun layout …","","Mark the application as needing to recompute view styles","","","Creates a new context.","","","","Sets a numeric value used for accessibility for the …","Returns the opacity of the current view.","Returns the outline color of the current view.","Returns the outline offset of the current view in physcial …","Returns the outline width of the current view in physical …","Returns the id of the parent of the current view.","","Function to convert physical pixels to logical points.","Convert physical pixels to logical points.","Trigger an animation with the given id to play on the …","Trigger an animation with the given id to play on a target …","","Release mouse input capture for the current view.","Reloads the stylesheets linked to the application.","Remove all user themes from the application.","Returns the Entity id associated with the given identifier.","Finds the entity that identifier identifies","Returns the scale factor.","Returns the scale factor.","Returns the scale factor of the display.","Send an event containing the provided message up the tree …","","","Send a custom event with custom origin and propagation …","","","Send an event containing the provided message directly to …","","","","","Set the active state for the current view.","Sets the backdrop filter of the current view.","","","","Sets the accessibility bounds of the node. This is not the …","","","","Sets the checked state of the current view.","Sets the clip path of the current view.","Set the contents of the system clipboard.","Sets the accessibility default action verb of the view.","Sets the global default font for the application.","Sets the display type of the current view.","","Sets whether the view should be explicitely hidden from …","Sets the hover state of the current view.","","","Sets the language used by the application for localization.","Sets the language used by the application for localization.","","Sets the view to be an accessibility live region.","","","Sets the accessibility name of the view.","","","","Sets the opacity of the current view.","Sets the overflow type on the horizontal axis of the …","Sets the overflow type on the vertical axis of the current …","","","","","","Sets the accessibility role of the view.","Sets the role of the node.","Sets the rotation of the current view.","Sets the scale of the current view.","Sets the text of the current view.","Sets the direction of any text within the node.","Sets the specified selection of any text within the node.","Sets the current theme mode.","","Sets the transform of the current view.","Sets the transform origin of the current view.","Sets the translation of the current view.","Change the user scale factor size. A …","Sets the valid state of the current view.","Sets the value of a node.","Sets the visibility of the current view.","Change the window size. A <code>WindowEvent::GeometryChanged</code> …","","Sets the z-index of the current view.","Spawns a thread and provides a ContextProxy for sending …","","","","Starts a timer with the provided timer id.","Starts a timer with the provided timer id.","Stops the timer with the given timer id.","Stops the timer with the given timer id.","","Sets a text value used for accessbility for the current …","Returns whether the current view should have its text …","Returns true if the timer with the provided timer id is …","Returns true if the timer with the provided timer id is …","","","","Toggles the addition/removal of a class name for the …","Returns the 2D transform of the current view.","Returns the transform of the current view.","","","","","","","","","","","","","","","","","","","","","","","","","Releases any cursor icon lock, allowing the cursor icon to …","A scale factor used for uniformly scaling the window …","A scale factor used for uniformly scaling the window …","Returns the visibility of the current view.","","Returns the window’s size in logical pixels, before …","The window’s size in logical pixels, before …","","Makes the above black magic more explicit","","builtin vizia themes","","A model for system specific state which can be accessed by …","Events for setting the state in the Environment.","","Set the locale used for the whole application.","Set the default theme mode.","System theme, if we choose this as our theme vizia will …","","","Alternate between dark and light theme modes.","Reset the locale to use the system provided locale.","The current application theme","","","","","","","","","","","","","","","","","","","Derived lenses for <code>Environment</code>.","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The locale used for localization.","","The current system theme","Current application and system theme.","Derived lenses for <code>Theme</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lens for the field <code>caret_timer</code> on <code>Environment</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Lens for the field <code>locale</code> on <code>Environment</code>.","Creates a new lens for the field <code>locale</code> on <code>Environment</code>. …","Creates a new lens for the field <code>theme</code> on <code>Environment</code>. Use …","Creates a new lens for the field <code>caret_timer</code> on <code>Environment</code>…","","Lens for the whole <code>Environment</code> struct.","","Lens for the field <code>theme</code> on <code>Environment</code>.","","","","","","","","","","","","","","","","","","","","","Lens for the field <code>app_theme</code> on <code>Theme</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new lens for the field <code>app_theme</code> on <code>Theme</code>. Use …","Creates a new lens for the field <code>sys_theme</code> on <code>Theme</code>. Use …","","Lens for the whole <code>Theme</code> struct.","Lens for the field <code>sys_theme</code> on <code>Theme</code>.","","","","","","","","","","","","","","","","Events propagate directly to the target entity and to no …","A wrapper around a message, providing metadata on how the …","The metadata of an <code>Event</code>.","Determines how an event propagates through the tree.","","","Events propagate starting at the target entity and …","","A handle used to cancel a scheduled event before it is …","A handle used to start, stop, and check the running status …","Enum which can be used to determine the reason a timer …","Events propagate up the tree from the target entity from …","","","","","","","","","","","","","","","","","","","","","","","","","","Consumes the event to prevent it from continuing on its …","Consumes the event to prevent it from continuing on its …","","Sets the propagation to directly target the <code>entity</code>.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Tries to downcast the event message to the specified type. …","Creates a new event with a specified message.","Sets the origin of the event.","The entity that produced the event. Entity::null() for OS …","Sets the propagation of the event.","How the event propagates through the tree.","Tries to downcast the event message to the specified type. …","Sets the target of the event.","The entity the event should be sent to (or from in the …ixel is 8-bit alpha","AnimationDecoder trait","An Image in AVIF format.","Pixel contains 8-bit B, G and R channels","Pixel is 8-bit BGR with an alpha channel","An Image in BMP Format","The number of channels of this pixel type.","A string that can help to interpret the meaning each …","This pixel has the format of one of the predefined …","An enumeration over supported color types and bit depths","The maximum value for this type of primitive within the …","The minimum value for this type of primitive within the …","An Image in DDS Format","An error was encountered while decoding.","The delay of a frame relative to the previous one.","A Dynamic Image","Types which are safe to treat as an immutable byte slice …","An error was encountered while encoding.","Contains the error value","An enumeration of color types encountered in image formats.","An Image in farbfeld Format","A flat buffer over a (multi channel) image.","A single animation frame","An implementation dependent iterator, reading the frames …","A trait for manipulating images.","Trait to inspect an image.","An Image in GIF Format","Sendable grayscale + alpha channel image buffer","Sendable grayscale image buffer","An Image in Radiance HDR Format","An Image in ICO Format","Generic image buffer","The trait that all decoders implement","Specialized image decoding not be supported by all formats","The trait all encoders implement","The generic error type for image operations.","An enumeration of supported image formats. Not all formats …","Each pixel in this image is 16-bit Luma","Each pixel in this image is 8-bit Luma","Each pixel in this image is 16-bit Luma with alpha","Each pixel in this image is 8-bit Luma with alpha","An enumeration of supported image formats for encoding.","Result of an image decoding/encoding process","Each pixel in this image is 16-bit Rgb","Each pixel in this image is 32-bit float Rgb","Each pixel in this image is 8-bit Rgb","Each pixel in this image is 16-bit Rgb with alpha","Each pixel in this image is 32-bit float Rgb with alpha","Each pixel in this image is 8-bit Rgb with alpha","An error occurred while interacting with the environment.","An Image in JPEG Format","Pixel is 1-bit luminance","Pixel is 16-bit luminance","Pixel is 16-bit luminance","Pixel is 2-bit luminance","Pixel is 4-bit luminance","Pixel is 8-bit luminance","Pixel is 8-bit luminance","Pixel is 1-bit luminance with an alpha channel","Pixel is 16-bit luminance with an alpha channel","Pixel is 16-bit luminance with an alpha channel","Pixel is 2-bit luminance with an alpha channel","Pixel is 4-bit luminance with an alpha channel","Pixel is 8-bit luminance with an alpha channel","Pixel is 8-bit luminance with an alpha channel","Completing the operation would have required more …","Grayscale colors.","Grayscale colors + alpha channel","Contains the success value","An Image in OpenEXR Format","An error was encountered in input arguments.","A generalized pixel.","The type of pixel.","The pixel with an associated <code>ColorType</code>. Not all possible …","Immutable pixel iterator","An Image in PNG Format","An Image in PNG Format","An Image in general PNM Format","The type of each channel in a pixel. For example, this can …","Represents the progress of an image operation.","An Image in QOI format.","The type of reader produced by <code>into_reader</code>.","RGB colors.","Pixel contains 1-bit R, G and B channels","Pixel is 16-bit RGB","Pixel contains 16-bit R, G and B channels","Pixel contains 2-bit R, G and B channels","Pixel is 32-bit float RGB","Pixel is 32-bit float RGB","An image buffer for 32-bit float RGB pixels, where the …","Pixel contains 4-bit R, G and B channels","Pixel contains 8-bit R, G and B channels","Pixel contains 8-bit R, G and B channels","Sendable Rgb image buffer","RGB colors + alpha channel","Pixel is 1-bit RGB with an alpha channel","Pixel is 16-bit RGBA","Pixel is 16-bit RGB with an alpha channel","Pixel is 2-bit RGB with an alpha channel","Pixel is 32-bit float RGBA","Pixel is 32-bit float RGBA","An image buffer for 32-bit float RGBA pixels, where the …","Pixel is 4-bit RGB with an alpha channel","Pixel is 8-bit RGB with an alpha channel","Pixel is 8-bit RGB with an alpha channel","Sendable Rgb + alpha channel image buffer","A View into another image","The scalar type that is used to store each channel in this …","An Image in TGA Format","An Image in TIFF Format","Pixel is of unknown color type with the specified bits per …","An operation can not be completed by the chosen …","A value for signalling an error: An unsupported format was …","An Image in WEBP Format","Adjust the contrast of this image. <code>contrast</code> is the amount …","Apply the function <code>f</code> to each channel of this pixel.","","","","","Apply the function <code>f</code> to each channel of this pixel and …","","","","","Apply the function <code>f</code> to each channel except the alpha …","","","","","Apply the function <code>f</code> to each channel except the alpha …","","","","","","","","","","","","","Get the bytes of this value.","Return this image’s pixels as a native endian byte slice.","Return a view on the raw sample buffer.","Return a view on the raw sample buffer for 32bit per …","Return a mutable view on the raw sample buffer.","Return a view on the raw sample buffer for 16 bit per …","Return a view on the raw sample buffer for 8 bit per …","Return a reference to an 16bit Grayscale image","Return a reference to an 8bit Grayscale image","Return a reference to an 16bit Grayscale image with an …","Return a reference to an 8bit Grayscale image with an …","Get a mutable reference based version.","Return a mutable reference to an 16bit Grayscale image","Return a mutable reference to an 8bit Grayscale image","Return a mutable reference to an 16bit Grayscale image …","Return a mutable reference to an 8bit Grayscale image with …","Return a mutable reference to an 16bit RGB image","Return a mutable reference to an 32bit RGB image","Return a mutable reference to an 8bit RGB image","Return a mutable reference to an 16bit RGBA image","Return a mutable reference to an 16bit RGBA image","Return a mutable reference to an 8bit RGBA image","View the samples as a slice.","Returns the underlying raw buffer","Get a reference based version.","Return a reference to an 16bit RGB image","Return a reference to an 32bit RGB image","Return a reference to an 8bit RGB image","Return a reference to an 16bit RGBA image","Return a reference to an 32bit RGBA image","Return a reference to an 8bit RGBA image","View the samples as a slice.","View this buffer as an image over some type of pixel.","Interpret this buffer as a mutable image.","View this buffer but keep mutability at a sample level.","Returns the number of bits contained in a pixel of …","Blend the color of a given pixel into ourself, taking into …","","","","","Put a pixel at location (x, y), taking into account alpha …","Put a pixel at location (x, y), taking into account alpha …","","Performs a Gaussian blur on this image. <code>sigma</code> is a measure …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bounding rectangle of this image.","Tuple of bounds in the order of coordinate inputs.","","","Brighten the pixels of this image. <code>value</code> is the amount to …","Iterators and other auxiliary structure for the <code>ImageBuffer</code>…","Returns the image buffer","Returns a mutable image buffer","Returns the number of bytes contained in a pixel of …","Return if the ImageFormat can be decoded by the lib.","Return if the ImageFormat can be encoded by the lib.","Change the coordinates of this subimage.","Returns the number of color channels that make up this …","Get the number of channels for colors of this type.","Returns the components as a slice.","","","","","Returns the channels of this pixel as a 4 tuple. If the …","","","","","Returns the components as a mutable slice","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Encoding and decoding for various image file formats.","Steps through the iterator from the current frame until …","Return this image’s color type.","Supplementary color information.","Returns the color type of the image data produced by this …","Examples","Copies all of the pixels from another image into this …","Copies all of the pixels from one part of this image to …","","Return a cut-out of this image delimited by the bounding …","Return a cut-out of this image delimited by the bounding …","A measure of completed decoding.","","","Delay of this frame","","","","","Returns a tuple containing the width and height of the …","The width and height of this image.","","The width and height of this image.","","Enumerates over the pixels of the image. The iterator …","Enumerates over the pixels of the image. The iterator …","Enumerates over the rows of the image. The iterator yields …","Enumerates over the rows of the image. The iterator yields …","","","","","","","","","","","","","","","","","","","","","","","","","Contains detailed error representation.","Expands a color palette by re-using the existing buffer. …","Return a list of applicable extensions for this format.","Get the dimensions <code>(channels, width, height)</code>.","Filters this image with the specified 3x3 kernel.","Check if a buffer of length <code>len</code> is large enough.","Image representations for ffi.","Flip this image horizontally","Flip this image vertically","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Construct a pixel from the 4 channels a, b, c and d. If …","","","","","Decodes an encoded image into a dynamic image.","Return the image format specified by a path’s file …","Constructs a new ImageBuffer by repeated application of …","Return the image format specified by a MIME type.","Create a delay from a ratio of milliseconds.","Constructs a new frame","Return the image format specified by the path’s file …","Constructs a new ImageBuffer by copying a pixel","Constructs a buffer from a generic container (for example …","Convert from a duration, clamped between 0 and an …","Returns a view into a slice.","","","","","Returns mutable view into a mutable slice.","","","","","Creates an image buffer out of an existing buffer. Returns …","Get a mutable reference to a single sample.","Returns the pixel located at (x, y). Indexed from top left.","","Gets a reference to the pixel at location <code>(x, y)</code>","","Gets a reference to the pixel at location <code>(x, y)</code> or …","Gets a reference to the mutable pixel at location <code>(x, y)</code>. …","Gets a reference to the mutable pixel at location <code>(x, y)</code>","","Do not use is function: It is unimplemented!","Gets a reference to the mutable pixel at location <code>(x, y)</code> …","Get a reference to a single sample.","Return a grayscale version of this image. Returns <code>Luma</code> …","Guess image format from memory block","If there are any samples aliasing each other.","Returns if there is an alpha channel.","Returns false if the color scheme is grayscale, true …","","","","","","","","","The height of this image.","The height of this image.","Returns the height of the underlying image","Hue rotate the supplied image. <code>value</code> is the degrees to …","Returns the ICC color profile embedded in the image","Read a tuple containing the (width, height) of the image …","Mutable portion of the buffer that holds sample values.","Return the portion of the buffer that holds sample values.","Image Processing Functions","Returns true if this x, y coordinate is contained inside …","Check that the pixel and the channel index are in bounds.","Get an index provided it is inbouds.","Resolve the index of a particular sample.","Return a reference to a single sample at specified …","","","","","","Get the theoretical position of sample (x, y, channel).","Return a mutable reference to a single sample at specified …","","","","","","Get a reference to the underlying image.","Get a mutable reference to the underlying image.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the image buffer","Return this image’s pixels as a byte vector. If the …","Return the raw sample buffer with its stride an dimension …","Consume the decoder producing a series of frames.","","","Consume the image and returns a Luma image.","Consume the image and returns a Luma image.","Consume the image and returns a LumaA image.","Consume the image and returns a LumaA image.","Returns the underlying raw buffer","Returns a reader that can be used to obtain the bytes of …","Consume the image and returns a RGB image.","Consume the image and returns a RGB image.","Consume the image and returns a RGB image.","Consume the image and returns a RGBA image.","Consume the image and returns a RGBA image.","Consume the image and returns a RGBA image.","Consumes the image buffer and returns the underlying data …","Invert this pixel","","","","","Invert the colors of this image. This method operates …","Input and output of images.","Check if a buffer fulfills the requirements of a normal …","A <code>repr(C)</code> description of the layout of buffer samples.","Returns the x offset","Create a new image from a Reader.","Create a new image from a byte slice","Create a new image from a byte slice","Apply the function <code>f</code> to each channel of this pixel.","","","","","Apply the function <code>f</code> to each channel of this pixel and …","","","","","Apply the function <code>f</code> to each channel except the alpha …","","","","","Apply the function <code>f</code> to each channel except the alpha …","Mathematical helper functions and types.","Get the minimum length of a buffer such that all in-bounds …","Creates a new <code>Frames</code> from an implementation specific …","Constructs a new frame without any delay.","Creates a new image buffer based on a <code>Vec&lt;P::Subpixel&gt;</code>.","Construct a new subimage The coordinates set the position …","Creates a dynamic image backed by a buffer of gray pixels.","Creates a dynamic image backed by a buffer of gray pixels.","Creates a dynamic image backed by a buffer of gray pixels …","Creates a dynamic image backed by a buffer of gray pixels …","Creates a dynamic image backed by a buffer of RGB pixels.","Creates a dynamic image backed by a buffer of RGB pixels.","Creates a dynamic image backed by a buffer of RGB pixels.","Creates a dynamic image backed by a buffer of RGBA pixels.","Creates a dynamic image backed by a buffer of RGBA pixels.","Creates a dynamic image backed by a buffer of RGBA pixels.","","","The numerator and denominator of the delay in milliseconds.","Open the image located at the path specified. The image’…","Returns the color type of the image file before decoding","","Returns an Iterator over the pixels of this image. The …","Returns an iterator over the pixels of this image. The …","Returns an iterator over the mutable pixels of this image.","Put a pixel at location (x, y). Indexed from top left.","","Puts a pixel at location <code>(x, y)</code>","","Returns all the bytes in the image.","Same as <code>read_image</code> but periodically calls the provided …","Decode a rectangular section of the image; see …","Decode a rectangular section of the image, periodically …","Calculate a measure for remaining decoding work.","Resize this image using the specified filter algorithm. …","Resize this image using the specified filter algorithm. …","Resize this image using the specified filter algorithm. …","Rotate this image 180 degrees clockwise.","Rotate this image 270 degrees clockwise.","Rotate this image 90 degrees clockwise.","Returns an iterator over the rows of this image.","Returns an iterator over the mutable rows of this image.","Get the format of the buffer when viewed as a matrix of …","Underlying linear container holding sample values.","Saves the buffer to a file at the path specified.","Saves the buffer to a file at the path specified.","Saves the supplied buffer to a file at the path specified.","Saves the supplied buffer to a file at the path specified …","Saves the buffer to a file at the specified path in the …","Saves the buffer to a file at the specified path in the …","Returns the minimum number of bytes that can be …","Set decoding limits for this decoder. See <code>Limits</code> for the …","Shrink the image to the minimum of current and given …","","Get the strides for indexing matrix-like <code>[(c, w, h)]</code>.","Returns a mutable subimage that is a view into this image. …","Create a mutable sub-view of the image.","Scale this image down to fit within a specific size. …","Scale this image down to a specific size. Returns a new …","Return a copy of this image’s pixels as a byte vector. …","Convert this subimage to an ImageBuffer","Convert this pixel to luma","","","","","Returns a copy of this image as a Luma image.","Returns a copy of this image as a Luma image.","Returns a copy of this image as a Luma image.","Convert this pixel to luma with an alpha channel","","","","","Returns a copy of this image as a LumaA image.","Returns a copy of this image as a LumaA image.","Returns a copy of this image as a LumaA image.","Return the MIME type for this image format or “…","","","","","","","","","","","","","","","","","Convert this pixel to RGB","","","","","Returns a copy of this image as an RGB image.","Returns a copy of this image as an RGB image.","Returns a copy of this image as an RGB image.","Convert this pixel to RGB with an alpha channel","","","","","Returns a copy of this image as an RGBA image.","Returns a copy of this image as an RGBA image.","Returns a copy of this image as an RGBA image.","","","Copy the data into an owned vector.","Returns the y offset","A measure of all necessary decoding work.","Returns the total number of bytes in the decoded image.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Move the data into an image buffer.","","","","","","","","","","","","","","","","","","","Returns the pixel located at (x, y). Indexed from top left.","Returns the pixel located at (x, y), ignoring bounds …","Puts a pixel at location (x, y). Indexed from top left.","Puts a pixel at location (x, y), ignoring bounds checking.","Performs an unsharpen mask on this image. <code>sigma</code> is the …","Returns a subimage that is an immutable view into this …","Create a sub-view of the image.","The width of this image.","The width of this image.","Returns the width of the underlying image","Create a monocolor image from a single pixel.","Writes the supplied buffer to a writer in the specified …","Writes all the bytes in an image to the encoder.","Writes the buffer to a writer in the specified format.","Encode this image and write it to <code>w</code>.","Writes the buffer with the given encoder.","Encode this image with the provided encoder.","Provides color conversions for whole image buffers.","Enumerate the pixels of an image.","Enumerate the pixels of an image.","Enumerate the rows of an image.","Enumerate the rows of an image.","Iterate over pixel refs.","Iterate over mutable pixel refs.","Iterate over rows of an image","Iterate over mutable rows of an image","","","","","","","","","","","","","","","","","","","","","","","","","Converts <code>self</code> to a buffer of type T","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decoding and Encoding of PNG Images","Uses a heuristic to select one of the preceding filters …","An <code>AnimationDecoder</code> adapter of <code>PngDecoder</code>.","Filters based on the average of left and right neighbor …","High compression level","Compression level of a PNG encoder. The default setting is …","Default compression level","Fast, minimal compression","Filter algorithms used to process image data to improve …","Huffman coding compression","No processing done, best used for low bit depth grayscale …","Algorithm that takes into account the left, upper left, …","PNG decoder","PNG encoder","Png Reader","Run-length encoding compression","Filters based on previous pixel in the same scanline","Filters based on the scanline above","Turn this into an iterator over the animation frames.","","","","","","","","","","","","","","","","","","","","","","","Encodes the image <code>data</code> that has dimensions <code>width</code> and <code>height</code>…","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns if the image contains an animation.","Creates a new decoder that decodes from the stream <code>r</code>","Create a new encoder that writes its output to <code>w</code>","Create a new encoder that writes its output to <code>w</code> with …","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new decoder that decodes from the stream <code>r</code> with …","Write a PNG image with the specified width, height, and …","The required color type can not be handled.","An error was encountered while decoding.","An error was encountered while decoding an image.","The resulting image exceed dimension limits in either …","The dimensions passed are wrong.","An error was encountered while encoding.","An error was encountered while encoding an image.","Contains the error value","The format is known exactly.","Repeated an operation for which error that could not be …","An image format is not supported.","A string describing the parameter. This is discouraged and …","Some feature specified by string. This is discouraged and …","The generic error type for image operations.","A best effort representation for image formats.","Result of an image decoding/encoding process","The operation would have performed an allocation larger …","An error occurred while interacting with the environment.","Completing the operation would have required more …","Indicates the limit that prevented an operation from …","Completing the operation would have required more …","The format can be identified by a name.","The end of the image has been reached.","Contains the success value","An error was encountered in input arguments.","An error was encountered in inputs arguments.","Details how a parameter is malformed.","A common path extension for the format is known.","The format is not known or could not be determined.","An operation can not be completed by the chosen …","The specified strict limits are not supported for this …","The implementation for an operation was not provided.","Details what feature is not supported.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the image format associated with this error.","Return the image format associated with this error.","Returns the image format associated with this error.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Create an <code>UnsupportedError</code> for an image with details on …","Create an <code>EncodingError</code> for an image format.","Create a <code>DecodingError</code> for an image format.","Construct a <code>ParameterError</code> directly from a corresponding …","Construct a generic <code>LimitError</code> directly from a …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the corresponding <code>UnsupportedErrorKind</code> of the …","Returns the corresponding <code>ParameterErrorKind</code> of the error.","Returns the corresponding <code>LimitErrorKind</code> of the error.","Create an <code>EncodingError</code> that stems from an arbitrary error …","Create a <code>DecodingError</code> that stems from an arbitrary error …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The given limits","The supported strict limits","The color format did not match the channel count.","The samples are in column-major form and all samples are …","Denotes invalid flat sample buffers when trying to convert …","A flat buffer over a (multi channel) image.","All samples are packed.","Different normal forms of buffers.","The represented image can not use this representation.","At least pixels are packed.","The samples are in row-major form and all samples are …","A ffi compatible description of a sample buffer.","The represented image was too large.","No pixel aliases another.","A flat buffer that can be used as an image view.","A mutable owning version of a flat buffer.","Deprecated - ChannelCountMismatch is used instead","","","","","","","","","","","","","","","Tuple of bounds in the order of coordinate inputs.","","","Add this to an index to get to the sample in the next …","The number of channels in the color representation of the …","","","","","","","","","","","Supplementary color information.","Describe a column-major image packed in all directions.","","","","","","","","","Get the dimensions <code>(channels, width, height)</code>.","Check if a buffer of length <code>len</code> is large enough.","Get a reference on the inner sample descriptor.","Get a reference on the sample buffer descriptor.","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Get a mutable reference to a selected subpixel if it is …","Get a mutable reference to a selected sample.","","","","Get a reference to a selected subpixel if it is in-bounds.","Get a reference to a selected subpixel.","If there are any samples aliasing each other.","","","","The height of the represented image.","Add this to an index to get to the next sample in …","Return the mutable portion of the buffer that holds sample …","Return the mutable buffer that holds sample values.","Return the portion of the buffer that holds sample values.","Return the portion of the buffer that holds sample values.","Check that the pixel and the channel index are in bounds.","","","Get an index provided it is inbouds.","Resolve the index of a particular sample.","Get the theoretical position of sample (channel, x, y).","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Take out the sample buffer.","Take out the sample buffer.","Check if a buffer fulfills the requirements of a normal …","A <code>repr(C)</code> description of the layout of buffer samples.","Get the minimum length of a buffer such that all in-bounds …","Get the minimum length of a buffer such that all in-bounds …","Get the minimum length of a buffer such that all in-bounds …","Compares the logical preconditions.","","Describe a row-major image packed in all directions.","Get a reference on the inner buffer.","Get a reference on the inner buffer.","Underlying linear container holding sample values.","Shrink the image to the minimum of current and given …","Shrink the inner image.","Shrink the inner image.","Get the strides for indexing matrix-like <code>[(c, w, h)]</code>.","","","","","","","","","","","","","","","","","","Try to convert this into an image with mutable pixels.","","","","","","The width of the represented image.","Add this to an index to get to the next sample in …","A bi-level color map","Cubic Filter","The color type on which the map operates on","A color map","Available Sampling Filters.","Gaussian Filter","Lanczos with window 3","Nearest Neighbor","Linear Filter","","Performs a Gaussian blur on the supplied image. <code>sigma</code> is a …","","","","","Brighten the supplied image. <code>value</code> is the amount to …","","","","","Functions for altering and converting the color of …","Adjust the contrast of the supplied image. <code>contrast</code> is the …","Return a mutable view into an image The coordinates set …","Return an immutable view into an image The coordinates set …","Reduces the colors of the image using the supplied …","","","Perform a 3x3 box filter on the supplied image. <code>kernel</code> is …","Flip an image horizontally","Flip an image horizontally and put the result into the …","Flip an image horizontally in place.","Flip an image vertically","Flip an image vertically and put the result into the …","Flip an image vertically in place.","","Returns the argument unchanged.","Returns the argument unchanged.","Convert the supplied image to grayscale. Alpha channel is …","Convert the supplied image to grayscale. Alpha channel is …","Convert the supplied image to a grayscale image with the …","Convert the supplied image to a grayscale image with the …","Determine if this implementation of ColorMap overrides the …","Indicate NeuQuant implements <code>lookup</code>.","Fill the image with a linear horizontal gradient","Hue rotate the supplied image. <code>value</code> is the degrees to …","Reduces the colors using the supplied <code>color_map</code> and …","Returns the index of the closest match of <code>color</code> in the …","","Linearly sample from an image using coordinates in [0, w-1]…","Sample from an image using coordinates in [0, w-1] and [0, …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Invert each pixel within the supplied image. This function …","Looks up color by index in the color map.  If <code>idx</code> is out …","","Maps <code>color</code> to the closest color in the color map.","","Overlay an image at a given coordinate (x, y)","Calculate the region that can be copied from top to bottom.","Replace the contents of an image at a given coordinate (x, …","Resize the supplied image to the specified dimensions. …","Rotate an image 180 degrees clockwise.","Rotate an image 180 degrees clockwise and put the result …","Rotate an image 180 degrees clockwise in place.","Rotate an image 270 degrees clockwise.","Rotate an image 270 degrees clockwise and put the result …","Rotate an image 90 degrees clockwise.","Rotate an image 90 degrees clockwise and put the result …","Linearly sample from an image using coordinates in [0, 1].","Sample from an image using coordinates in [0, 1], taking …","Resize the supplied image to the specific dimensions.","Tile an image by repeating it multiple times","","","","","","","","","Performs an unsharpen mask on the supplied image. <code>sigma</code> is …","Fill the image with a linear vertical gradient","A bi-level color map","The color type on which the map operates on","A color map","Brighten the supplied image. <code>value</code> is the amount to …","Brighten the supplied image in place. <code>value</code> is the amount …","Adjust the contrast of the supplied image. <code>contrast</code> is the …","Adjust the contrast of the supplied image in place. …","Reduces the colors of the image using the supplied …","Convert the supplied image to grayscale. Alpha channel is …","Convert the supplied image to grayscale. Alpha channel is …","Convert the supplied image to a grayscale image with the …","Convert the supplied image to a grayscale image with the …","Determine if this implementation of ColorMap overrides the …","Hue rotate the supplied image. <code>value</code> is the degrees to …","Hue rotate the supplied image in place. <code>value</code> is the …","Reduces the colors using the supplied <code>color_map</code> and …","Returns the index of the closest match of <code>color</code> in the …","Invert each pixel within the supplied image. This function …","Looks up color by index in the color map.  If <code>idx</code> is out …","Maps <code>color</code> to the closest color in the color map.","Set of supported strict limits for a decoder.","Resource limits for decoding.","A multi-format image reader.","","","","","","","","","This function checks the <code>max_image_width</code> and …","This function checks that all currently set strict limits …","Remove the current information on the image format.","","","","","Read the image (replaces <code>load</code>).","","","","","","","","","Get the currently determined format.","This function increases the <code>max_alloc</code> limit with amount. …","This function acts identically to [<code>free</code>], but takes a <code>usize</code>…","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Read the image dimensions.","Unwrap the reader.","Set a custom set of decoding limits.","The maximum allowed sum of allocations allocated by the …","The maximum allowed image height. This limit is strict. …","The maximum allowed image width. This limit is strict. The …","Create a new image reader without a preset format.","Disable all decoding limits.","Disable all limits.","Open a file to read, format will be guessed from path.","This function checks that the current limit allows for …","This function acts identically to [<code>reserve</code>], but takes a …","Supply the format as which to interpret the read image.","","","","","","","","","","","","Construct a reader with specified format.","Make a format guess based on the content, replacing it on …","A Rectangle defined by its top left corner, width and …","","","","","","","","","Returns the argument unchanged.","","The rectangle’s height.","Calls <code>U::from(self)</code>.","","","","","The rectangle’s width.","The x coordinate of the top left corner.","The y coordinate of the top left corner.","","Switch the input mode on an external AVR (audio/video …","Toggle the power on an external AVR (audio/video …","","The Accept (Commit, OK) key. Accept current option or …","Found on Sun’s USB keyboard.","The Again key, to redo or repeat an action.","The All Candidates key, to initate the multi-candidate …","The Alphanumeric key.","The Alt (Alternative) key. This key enables the alternate …","The Alternate Graphics (AltGr or AltGraph) key. This key …","Alt, Option or ⌥.","Alt, Option or ⌥. This is labelled AltGr key on many …","The Application switch key, which provides a list of …","↓","The down arrow key, to navigate or traverse downward. (…","←","The left arrow key, to navigate or traverse leftward. (…","→","The right arrow key, to navigate or traverse rightward. (…","↑","The up arrow key, to navigate or traverse upward. (…","The Attention (Attn) key.","Adjust audio balance leftward. (VK_AUDIO_BALANCE_LEFT)","Adjust audio balance rightward. (VK_AUDIO_BALANCE_RIGHT)","Decrease audio bass boost or cycle down through bass boost …","Toggle bass boost on/off. (APPCOMMAND_BASS_BOOST)","Increase audio bass boost or cycle up through bass boost …","Adjust audio fader towards front. (VK_FADER_FRONT)","Adjust audio fader towards rear. (VK_FADER_REAR)","Advance surround audio mode to next available mode. (…","Decrease treble. (APPCOMMAND_TREBLE_DOWN)","Increase treble. (APPCOMMAND_TREBLE_UP)","","Decrease audio volume. (APPCOMMAND_VOLUME_DOWN, …","","Toggle between muted state and prior volume level. (…","","Increase audio volume. (APPCOMMAND_VOLUME_UP, …","`~ on a US keyboard. This is the 半角/全角/漢字 (…","Used for both the US | (on the 101-key layout) and also …","Backspace or ⌫. Labelled Delete on Apple keyboards.","The Backspace key. This key value is also used for the key …","[{ on a US keyboard.","]} on a US keyboard.","Non-standard code value supported by Chromium.","The Brightness Down key. Typically controls the display …","Non-standard code value supported by Chromium.","The Brightness Up key. Typically controls the display …","Some laptops place this key to the left of the ↑ key.","Navigate to previous content or page in current history. (…","","Open the list of browser favorites. (…","Some laptops place this key to the right of the ↑ key.","Navigate to next content or page in current history. (…","","Go to the user’s preferred home page. (…","","Refresh the current page or content. (…","","Call up the user’s preferred search page. (…","","Stop loading the current page or content. (…","","The Call key. (KEYCODE_CALL)","The Camera key. (KEYCODE_CAMERA)","The Camera focus key. (KEYCODE_FOCUS)","The Cancel key.","CapsLock or ⇪","The Caps Lock (Capital) key. Toggle capital character lock …","Select next (numerically or logically) lower channel. (…","Select next (numerically or logically) higher channel. (…","A key string that corresponds to the character typed by …","Remove the currently selected input.","Close the current document or message (Note: This …","Toggle the display of Closed Captions. (VK_CC, …","Code is the physical position of a key.","The Code Input key, to initiate the Code Input mode to …","General purpose color-coded media function key, as index 0 …","General purpose color-coded media function key, as index 1 …","General purpose color-coded media function key, as index 2 …","General purpose color-coded media function key, as index 3 …","General purpose color-coded media function key, as index 4 …","General purpose color-coded media function key, as index 5 …",",&lt; on a US keyboard.","The Compose key, also known as Multi_key on the X Window …","The application context menu key, which is typically found …","Show the application’s context menu. This key is …","The Control or Ctrl key, to enable control modifier …","Control or ⌃","Control or ⌃","Japanese: 変換 (henkan)","The Convert key, to convert the current input method …","Found on Sun’s USB keyboard.","Copy the current selection. (APPCOMMAND_COPY)","The Cursor Select (Crsel) key.","Found on Sun’s USB keyboard.","Cut the current selection. (APPCOMMAND_CUT)","Select Digital Video Rrecorder. (KEYCODE_DVR)","A dead key combining key. It may be any combining key from …","⌦. The forward delete key. Note that on Apple keyboards, …","The Delete (Del) Key. This key value is also used for the …","0) on a US keyboard.","1! on a US keyboard.","2@ on a US keyboard.","3# on a US keyboard.","4$ on a US keyboard.","5% on a US keyboard.","6^ on a US keyboard.","7&amp; on a US keyboard.","8* on a US keyboard.","9( on a US keyboard.","Adjust brightness of device, by toggling between or …","Swap video sources. (VK_DISPLAY_SWAP)","Non-standard code value supported by Chromium.","The Eisu key. This key may close the IME, but its purpose …","Eject or ⏏. This key is placed in the function section …","Toggle removable media to eject (open) and insert (close) …","Page Down, End or ↘","The End key, used with keyboard entry to go to the end of …","The End Call key. (KEYCODE_ENDCALL)","Enter or ↵. Labelled Return on Apple keyboards.","The Enter or ↵ key, to activate current selection or …","=+ on a US keyboard.","The Erase to End of Field key. This key deletes all …","Esc or ⎋","The Esc key. This key was originally used to initiate an …","The Extend Selection (Exsel) key.","The Execute key.","Exit the current application. (VK_EXIT)","F1","The F1 key, a general purpose function key, as index 1.","F10","The F10 key, a general purpose function key, as index 10.","F11","The F11 key, a general purpose function key, as index 11.","F12","The F12 key, a general purpose function key, as index 12.","F13","The F13 key, a general purpose function key, as index 13.","F14","The F14 key, a general purpose function key, as index 14.","F15","The F15 key, a general purpose function key, as index 15.","F16","The F16 key, a general purpose function key, as index 16.","F17","The F17 key, a general purpose function key, as index 17.","F18","The F18 key, a general purpose function key, as index 18.","F19","The F19 key, a general purpose function key, as index 19.","F2","The F2 key, a general purpose function key, as index 2.","F20","The F20 key, a general purpose function key, as index 20.","F21","The F21 key, a general purpose function key, as index 21.","F22","The F22 key, a general purpose function key, as index 22.","F23","The F23 key, a general purpose function key, as index 23.","F24","The F24 key, a general purpose function key, as index 24.","F3","The F3 key, a general purpose function key, as index 3.","F4","The F4 key, a general purpose function key, as index 4.","F5","The F5 key, a general purpose function key, as index 5.","F6","The F6 key, a general purpose function key, as index 6.","F7","The F7 key, a general purpose function key, as index 7.","F8","The F8 key, a general purpose function key, as index 8.","F9","The F9 key, a general purpose function key, as index 9.","Clear program or content stored as favorite 0. (…","Clear program or content stored as favorite 1. (…","Clear program or content stored as favorite 2. (…","Clear program or content stored as favorite 3. (…","Select (recall) program or content stored as favorite 0. (…","Select (recall) program or content stored as favorite 1. (…","Select (recall) program or content stored as favorite 2. (…","Select (recall) program or content stored as favorite 3. (…","Store current program or content as favorite 0. (…","Store current program or content as favorite 1. (…","Store current program or content as favorite 2. (…","Store current program or content as favorite 3. (…","The Final Mode Final key used on some Asian keyboards, to …","Found on Sun’s USB keyboard.","Open the Find dialog. (APPCOMMAND_FIND)","Fn This is typically a hardware key that does not generate …","The Function switch Fn key. Activating this key …","FLock or FnLock. Function Lock key. Found on the Microsoft …","The Function-Lock (FnLock or F-Lock) key. Activating this …","The Back key. (KEYCODE_BACK)","The Home key, which goes to the phone’s main screen. (…","Switch to the first character group. (ISO/IEC 9995)","Switch to the last character group. (ISO/IEC 9995)","Switch to the next character group. (ISO/IEC 9995)","Switch to the previous character group. (ISO/IEC 9995)","Toggle display of program or content guide. (VK_GUIDE, …","If guide is active and displayed, then display next …","If guide is active and displayed, then display previous …","The Hangul (Korean characters) Mode key, to toggle between …","The Hanja (Korean characters) Mode key.","The (Half-Width) Characters key.","The Headset Hook key. (KEYCODE_HEADSETHOOK)","Help. Not present on standard PC keyboards.","Open a help dialog or toggle display of help information. (…","The Hibernate key. This key saves the current state of the …","Use for dedicated ひらがな key found on some Japanese …","The Hiragana (Japanese Kana characters) key.","The Hiragana/Katakana toggle key. (…","Home or ↖","The Home key, used with keyboard entry, to go to start of …","","The Hyper key.","Toggle display of information about currently selected …","Insert or Ins. Not present on Apple keyboards.","The Insert (Ins) key, to toggle between text modes for …","Inserts an entry into the <code>Keymap</code>.","Toggle instant replay. (VK_INSTANT_REPLAY)","Located between the left Shift and Z keys. Labelled | on a …","Located between the / and right Shift keys. Labelled \\\\ろ (…","Located between the = and Backspace keys. Labelled ¥ (yen…","The Junja (Korean characters) Mode key.","Japanese: カタカナ/ひらがな/ローマ字 (…","The Kana Mode (Kana Lock) key. This key is used to enter …","The Kanji (Japanese name for ideographic characters of …","Use for dedicated カタカナ key found on some Japanese …","The Katakana (Japanese Kana characters) key.","Key represents the meaning of a keypress.","The 11 key found on media numpads that have buttons from 1 …","The 12 key found on media numpads that have buttons from 1 …","a on a US keyboard. Labelled q on an AZERTY (e.g., French) …","b on a US keyboard.","c on a US keyboard.","d on a US keyboard.","e on a US keyboard.","f on a US keyboard.","g on a US keyboard.","h on a US keyboard.","i on a US keyboard.","j on a US keyboard.","k on a US keyboard.","l on a US keyboard.","m on a US keyboard.","n on a US keyboard.","o on a US keyboard.","p on a US keyboard.","q on a US keyboard. Labelled a on an AZERTY (e.g., French) …","r on a US keyboard.","s on a US keyboard.","t on a US keyboard.","u on a US keyboard.","v on a US keyboard.","w on a US keyboard. Labelled z on an AZERTY (e.g., French) …","x on a US keyboard.","y on a US keyboard. Labelled z on a QWERTZ (e.g., German) …","z on a US keyboard. Labelled w on an AZERTY (e.g., French) …","Non-standard code value supported by Chromium.","A keymap that associates key chords with actions.","An entry inside of a <code>Keymap</code>.","An event used to interact with a <code>Keymap</code> at runtime.","","Korean: HangulMode 한/영 (han/yeong)Japanese (Mac …","Korean: Hanja 한자 (hanja)Japanese (Mac keyboard): 英数…","Japanese (word-processing keyboard): Katakana","Japanese (word-processing keyboard): Hiragana","Japanese (word-processing keyboard): Zenkaku/Hankaku","The Last Number Redial key.","Sometimes labelled My Computer on the keyboard","Sometimes labelled Calculator on the keyboard","The first generic “LaunchApplication” key. This is …","The second generic “LaunchApplication” key. This is …","Non-standard code value supported by Chromium.","The “Calendar” key. (KEYCODE_CALENDAR)","The “Contacts” key. (KEYCODE_CONTACTS)","Non-standard code value supported by Chromium.","","The “Mail” key. (APPCOMMAND_LAUNCH_MAIL)","The “Media Player” key. (APPCOMMAND_LAUNCH_MEDIA_SELECT…","The “Music Player” key.","The “Phone” key.","Non-standard code value supported by Chromium.","The “Screen Saver” key.","The “Spreadsheet” key.","The “Web Browser” key.","The “WebCam” key.","The “Word Processor” key.","The left mouse button.","Launch linked content, if available and appropriate. (…","List the current program. (VK_LIST)","Toggle display listing of currently available live content …","Lock or unlock current content or program. (VK_LOCK)","The LogOff key.","Non-standard code value supported by Chromium.","Open an editor to forward the current message. (…","Non-standard code value supported by Chromium.","Open an editor to reply to the current message. (…","Non-standard code value supported by Chromium.","Send the current message. (APPCOMMAND_SEND_MAIL)","Toggle between manner mode state: silent, vibrate, ring, …","Show a list of media applications: audio/video players and …","Audio track key. (KEYCODE_MEDIA_AUDIO_TRACK)","Close the current media, for example to close a CD or DVD …","Non-standard code value supported by Chromium.","Initiate or continue forward playback at faster than …","Select previously selected channel or media. (VK_LAST, …","Non-standard code value supported by Chromium.","Pause the currently playing media. (APPCOMMAND_MEDIA_PAUSE…","Non-standard code value supported by Chromium.","Initiate or continue media playback at normal speed, if …","","Toggle media between play and pause states. (…","Non-standard code value supported by Chromium.","Initiate or resume recording of currently selected media. (…","Non-standard code value supported by Chromium.","Initiate or continue reverse playback at faster than …","","Skip backward to next content or program. (…","Skip forward to next content or program. (VK_SKIP, …","Step backward to next content or program. (…","Step forward to next content or program. (…","","Stop media playing, pausing, forwarding, rewinding, or …","Media top menu. (KEYCODE_MEDIA_TOP_MENU)","","Seek to next media or program track. (…","","Seek to previous media or program track. (…","The Meta key, to enable meta modifier function for …","The Windows, ⌘, Command or other OS symbol key.","The Windows, ⌘, Command or other OS symbol key.","Non-standard code value supported by Chromium.","Toggle the microphone on/off. (APPCOMMAND_MIC_ON_OFF_TOGGLE…","Decrease microphone volume. (…","Mute the microphone. (APPCOMMAND_MICROPHONE_VOLUME_MUTE, …","Increase microphone volume. (…","The middle mouse button.","-_ on a US keyboard.","The Mode Change key, to toggle between or cycle through …","The state of the modifier keys.","A mouse button.","Data which describes the current state of a mouse button.","The current state of the mouse cursor and buttons.","Navigate in. (KEYCODE_NAVIGATE_IN)","Navigate to next key. (KEYCODE_NAVIGATE_NEXT)","Navigate out. (KEYCODE_NAVIGATE_OUT)","Navigate to previous key. (KEYCODE_NAVIGATE_PREVIOUS)","Open a new document or message. (APPCOMMAND_NEW)","The Next Candidate function key.","Cycle to next favorite channel (in favorites list). (…","Cycle to next user profile (if there are multiple user …","Japanese: 無変換 (muhenkan)","The NonConvert (“Don’t Convert”) key, to accept …","The Notification key. (KEYCODE_NOTIFICATION)","On the Mac, the “NumLock” code should be used for the …","The NumLock or Number Lock key, to toggle numpad mode …","0 Ins on a keyboard0 on a phone or remote control","1 End on a keyboard1 or 1 QZ on a phone or remote control","2 ↓ on a keyboard2 ABC on a phone or remote control","3 PgDn on a keyboard3 DEF on a phone or remote control","4 ← on a keyboard4 GHI on a phone or remote control","5 on a keyboard5 JKL on a phone or remote control","6 → on a keyboard6 MNO on a phone or remote control","7 Home on a keyboard7 PQRS or 7 PRS on a phone or remote …","8 ↑ on a keyboard8 TUV on a phone or remote control","9 PgUp on a keyboard9 WXYZ or 9 WXY on a phone or remote …","+","Found on the Microsoft Natural Keyboard.","C or AC (All Clear). Also for use with numpads that have a …","CE (Clear Entry)",", (thousands separator). For locales where the thousands …",". Del. For locales where the decimal separator is “,” …","/","","=","# on a phone or remote control device. This key is …","M+ Add current entry to the value stored in memory.","MC Clear the value stored in memory.","MR Replace the current entry with the value stored in …","MS Replace the value stored in memory with the current …","M- Subtract current entry from the value stored in memory.","<em> on a keyboard. For use with numpads that provide </em>…","( Found on the Microsoft Natural Keyboard.",") Found on the Microsoft Natural Keyboard.","<em> on a phone or remote control device. This key is </em>…","-","Access on-demand content or programs. (VK_ON_DEMAND)","Found on Sun’s USB keyboard.","Open an existing document or message. (APPCOMMAND_OPEN)","Another mouse button with the associated button number.","Page Down, PgDn or ⇟","The Page Down key, to scroll down or display next page of …","Page Up, PgUp or ⇞","The Page Up key, to scroll up or display previous page of …","Pairing key to pair devices. (KEYCODE_PAIRING)","Found on Sun’s USB keyboard.","The Paste key. (APPCOMMAND_PASTE)","Pause Break","Pause the current state or application (as appropriate).",".&gt; on a US keyboard.","Move picture-in-picture window down. (VK_PINP_DOWN)","Move picture-in-picture window. (VK_PINP_MOVE)","Toggle display of picture-in-picture window. (…","Move picture-in-picture window up. (VK_PINP_UP)","Play or resume the current state or application (as …","Decrease media playback speed. (VK_PLAY_SPEED_DOWN)","Reset playback to normal speed. (VK_PLAY_SPEED_RESET)","Increase media playback speed. (VK_PLAY_SPEED_UP)","This key is placed in the function section on some Apple …","Toggle power state. (KEYCODE_POWER)","The PowerOff key. Sometime called PowerDown.","The Previous Candidate function key.","Print the current document or message. (APPCOMMAND_PRINT)","PrtScr SysRq or Print Screen","The Print Screen or SnapShot key, to initiate print-screen …","Non-standard code value supported by Chromium.","The Process key.","Found on Sun’s USB keyboard.","The properties (Props) key.","’“ on a US keyboard.","Toggle random media or content shuffle mode. (…","Not a physical key, but this key code is sent when the …","Toggle or cycle between media recording speeds. (…","Redo the last action. (APPCOMMAND_REDO)","Removes an entry from the <code>Keymap</code>.","","Toggle RF (radio frequency) input bypass mode (pass RF …","The right mouse button.","The Roman characters function key.","","Switch the input mode on an external STB (set top box). (…","Toggle the power on an external STB (set top box). (…","Save the current document or message. (APPCOMMAND_SAVE)","Toggle scan channels mode. (VK_SCAN_CHANNELS_TOGGLE)","Advance display screen mode to next available mode. (…","Scroll Lock","The Scroll Lock key, to toggle between scrolling and …","Found on Sun’s USB keyboard.","The Select key.","Non-standard code value supported by Chromium.",";: on a US keyboard.","Toggle display of device settings screen. (VK_SETTINGS, …","The Shift key, to enable shift modifier function for …","Shift or ⇧","Shift or ⇧","Non-standard code value supported by Chromium.","The Single Candidate function key.","/? on a US keyboard.","","General purpose virtual function key, as index 1.","General purpose virtual function key, as index 2.","General purpose virtual function key, as index 3.","General purpose virtual function key, as index 4.","  (space)","Show correction list when a word is incorrectly …","Toggle between dictation mode and command/control mode. (…","Spellcheck the current document or selection. (…","Toggle split screen mode. (VK_SPLIT_SCREEN_TOGGLE)","The Standby key. This key turns off the display and places …","Toggle display of subtitles, if available. (VK_SUBTITLE)","","The Super key.","","The Symbol modifier key (used on some virtual keyboards).","The Symbol Lock key.","Switch to viewing TV. (KEYCODE_TV)","TV 3D Mode. (KEYCODE_3D_MODE)","Toggle between antenna and cable input. (…","Audio description. (KEYCODE_TV_AUDIO_DESCRIPTION)","Audio description mixing volume down. (…","Audio description mixing volume up. (…","Contents menu. (KEYCODE_TV_CONTENTS_MENU)","Contents menu. (KEYCODE_TV_DATA_SERVICE)","Switch the input mode on an external TV. (KEYCODE_TV_INPUT)","Switch to component input #1. (KEYCODE_TV_INPUT_COMPONENT_1…","Switch to component input #2. (KEYCODE_TV_INPUT_COMPONENT_2…","Switch to composite input #1. (KEYCODE_TV_INPUT_COMPOSITE_1…","Switch to composite input #2. (KEYCODE_TV_INPUT_COMPOSITE_2…","Switch to HDMI input #1. (KEYCODE_TV_INPUT_HDMI_1)","Switch to HDMI input #2. (KEYCODE_TV_INPUT_HDMI_2)","Switch to HDMI input #3. (KEYCODE_TV_INPUT_HDMI_3)","Switch to HDMI input #4. (KEYCODE_TV_INPUT_HDMI_4)","Switch to VGA input #1. (KEYCODE_TV_INPUT_VGA_1)","Media context menu. (KEYCODE_TV_MEDIA_CONTEXT_MENU)","Toggle network. (KEYCODE_TV_NETWORK)","Number entry. (KEYCODE_TV_NUMBER_ENTRY)","Toggle the power on an external TV. (KEYCODE_TV_POWER)","Radio. (KEYCODE_TV_RADIO_SERVICE)","Satellite. (KEYCODE_TV_SATELLITE)","Broadcast Satellite. (KEYCODE_TV_SATELLITE_BS)","Communication Satellite. (KEYCODE_TV_SATELLITE_CS)","Toggle between available satellites. (…","Analog Terrestrial. (KEYCODE_TV_TERRESTRIAL_ANALOG)","Digital Terrestrial. (KEYCODE_TV_TERRESTRIAL_DIGITAL)","Timer programming. (KEYCODE_TV_TIMER_PROGRAMMING)","Tab or ⇥","The Horizontal Tabulation Tab key.","Toggle display of teletext, if available (VK_TELETEXT, …","","Found on Sun’s USB keyboard.","Undo the last action. (APPCOMMAND_UNDO)","This value code should be used when no other value given …","This key value is used when an implementation is unable to …","Advance video mode to next available mode. (…","The Voice Dial key.","","The WakeUp key. (KEYCODE_WAKEUP)","Cause device to identify itself in some manner, e.g., …","The Zenkaku (Full-Width) Characters key.","The Zenkaku/Hankaku (full-width/half-width) toggle key. (…","The ZoomIn key. (KEYCODE_ZOOM_IN)","The ZoomOut key. (KEYCODE_ZOOM_OUT)","Non-standard code value supported by Chromium.","Toggle between full-screen and scaled content, or alter …","Returns the action of the keymap entry.","Returns the set containing all flags.","","","","","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","The horizontal mouse cursor position of the frame.","The vertical mouse cursor position of the frame.","","","","","","","Returns the delta of the mouse cursor position of the …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","Exports all keymap entries and their associated key chords.","","","","","","","","","","","","","","Returns the delta of the mouse cursor position of the …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","The state of the left mouse button.","Determine a <em>charCode</em> value for a key with a character …","Determine a <em>keyCode</em> value for a key.","The state of the middle mouse button.","Creates a new keymap.","Creates a new keymap entry.","Returns the complement of this set of flags.","Returns the <code>on_action</code> callback function of the keymap …","","The position of the mouse cursor when the mouse button was …","The position of the mouse cursor when the mouse button was …","The hovered entity when the mouse button was last pressed.","Returns an iterator over every pressed keymap entry.","The horizontal mouse cursor position of the previous frame.","The vertical mouse cursor position of the previous frame.","The hovered entity when the mouse button was last released.","Removes the specified flags in-place.","The state of the right mouse button.","Inserts or removes the specified flags depending on the …","The state of the mouse button (pressed/released).","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Automatically determine the value.","Stack child elements vertically.","Describes the capabilities of a view with respect to user …","","The layout type determines how the nodes will position its …","","","Node is positioned relative to parent and in-line with …","A percentage of the parent dimension.","A number of logical pixels.","The position type determines whether a node will be …","Stack child elements horizontally.","Node is positioned relative to parent but ignores its …","A factor of the remaining free space.","Units which describe spacing and size.","","Get a flags value with all known bits set.","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","","","","The intersection of a source flags value with the …","Get a flags value with all bits unset.","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Convert from a bits value.","Convert from a bits value exactly.","","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","Returns true if the value is auto.","Whether all bits in this flags value are unset.","Returns true if the value is a percentage.","Returns true if the value is in pixels.","Returns true if the value is a stretch factor.","Yield a set of contained flags values.","Yield a set of contained named flags values.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","The intersection of a source flags value with the …","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","Returns the units converted to pixels or a provided …","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","Respresents the axis-aligned bounding box of a view.","","","","Bottom side of bounds.","Bottom left point of bounds.","Bottom right point of bounds.","Horizontal and vertical center of bounds.","Bottom center of bounds.","Left center of bounds.","Right center of bounds.","Top center of bounds.","","","","","","","Expands by some <code>amount</code> in both directions and returns a …","Expands by some <code>amount</code> horizontally and returns a new …","Expands by some <code>amount</code> vertically and returns a new …","","","Returns the argument unchanged.","Construct a <code>BoundingBox</code> from checked minimum and maximum …","","Bounds height equivalent to <code>h</code>.","","","Calls <code>U::from(self)</code>.","Left side of bounds equivalent to <code>x</code>.","Right side of bounds.","Shrinks by some <code>amount</code> in both directions and returns a …","Shrinks by some <code>amount</code> horizontally and returns a new …","Shrinks each side by the given separate amounts and …","Shrinks by some <code>amount</code> vertically and returns a new …","","","","Top of bounds equivalent to <code>y</code>.","Top left point of bounds.","Top right point of bounds.","","","","","","Bounds width equivalent to <code>w</code>.","","","A type which formats a localized message with any number …","","Add a variable argument binding to the Localized type.","Add a constant argument to the Localized type.","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Sets a mapping function to apply to the translated text.","Creates a new Localized type with a given key.","","","","","","","","","A trait implemented by application data in order to …","Build the model data into the application tree.","Respond to events in order to mutate the model data.","","Modifiers for changing the abilities of a view.","Modifiers for changing the accessibility properties of a …","Modifiers which add an action callback to a view.","","","Modifiers for changing the layout properties of a view.","","","Modifiers for changing the style properties of a view.","Modifiers for changing the text properties of a view.","","","","","Sets the backdrop filter for the view.","Sets the backdrop filter for the view.","Sets the background color of the view.","Sets the background color of the view.","","","","","","Sets the border radius for the bottom-left corner of the …","Sets the border radius for the bottom-left corner of the …","Sets the border corner shape for the bottom-left corner of …","Sets the border corner shape for the bottom-left corner of …","Sets the border radius for the bottom-right corner of the …","Sets the border radius for the bottom-right corner of the …","Sets the border corner shape for the bottom-right corner …","Sets the border corner shape for the bottom-right corner …","Sets the border color of the view.","Sets the border color of the view.","Sets the border corner shape for all four corners of the …","Sets the border corner shape for all four corners of the …","Sets the border radius for all four corners of the view.","Sets the border radius for all four corners of the view.","Sets the border radius for the top-left corner of the view.","Sets the border radius for the top-left corner of the view.","Sets the border corner shape for the top-left corner of …","Sets the border corner shape for the top-left corner of …","Sets the border radius for the top-right corner of the …","Sets the border radius for the top-right corner of the …","Sets the border corner shape for the top-right corner of …","Sets the border corner shape for the top-right corner of …","Sets the border width of the view.","Sets the border width of the view.","","","","","","","","","Sets the space on the bottom side of the view.","Sets the space on the bottom side of the view.","Add a box-shadow to the view.","Add a box-shadow to the view.","Sets the ext caret color of the view.","Sets the ext caret color of the view.","Sets whether the view can be checked.","Sets whether the view can be checked.","Sets the checked state of the view.","Sets the checked state of the view.","Sets the space between the bottom side of the view and the …","Sets the space between the bottom side of the view and the …","Sets the space between the left side of the view and the …","Sets the space between the left side of the view and the …","Sets the space between the right side of the view and the …","Sets the space between the right side of the view and the …","Sets the space between the vew and its children.","Sets the space between the vew and its children.","Sets the space between the top side of the view and the …","Sets the space between the top side of the view and the …","Adds a class name to the view.","Adds a class name to the view.","Sets the clip path for the the view.","Sets the clip path for the the view.","","","","","Sets the space between the views children in a horizontal …","Sets the space between the views children in a horizontal …","Sets the text color of the view.","Sets the text color of the view.","","Sets the mouse cursor used when the view is hovered.","Sets the mouse cursor used when the view is hovered.","","","Sets the accessibility default action for the view.","Sets the accessibility default action for the view.","Sets the view to be disabled.","Sets the view to be disabled.","Sets whether the view should be positioned and rendered.","Sets whether the view should be positioned and rendered.","","","","Sets whether the view can be focused to receive keyboard …","Sets whether the view can be focused to receive keyboard …","Sets the focused state of the view.","Sets the focused state of the view.","Sets the font that should be used by the view.","Sets the font that should be used by the view.","Sets the font size of the view.","Sets the font size of the view.","Sets the font stretch that should be used by the view if …","Sets the font stretch that should be used by the view if …","Sets the font style that should be used by the view.","Sets the font style that should be used by the view.","Sets the font weight that should be used by the view.","Sets the font weight that should be used by the view.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Sets the height of the view.","Sets the height of the view.","Sets whether the view should be hidden from accessibility.","Sets whether the view should be hidden from accessibility.","Sets whether the view can be hovered by the mouse.","Sets whether the view can be hovered by the mouse.","Sets the ID name of the view.","Sets the ID name of the view.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Sets the layout type of the view.","Sets the layout type of the view.","Sets the space on the left side of the view.","Sets the space on the left side of the view.","Sets whether the view should act as an accessibility live …","Sets whether the view should act as an accessibility live …","Sets the maximum bottom space of the view.","Sets the maximum bottom space of the view.","Sets the maximum height of the view.","Sets the maximum height of the view.","Sets the maximum left space of the view.","Sets the maximum left space of the view.","Sets the maximum right space of the view.","Sets the maximum right space of the view.","Sets the maximum width and maximum height of the view.","Sets the maximum width and maximum height of the view.","Sets the maximum space for all sides of the view.","Sets the maximum space for all sides of the view.","Sets the maximum top space of the view.","Sets the maximum top space of the view.","Sets the maximum width of the view.","Sets the maximum width of the view.","Sets the minimum bottom space of the view.","Sets the minimum bottom space of the view.","Sets the minimum height of the view.","Sets the minimum height of the view.","Sets the minimum left space of the view.","Sets the minimum left space of the view.","Sets the minimum right space of the view.","Sets the minimum right space of the view.","Sets the minimum width and minimum height of the view.","Sets the minimum width and minimum height of the view.","Sets the minimum space for all sides of the view.","Sets the minimum space for all sides of the view.","Sets the minimum top space of the view.","Sets the minimum top space of the view.","Sets the minimum width of the view.","Sets the minimum width of the view.","Sets the accessibility name of the view.","Sets the accessibility name of the view.","Sets whether the view can be navigated to, i.e. focused, …","Sets whether the view can be navigated to, i.e. focused, …","","","Sets the accessibility numeric value for the view.","Sets the accessibility numeric value for the view.","Adds a callback which is performed when the the view …","","","Adds a callback which is performed when the view gains …","Adds a callback which is performed when the view loses …","Adds a callback which is performed when the the view …","Adds a callback which is performed when the mouse pointer …","Adds a callback which is performed when the mouse pointer …","Adds a callback which is performed when a mouse button is …","Adds a callback which is performed when the mouse pointer …","Adds a callback which is performed when a mouse button is …","Adds a callback which is performed when the mouse pointer …","Adds a callback which is performed when the mouse pointer …","Adds a callback which is performed when the the view …","Adds a callback which is performed when the the view …","Sets the opacity of the view.","Sets the opacity of the view.","Sets the outline color of the view.","Sets the outline color of the view.","Sets the outline offset of the view.","Sets the outline offset of the view.","Sets the outline width of the view.","Sets the outline width of the view.","","","Sets the overflow behavior of the view in the horizontal …","Sets the overflow behavior of the view in the horizontal …","Sets the overflow behavior of the view in the vertical …","Sets the overflow behavior of the view in the vertical …","Sets whether the view can be become the target of pointer …","Sets whether the view can be become the target of pointer …","Sets the position type of the view.","Sets the position type of the view.","","","","","Sets the space on the right side of the view.","Sets the space on the right side of the view.","Sets the accessibility role of the view.","Sets the accessibility role of the view.","Sets the angle of rotation for the view.","Sets the angle of rotation for the view.","Sets the space between the views children in a vertical …","Sets the space between the views children in a vertical …","Sets the scale of the view.","Sets the scale of the view.","Sets the color used to highlight selected text within the …","Sets the color used to highlight selected text within the …","","","Sets the width and height of the view.","Sets the width and height of the view.","Sets the space for all sides of the view.","Sets the space for all sides of the view.","","Sets the text content of the view.","Sets the text content of the view.","Sets the horizontal alignment of text within the view.","Sets the horizontal alignment of text within the view.","Sets the accessibility text value for the view.","Sets the accessibility text value for the view.","Sets whether the text of the view should be allowed to …","Sets whether the text of the view should be allowed to …","","","Sets whether a view should have the given class name.","Sets whether a view should have the given class name.","","Derived lenses for <code>TooltipModel</code>.","","Sets the space on the top side of the view.","Sets the space on the top side of the view.","Sets the transform of the view with a list of transform …","Sets the transform of the view with a list of transform …","Sets the transform origin of the the view.","Sets the transform origin of the the view.","Sets the translation offset of the view.","Sets the translation offset of the view.","","","","","","","","","","","","","Sets whether the view should be rendered.","Sets whether the view should be rendered.","Sets the width of the view.","Sets the width of the view.","","","","Sets the z-index of the view.","Sets the z-index of the view.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Creates a new lens for the field <code>tooltip_visible</code> on …","","Lens for the whole <code>TooltipModel</code> struct.","","","","Lens for the field <code>tooltip_visible</code> on <code>TooltipModel</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","Indicates an alias or shortcut is to be created.","Indicates something can be scrolled/panned in any …","A value representing an angle expressed in degrees, …","","An arrow which is usually also the default cursor icon.","","The entity will receive pointer events unless its parent …","","","","","","","","","","","The bevel border corner shape.","900","","700,","The shape the default view drawing algorithm should use …","The ‘bottom’ horizontal position keyword.","A box shadow adding a shadow effect around an element’s …","","","","","","","","","","Indicates the table cell or set of cells can be selected.","<code>center</code>","<code>center</code>","The inline contents are centered within the line box.","Character unit.","","Centimeters.","Indicates a column can be resized horizontally.","A color value.","","","Indicates a context menu is available.","Indicates something is to be copied.","","","Indicates selection.","","The ‘currentcolor’ keyword.","","An icon of a cursor.","","","","","","","","","","","","","","","","","","","","","","","","","The platform-dependent default cursor. Typically an arrow.","An angle expressed in degrees.","","Determines whether an entity will be rendered and acted on …","Indicates something can be resized or moved east.","em.","The same as right if direction is left-to-right and left …","Indicates something can be resized or moved horizontally.","ex.","","","950","800","","","200","","","","","","","The entity will be rendered and acted on by the layout …","","A font size value.","A font stretch value.","A font style.","A font weight value.","A font weight keyword corresponding to a specific font …","","","","","","","","","","","Indicates something can be grabbed and moved around.","Indicates something is being grabbed and moved around.","An angle expressed in gradians.","","","","","","","Indicates something clickable like a link.","","Indicates help information is available.","The overflow is clipped and the content can only be …","The entity will not rendered, but will still be acted upon …","","","A horizontal position keyword.","","","","","","","Inches.","","The inline contents are justified. Text should be spaced …","","","","","","","","","","","","","","","","","","","","","","","","","The ‘left’ horizontal position keyword.","The inline contents are aligned to the left edge of the …","","<code>&lt;length-percentage&gt;</code>","<code>&lt;length-percentage&gt;</code>","","A length or a percentage value.","A length value.","300","","","","","","","","","","","","","","","","","","","A 2D matrix.","A 2D matrix transform.","500","Millimeters.","","Indicates something is to be moved.","","","Indicates something can be resized or moved north.","","Indicates something can be resized or moved north-east.","Indicates something can be resized or moved diagonally …","Indicates an item may not be dropped at the current …","No cursor is rendered.","The entity will not be rendered and acted on by the layout …","","","The entity will not receive pointer events.","","","","Indicates the requested action will not be carried out.","Indicates something can be resized or moved vertically.","Indicates something can be resized or moved north-west.","Indicates something can be resized or moved diagonally …","","","","","","","","An opacity value in the range of 0 to 1.","Determines how to deal with content that overflows the …","","","","","","","","","","","","The amount of pixels per centimeter.","The amount of pixels per inch.","The amount of pixels per millimeter.","The amount of pixels per pica.","The amount of pixels per point.","The amount of pixels per quarter-millimeter.","Picas.","","Determines whether an entity will receive pointer events.","","Indicates the program is busy in the background, but the …","","Points.","Pixels.","Quarter.","","","Draw system flag.","Text constraints system flag.","Layout system flag.","Style system flag.","A color with red, green, blue, and alpha components, in a …","A RGBA color value.","","","An angle expressed in radians.","","","Root em.","The ‘right’ horizontal position keyword.","The inline contents are aligned to the right edge of the …","A 2D rotation.","The round border corner shape.","Indicates a row can be resized vertically.","","","","","","","","","","","","","","Indicates something can be resized or moved south.","","","A scale defining a scale value on the x and the y axis.","A 2D scale.","A scale in the X direction.","A scale in the Y direction.","Indicates something can be resized or moved south-east.","600","","","","","<code>&lt;side&gt; &lt;length-percentage&gt;?</code>","<code>&lt;side&gt; &lt;length-percentage&gt;?</code>","A 2D skew.","A skew along the X axis.","A skew along the Y axis.","The same as left if direction is left-to-right and right …","Stores the style properties of all entities in the …","","Indicates something can be resized or moved south-west.","","","","","","","","Indicates the text can be selected.","Determines how overflowed content that is not displayed …","100","The ‘top’ horizontal position keyword.","An individual transform function.","Defines a transition that allows to change property values …","A translate defining a translate value on the x and the y …","A 2D translation.","A translation in the X direction.","A translation in the Y direction.","An angle expressed in turns.","","","","","","","","","","","A vertical position keyword.","Indicates the vertical text can be selected.","View height.","Determines whether an entity will be rendered.","The overflow is not clipped and renders outside of the …","The entity will be rendered.","Viewport maximum.","Viewport minimum.","View width.","","","","Indicates something can be resized or moved west.","Indicates the program is busy in the background and the …","","","Indicates something can be zoomed in.","Indicates something can be zoomed out.","","","","","","","","Get a flags value with all known bits set.","The alpha component.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","","Get the underlying bits value.","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","The blue component.","","The blur radius used for making the box shadow bigger and …he color of the box shadow.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The delay of the transition.","The intersection of a source flags value with the …","","","","","The duration of the transition.","","Get a flags value with all bits unset.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","","","","Return a new RGBA from the Color","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The green component.","","","","","","Creates a new RGBA from HSL values.","Creates a new RGBA from HSLA values.","","","The bitwise or (<code>|</code>) of the bits in two flags values.","Determines if the box shadow should be an outer shadow …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Whether all known bits in this flags value are set.","","Whether all bits in this flags value are unset.","","","Yield a set of contained flags values.","Yield a set of contained named flags values.","","","","","","","","","","","","","","","","","","","","","","","","","","","Function to convert logical points to physical pixels.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new box shadow.","Creates a new 2D matrix.","","Creates a new scale.","Creates a new transition.","Creates a new translation.","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Function to convert physical pixels to logical points.","","","","A list of properties affected by transition.","","","","","","","","The red component.","The intersection of a source flags value with the …","","Creates a new RGBA from RGB values","Creates a new RGBA from RGB values","Creates a new RGBA from RGBA values","Creates a new RGBA from RGBA values","","","","","","","","","","","","","","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The spread radius used for expanding and growing the box …","","","","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the amount of pixels of the length if …","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","","","","","The scale value on the x axis.","The translate value on the x axis.","The horizontal offset of the box shadow.","","The scale value on the y axis.","The translate value on the y axis.","The vertical offset of the box shadow.","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","Text horizontal alignment: <code>Left</code> (default), <code>Center</code>, <code>Right</code>.","The text baseline is the normal alphabetic baseline. …","","Displays the source on top of the destination. The part of …","Text baseline vertical alignment: <code>Top</code>, <code>Middle</code>, <code>Alphabetic</code> …","Fills an additional triangular area between the common …","Blend factors.","","The ends of lines are squared off at the endpoints. …","Main 2D drawing context.","The text is centered.","Struct for representing colors.","Predefined composite oprations.","Determines how a new (“source”) data is displayed …","Ignores the destination and just displays the source.","Displays the destination on top of the source. The part of …","Only displays the part of the destination that is inside …","Only displays the part of the destination that is outside …","Displays the destination over the source.","","Using the target alpha","Using the target color","Enum with all possible canvas errors that could occur.","","","","The fill rule used when filling paths: <code>EvenOdd</code>, <code>NonZero</code> …","A font handle.","","Information about a font.","","","","The filter shall be a gaussian blur with given sigma as …","","","","","","","","","ImageFilter allows specifying the type of filter to apply …","Image flags (eg. repeat, flip, mipmaps, etc.)","An image handle.","","Information about an image.","Image source","","","","The text is left-aligned.","Displays the source together with the destination, the …","Determines the shape used to draw the end points of lines: …","Determines the shape used to join two line segments where …","The text baseline is the middle of the em square.","Connected segments are joined by extending their outside …","","","","","All use","Minus the target alpha","Minus the target color","Minus the source alpha","Minus the source color","","Struct controlling how graphical shapes are rendered.","A collection of verbs (<code>move_to()</code>, <code>line_to()</code>, <code>bezier_to()</code>, …","Image format: <code>Rgb8</code>, <code>Rgba8</code>, <code>Gray8</code>.","","","","","","","This is the main renderer trait that the Canvas draws to.","","","","","The text is right-aligned.","The ends of lines are rounded.","Rounds off the corners of a shape by filling an additional …","","","","","Used to specify Solid/Hole when adding shapes to a path.","Displays the source in the destination, i.e. only the part …","Only displays the part of the source that is outside the …","Displays the source over the destination.","The ends of lines are squared off by adding a box with an …","Using the source alpha","Scale color by minimum of source alpha and destination …","Using the source color","","TextContext provides functionality for text processing in …","Result of a shaping run.","The text baseline is the top of the em square.","2×3 matrix (2 rows, 3 columns) used for 2D linear …","","","Only the areas that exclusively belong either to the …","Not all","","Adds a font file to the canvas","Adds all .ttf files from a directory","Registers all .ttf files from a directory with this text …","Registers the .ttf file from the specified path with this …","Adds a font to the canvas by reading it from the specified …","Registers the in-memory representation of a TrueType font …","","Registers the in-memory representation of a TrueType font …","Get a flags value with all known bits set.","","","Returns boolean if the shapes drawn with this paint will …","Creates new circle arc shaped sub-path. The arc center is …","Adds an arc segment at the corner defined by the last path …","","","","","","","","","","","","","","","","","","","The distance from the baseline to the top of the highest …","","","Adds cubic bezier segment from last point in the path via …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","The bitwise or (<code>|</code>) of the bits in two flags values.","Get the underlying bits value.","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Returns a black color","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates and returns a box gradient.","Returns the maximum index-th byte of text that will fit …","Returns the maximum index-th byte of text that will fit …","Returnes a list of ranges representing each line of text …","Returnes a list of ranges representing each line of text …","","Creates new circle shaped sub-path.","Clears the rectangle area defined by left upper corner …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Closes current sub-path with a line segment.","","","","","Creates a new solid color paint","","The bitwise negation (<code>!</code>) of the bits in a flags value, …","Whether all set bits in a source flags value are also set …","Returns true if the specified point (x,y) is in the …","Creates image from specified image data.","Allocates an empty image with the provided domensions and …","","Allocates an image that wraps the given backend-specific …","","","","","","","","","","","","","","","","","","","Deletes created image.","The distance from the baseline to the bottom of the lowest …","The intersection of a source flags value with the …","Source dimensions","Dispatch an explicit set of GlyphDrawCommands to the …","","Creates new ellipse shaped sub-path.","Get a flags value with all bits unset.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in each flags value.","Fills the provided Path with the specified Paint.","Retrieves the current fill rule setting for this paint","Fills the provided string with the specified Paint.","Renders the given source_image into target_image while …","Image flags","Tells the renderer to execute all drawing commands and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the current font size","Source format","Image format","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert from a bits value.","","Convert from a bits value exactly.","Convert from a bits value, unsetting any unknown bits.","The bitwise or (<code>|</code>) of the bits in each flags value.","Get a flags value with the bits of a flag with the given …","","","","Sets the composite operation with custom pixel arithmetic.","Sets the composite operation with custom pixel arithmetic …","Sets the composite operation.","","","","","","","","","","","","","Returns the height of the current render target.","","height of the glyphs as drawn","Image height in pixels","Returns color value for a 6-digit (<code>RRGGBB</code>) or 8-digit (…","Returns color value specified by hue, saturation and …","Returns color value specified by hue, saturation, …","Creates an identity transformation with no translation, …","Creates a new image pattern paint.","","Returns image info","Returns the size in pixels of the image for the specified …","Like <code>image</code>, but allows for adding a tint, or a color which …","","","The bitwise or (<code>|</code>) of the bits in two flags values.","Intersects current scissor rectangle with the specified …","The bitwise and (<code>&amp;</code>) of the bits in two flags values.","Whether any set bits in a source flags value are also set …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Whether all known bits in this flags value are set.","","Whether all bits in this flags value are unset.","","","Yield a set of contained flags values.","Yield a set of contained named flags values.","Returns the current letter spacing","Returns the current start line cap for this paint.","Returns the current start line cap for this paint.","Returns the current line join for this paint.","","Adds line segment from the last point in the path to the …","Returns the current line width.","Creates and returns a linear gradient paint.","Creates and returns a linear gradient paint with two or …","Decode an image from file","Decode an image from memory","Returns font metrics for a particular Paint.","Returns font metrics for a particular Paint.","Returns information on how the provided text will be drawn …","Returns information on how the provided text will be drawn …","Getter for the miter limit","Starts new sub-path with specified point as first point.","","","","Creates a new canvas.","","Creates a new transformation matrix.","","Creates a new CompositeOperationState from the provided …","","Creates a new canvas with the specified renderer and using …","The bitwise negation (<code>!</code>) of the bits in a flags value, …","","","","","","","","","","","","","Return the bounding box for a Path","","","","Adds quadratic bezier segment from last point in the path …","","","Creates and returns a radial gradient.","Creates and returns a multi-stop radial gradient.","Resizes an image to the new provided dimensions.","Creates new rectangle shaped sub-path.","","The intersection of a source flags value with the …","","Module containing renderer implementations.","","Resets current state to default values. Does not affect …","Reset and disables scissoring.","Resets current transform to a identity matrix.","Adjusts the capacity of the shaped words cache. This is a …","Adjusts the capacity of the shaping run cache. This is a …","Restores the previous render state","Returns a color value from red, green, blue char values. …","Returns a color value from red, green, blue and alpha char …","Returns a color value from red, green, blue and alpha char …","Returns a color value from red, green, blue float values. …","Rotates the current coordinate system. Angle is specified …","","Creates new rounded rectangle shaped sub-path.","Creates new rounded rectangle shaped sub-path with varying …","","","Pushes and saves the current render state into a state …","Saves the current state before calling the callback and …","Scales the current coordinate system.","","Sets the current scissor rectangle.","","","Call <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …","Sets transparency of a color value.","Sets transparency of a color value.","Sets whether shapes drawn with this paint will be anti …","Creates a new solid color paint","","Sets the current rule to be used when filling a path","","Sets the font size.","","Sets the transparency applied to all rendered shapes.","Sets the letter spacing for this paint","Sets how the start and end of the line (cap) is drawn","Sets how the end cap of the line is drawn","Sets how the beggining cap of the line is drawn","Sets how sharp path corners are drawn.","Sets the line width for shapes stroked with this paint.","Sets the limit at which a sharp corner is drawn beveled.","Sets a new render target. All drawing operations after …","","Sets the size of the default framebuffer (screen size)","Sets whether to use higher quality stencil strokes.","Sets the text horizontal alignment for this paint","Sets the text vertical alignment for this paint","Premultiplies current coordinate system by specified …","","Image size (height and width) in pixels","Memory usage in bytes","Skews the current coordinate system along X axis. Angle is …","","Skews the current coordinate system along Y axis. Angle is …","","Sets the current sub-path winding, see Solidity","True if this paint uses higher quality stencil strokes.","Strokes the provided Path with the specified Paint.","Strokes the provided string with the specified Paint.","The intersection of a source flags value with the …","The intersection of a source flags value with the …","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","","","Returns the current horizontal align","Returns the current vertical align","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise exclusive-or (<code>^</code>) of the bits in two flags …","Returns the current transformation matrix","","Translates the current coordinate system.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The bitwise or (<code>|</code>) of the bits in two flags values.","","Updates image data specified by image handle.","","","","Returns a white color","Returns the width of the current render target.","","width of the glyphs as drawn","Image width in pixels","Returns the paint with anti alias set to the specified …","Creates a new CompositeOperationState with source and …","Returns the paint with a new solid color set to the …","Returns the paint with the rule for filling a path set to …","Returns the paint with the font set to the specified value.","Returns the paint with the font size set to the specified …","Returns the paint with the letter spacing set to the …","Returns the paint with line cap set to the specified value.","Returns the paint with the beginning cap of the line set …","Returns the paint with the beginning cap of the line set …","Returns the paint with the line join set to the specified …","Returns the paint with line width set to the specified …","Returns the paint with the miter limit set to the …","Returns the paint with stencil strokes set to the …","Returns the paint with the text horizontal alignment set …","Returns the paint with the text vertical alignment set to …","","","","","","","","Pixel is 8-bit alpha","AnimationDecoder trait","An Image in AVIF format.","Pixel contains 8-bit B, G and R channels","Pixel is 8-bit BGR with an alpha channel","An Image in BMP Format","The number of channels of this pixel type.","A string that can help to interpret the meaning each …","This pixel has the format of one of the predefined …","An enumeration over supported color types and bit depths","The maximum value for this type of primitive within the …","The minimum value for this type of primitive within the …","An Image in DDS Format","An error was encountered while decoding.","The delay of a frame relative to the previous one.","A Dynamic Image","Types which are safe to treat as an immutable byte slice …","An error was encountered while encoding.","Contains the error value","An enumeration of color types encountered in image formats.","An Image in farbfeld Format","A flat buffer over a (multi channel) image.","A single animation frame","An implementation dependent iterator, reading the frames …","A trait for manipulating images.","Trait to inspect an image.","An Image in GIF Format","Sendable grayscale + alpha channel image buffer","Sendable grayscale image buffer","An Image in Radiance HDR Format","An Image in ICO Format","Generic image buffer","The trait that all decoders implement","Specialized image decoding not be supported by all formats","The trait all encoders implement","The generic error type for image operations.","An enumeration of supported image formats. Not all formats …","Each pixel in this image is 16-bit Luma","Each pixel in this image is 8-bit Luma","Each pixel in this image is 16-bit Luma with alpha","Each pixel in this image is 8-bit Luma with alpha","An enumeration of supported image formats for encoding.","Result of an image decoding/encoding process","Each pixel in this image is 16-bit Rgb","Each pixel in this image is 32-bit float Rgb","Each pixel in this image is 8-bit Rgb","Each pixel in this image is 16-bit Rgb with alpha","Each pixel in this image is 32-bit float Rgb with alpha","Each pixel in this image is 8-bit Rgb with alpha","An error occurred while interacting with the environment.","An Image in JPEG Format","Pixel is 1-bit luminance","Pixel is 16-bit luminance","Pixel is 16-bit luminance","Pixel is 2-bit luminance","Pixel is 4-bit luminance","Pixel is 8-bit luminance","Pixel is 8-bit luminance","Pixel is 1-bit luminance with an alpha channel","Pixel is 16-bit luminance with an alpha channel","Pixel is 16-bit luminance with an alpha channel","Pixel is 2-bit luminance with an alpha channel","Pixel is 4-bit luminance with an alpha channel","Pixel is 8-bit luminance with an alpha channel","Pixel is 8-bit luminance with an alpha channel","Completing the operation would have required more …","Grayscale colors.","Grayscale colors + alpha channel","Contains the success value","An Image in OpenEXR Format","An error was encountered in input arguments.","A generalized pixel.","The type of pixel.","The pixel with an associated <code>ColorType</code>. Not all possible …","Immutable pixel iterator","An Image in PNG Format","An Image in PNG Format","An Image in general PNM Format","The type of each channel in a pixel. For example, this can …","Represents the progress of an image operation.","An Image in QOI format.","The type of reader produced by <code>into_reader</code>.","RGB colors.","Pixel contains 1-bit R, G and B channels","Pixel is 16-bit RGB","Pixel contains 16-bit R, G and B channels","Pixel contains 2-bit R, G and B channels","Pixel is 32-bit float RGB","Pixel is 32-bit float RGB","An image buffer for 32-bit float RGB pixels, where the …","Pixel contains 4-bit R, G and B channels","Pixel contains 8-bit R, G and B channels","Pixel contains 8-bit R, G and B channels","Sendable Rgb image buffer","RGB colors + alpha channel","Pixel is 1-bit RGB with an alpha channel","Pixel is 16-bit RGBA","Pixel is 16-bit RGB with an alpha channel","Pixel is 2-bit RGB with an alpha channel","Pixel is 32-bit float RGBA","Pixel is 32-bit float RGBA","An image buffer for 32-bit float RGBA pixels, where the …","Pixel is 4-bit RGB with an alpha channel","Pixel is 8-bit RGB with an alpha channel","Pixel is 8-bit RGB with an alpha channel","Sendable Rgb + alpha channel image buffer","A View into another image","The scalar type that is used to store each channel in this …","An Image in TGA Format","An Image in TIFF Format","Pixel is of unknown color type with the specified bits per …","An operation can not be completed by the chosen …","A value for signalling an error: An unsupported format was …","An Image in WEBP Format","Apply the function <code>f</code> to each channel of this pixel.","Apply the function <code>f</code> to each channel of this pixel and …","Apply the function <code>f</code> to each channel except the alpha …","Apply the function <code>f</code> to each channel except the alpha …","Get the bytes of this value.","Blend the color of a given pixel into ourself, taking into …","Put a pixel at location (x, y), taking into account alpha …","The bounding rectangle of this image.","Iterators and other auxiliary structure for the <code>ImageBuffer</code>…","Returns the components as a slice.","Returns the channels of this pixel as a 4 tuple. If the …","Returns the components as a mutable slice","Encoding and decoding for various image file formats.","Supplementary color information.","Returns the color type of the image data produced by this …","Copies all of the pixels from another image into this …","Copies all of the pixels from one part of this image to …","Returns a tuple containing the width and height of the …","The width and height of this image.","Contains detailed error representation.","Image representations for ffi.","Construct a pixel from the 4 channels a, b, c and d. If …","Returns a view into a slice.","Returns mutable view into a mutable slice.","Returns the pixel located at (x, y). Indexed from top left.","Gets a reference to the mutable pixel at location <code>(x, y)</code>. …","Guess image format from memory block","The height of this image.","Returns the ICC color profile embedded in the image","Read a tuple containing the (width, height) of the image …","Image Processing Functions","Returns true if this x, y coordinate is contained inside …","Consume the decoder producing a series of frames.","Returns a reader that can be used to obtain the bytes of …","Invert this pixel","Input and output of images.","A <code>repr(C)</code> description of the layout of buffer samples.","Create a new image from a Reader.","Create a new image from a byte slice","Create a new image from a byte slice","Apply the function <code>f</code> to each channel of this pixel.","Apply the function <code>f</code> to each channel of this pixel and …","Apply the function <code>f</code> to each channel except the alpha …","Apply the function <code>f</code> to each channel except the alpha …","Mathematical helper functions and types.","Open the image located at the path specified. The image’…","Returns the color type of the image file before decoding","Returns an Iterator over the pixels of this image. The …","Put a pixel at location (x, y). Indexed from top left.","Returns all the bytes in the image.","Same as <code>read_image</code> but periodically calls the provided …","Decode a rectangular section of the image; see …","Decode a rectangular section of the image, periodically …","Underlying linear container holding sample values.","Saves the supplied buffer to a file at the path specified.","Saves the supplied buffer to a file at the path specified …","Returns the minimum number of bytes that can be …","Set decoding limits for this decoder. See <code>Limits</code> for the …","Returns a mutable subimage that is a view into this image. …","Convert this pixel to luma","Convert this pixel to luma with an alpha channel","Convert this pixel to RGB","Convert this pixel to RGB with an alpha channel","Returns the total number of bytes in the decoded image.","Returns the pixel located at (x, y). Indexed from top left.","Puts a pixel at location (x, y). Indexed from top left.","Returns a subimage that is an immutable view into this …","The width of this image.","Writes the supplied buffer to a writer in the specified …","Writes all the bytes in an image to the encoder.","Provides color conversions for whole image buffers.","Enumerate the pixels of an image.","Enumerate the pixels of an image.","Enumerate the rows of an image.","Enumerate the rows of an image.","Iterate over pixel refs.","Iterate over mutable pixel refs.","Iterate over rows of an image","Iterate over mutable rows of an image","Converts <code>self</code> to a buffer of type T","Decoding and Encoding of PNG Images","Uses a heuristic to select one of the preceding filters …","An <code>AnimationDecoder</code> adapter of <code>PngDecoder</code>.","Filters based on the average of left and right neighbor …","High compression level","Compression level of a PNG encoder. The default setting is …","Default compression level","Fast, minimal compression","Filter algorithms used to process image data to improve …","Huffman coding compression","No processing done, best used for low bit depth grayscale …","Algorithm that takes into account the left, upper left, …","PNG decoder","PNG encoder","Png Reader","Run-length encoding compression","Filters based on previous pixel in the same scanline","Filters based on the scanline above","The required color type can not be handled.","An error was encountered while decoding.","An error was encountered while decoding an image.","The resulting image exceed dimension limits in either …","The dimensions passed are wrong.","An error was encountered while encoding.","An error was encountered while encoding an image.","Contains the error value","The format is known exactly.","Repeated an operation for which error that could not be …","An image format is not supported.","A string describing the parameter. This is discouraged and …","Some feature specified by string. This is discouraged and …","The generic error type for image operations.","A best effort representation for image formats.","Result of an image decoding/encoding process","The operation would have performed an allocation larger …","An error occurred while interacting with the environment.","Completing the operation would have required more …","Indicates the limit that prevented an operation from …","Completing the operation would have required more …","The format can be identified by a name.","The end of the image has been reached.","Contains the success value","An error was encountered in input arguments.","An error was encountered in inputs arguments.","Details how a parameter is malformed.","A common path extension for the format is known.","The format is not known or could not be determined.","An operation can not be completed by the chosen …","The specified strict limits are not supported for this …","The implementation for an operation was not provided.","Details what feature is not supported.","The given limits","The supported strict limits","The color format did not match the channel count.","The samples are in column-major form and all samples are …","Denotes invalid flat sample buffers when trying to convert …","A flat buffer over a (multi channel) image.","All samples are packed.","Different normal forms of buffers.","The represented image can not use this representation.","At least pixels are packed.","The samples are in row-major form and all samples are …","A ffi compatible description of a sample buffer.","The represented image was too large.","No pixel aliases another.","A flat buffer that can be used as an image view.","A mutable owning version of a flat buffer.","Deprecated - ChannelCountMismatch is used instead","Add this to an index to get to the sample in the next …","The number of channels in the color representation of the …","Supplementary color information.","The height of the represented image.","Add this to an index to get to the next sample in …","A <code>repr(C)</code> description of the layout of buffer samples.","Underlying linear container holding sample values.","The width of the represented image.","Add this to an index to get to the next sample in …","A bi-level color map","Cubic Filter","The color type on which the map operates on","A color map","Available Sampling Filters.","Gaussian Filter","Lanczos with window 3","Nearest Neighbor","Linear Filter","Performs a Gaussian blur on the supplied image. <code>sigma</code> is a …","Brighten the supplied image. <code>value</code> is the amount to …","Functions for altering and converting the color of …","Adjust the contrast of the supplied image. <code>contrast</code> is the …","Return a mutable view into an image The coordinates set …","Return an immutable view into an image The coordinates set …","Reduces the colors of the image using the supplied …","Perform a 3x3 box filter on the supplied image. <code>kernel</code> is …","Flip an image horizontally","Flip an image horizontally and put the result into the …","Flip an image horizontally in place.","Flip an image vertically","Flip an image vertically and put the result into the …","Flip an image vertically in place.","Convert the supplied image to grayscale. Alpha channel is …","Convert the supplied image to grayscale. Alpha channel is …","Convert the supplied image to a grayscale image with the …","Convert the supplied image to a grayscale image with the …","Determine if this implementation of ColorMap overrides the …","Fill the image with a linear horizontal gradient","Hue rotate the supplied image. <code>value</code> is the degrees to …","Reduces the colors using the supplied <code>color_map</code> and …","Returns the index of the closest match of <code>color</code> in the …","Linearly sample from an image using coordinates in [0, w-1]…","Sample from an image using coordinates in [0, w-1] and [0, …","Invert each pixel within the supplied image. This function …","Looks up color by index in the color map.  If <code>idx</code> is out …","Maps <code>color</code> to the closest color in the color map.","Overlay an image at a given coordinate (x, y)","Calculate the region that can be copied from top to bottom.","Replace the contents of an image at a given coordinate (x, …","Resize the supplied image to the specified dimensions. …","Rotate an image 180 degrees clockwise.","Rotate an image 180 degrees clockwise and put the result …","Rotate an image 180 degrees clockwise in place.","Rotate an image 270 degrees clockwise.","Rotate an image 270 degrees clockwise and put the result …","Rotate an image 90 degrees clockwise.","Rotate an image 90 degrees clockwise and put the result …","Linearly sample from an image using coordinates in [0, 1].","Sample from an image using coordinates in [0, 1], taking …","Resize the supplied image to the specific dimensions.","Tile an image by repeating it multiple times","Performs an unsharpen mask on the supplied image. <code>sigma</code> is …","Fill the image with a linear vertical gradient","A bi-level color map","The color type on which the map operates on","A color map","Brighten the supplied image. <code>value</code> is the amount to …","Brighten the supplied image in place. <code>value</code> is the amount …","Adjust the contrast of the supplied image. <code>contrast</code> is the …","Adjust the contrast of the supplied image in place. …","Reduces the colors of the image using the supplied …","Convert the supplied image to grayscale. Alpha channel is …","Convert the supplied image to grayscale. Alpha channel is …","Convert the supplied image to a grayscale image with the …","Convert the supplied image to a grayscale image with the …","Determine if this implementation of ColorMap overrides the …","Hue rotate the supplied image. <code>value</code> is the degrees to …","Hue rotate the supplied image in place. <code>value</code> is the …","Reduces the colors using the supplied <code>color_map</code> and …","Returns the index of the closest match of <code>color</code> in the …","Invert each pixel within the supplied image. This function …","Looks up color by index in the color map.  If <code>idx</code> is out …","Maps <code>color</code> to the closest color in the color map.","Set of supported strict limits for a decoder.","Resource limits for decoding.","A multi-format image reader.","The maximum allowed sum of allocations allocated by the …","The maximum allowed image height. This limit is strict. …","The maximum allowed image width. This limit is strict. The …","A Rectangle defined by its top left corner, width and …","The rectangle’s height.","The rectangle’s width.","The x coordinate of the top left corner.","The y coordinate of the top left corner.","Basic struct used for both owned (alias <code>ImgVec</code>) and …","Additional methods that depend on buffer size","Additional methods that depend on buffer size","Reference to pixels inside another image. Pass this …","Same as <code>ImgRef</code>, but mutable Pass this structure by value …","Image owning its pixels.","Iterates over pixels in the (sub)image. Call <code>Img.pixels()</code> …","Iterates over pixels in the (sub)image. Call …","Iterates over pixels in the (sub)image. Call …","Rows of the image. Call <code>Img.rows()</code> to create it.","Rows of the image. Call <code>Img.rows_mut()</code> to create it.","","Returns a reference to the buffer, width, height. …","Borrow the container mutably","Make a mutable reference to the entire image","","Borrow the container","Make mutable reference immutable","Make a reference to this image to pass it to functions …","","","","","","","","","","","","","","Immutable reference to the pixel storage. Warning: exposes …","Storage for the pixels. Usually <code>Vec&lt;Pixel&gt;</code> or <code>&amp;[Pixel]</code>. …","Storage for the pixels. Usually <code>Vec&lt;Pixel&gt;</code> or <code>&amp;[Pixel]</code>. …","Storage for the pixels. Usually <code>Vec&lt;Pixel&gt;</code> or <code>&amp;[Pixel]</code>. …","Storage for the pixels. Usually <code>Vec&lt;Pixel&gt;</code> or <code>&amp;[Pixel]</code>. …","Mutable reference to the pixel storage. Warning: exposes …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Height of the image in pixels.","Height of the image in pixels.","Height of the image in pixels.","Height of the image in pixels.","Height of the image in pixels.","Height in number of full strides. If the underlying buffer …","","Take n-th row as a slice. Same as .rows().nth(n).unwrap()","Read a pixel at <code>(x,y)</code> location (e.g. px = <code>img[(x,y)]</code>)","Take n-th row as a slice. Same as .rows().nth(n).unwrap()","Read a pixel at <code>(x,y)</code> location (e.g. px = <code>img[(x,y)]</code>)","Read a pixel at <code>(x,y)</code> location (e.g. px = <code>img[(x,y)]</code>)","Read a pixel at <code>(x,y)</code> location (e.g. px = <code>img[(x,y)]</code>)","Read a pixel at <code>(x,y)</code> location (e.g. px = <code>img[(x,y)]</code>)","Take n-th row as a slice. Same as .rows().nth(n).unwrap()","Read a pixel at <code>(x,y)</code> location (e.g. px = <code>img[(x,y)]</code>)","Write a pixel at <code>(x,y)</code> location (e.g. <code>img[(x,y)] = px</code>)","Take n-th row as a mutable slice. Same as …","Write a pixel at <code>(x,y)</code> location (e.g. <code>img[(x,y)] = px</code>)","Write a pixel at <code>(x,y)</code> location (e.g. <code>img[(x,y)] = px</code>)","Take n-th row as a mutable slice. Same as …","Write a pixel at <code>(x,y)</code> location (e.g. <code>img[(x,y)] = px</code>)","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Get the pixel storage by consuming the image. Be careful …","Returns the buffer, width, height. Guarantees that the …","","","","","","Deprecated. Use .rows() or .pixels() iterators which are …","Convert underlying buffer to owned (e.g. slice to vec)","","","A convenience method for creating an image of the same …","Create new image with <code>Container</code> (which can be <code>Vec</code>, <code>&amp;[]</code> or …","A convenience method for creating an image of the same …","Same as <code>new()</code>, except each row is located <code>stride</code> number of …","","","","","","","","","","Panics","If you want to iterate in parallel, parallelize <code>rows()</code> …","Iterate <code>width*height</code> pixels in the <code>Img</code>, ignoring padding …","If you want to iterate in parallel, parallelize <code>rows()</code> …","If you want to iterate in parallel, parallelize <code>rows()</code> …","Iterate <code>width*height</code> pixels in the <code>Img</code>, by reference, …","Iterate over rows of the image as slices","Iterate over whole rows as slices","Iterate over whole rows of pixels as slices","Iterate over rows of the image as mutable slices","Iterate over whole rows as slices","Iterate over the entire buffer as rows, including all …","Iterate over the entire buffer as rows, including all …","Iterate over the entire buffer as rows, including all …","Iterate over the entire buffer as rows, including all …","","","","Number of <em>pixels</em> to skip in the container to advance to …","Number of pixels to skip in the container to advance to …","Number of pixels to skip in the container to advance to …","Number of pixels to skip in the container to advance to …","Number of pixels to skip in the container to advance to …","Make a reference for a part of the image, without copying …","Make a reference for a part of the image, without copying …","Turn this into immutable reference, and slice a subregion …","Create a mutable view into a region within the image. See …","Trim this image without copying. Note that mutable borrows …","Returns a reference to the buffer, width, height. …","","Convert underlying buffer to owned (e.g. slice to vec)","","","","","","","","","","","","","","","","","","","Width of the image in pixels.","Width of the image in pixels.","Width of the image in pixels.","Width of the image in pixels.","Width of the image in pixels.","Maximum possible width of the data, including the stride.","","","","","","","","","","","","","","","","","","","This is the main renderer trait that the Canvas draws to.","","","","","","","","","Vertex struct for specifying triangle geometry","Void renderer used for testing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Make the “Screen” RenderTarget actually render to a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts a slice of bytes into a slice of pixels, e.g. <code>[u8]</code> …","Same as <code>ComponentMap</code>, but doesn’t change the alpha …","Casting a slice of <code>RGB/A</code> values to a slice of <code>u8</code>","Applying operation to every component","Casting the struct to slices of its components","Cast a slice of component values (bytes) as a slice of …","Marker trait for “plain old data”.","The RGB pixel","16-bit RGB in machine’s native endian","8-bit RGB","The RGBA pixel","16-bit RGB in machine’s native endian. 0 = transparent, …","8-bit RGBA, alpha is last. 0 = transparent, 255 = opaque.","Trait for types that can be safely created with <code>zeroed</code>.","Alpha","Alpha","Alpha","","","","","","","","","Convenience function for converting to RGBA","Create a new RGBA with the new alpha value, but same RGB …","BGR/BGRA alernative layouts &amp; grayscale","","","Reinterpert slice as reverse-order BGR pixels","Reinterpert ntable slice as reverse-order BGR pixels","Reinterpert slice as reverse-order BGRA pixels","Reinterpert mutable slice as reverse-order alpha-last BGRA …","The components interpreted as raw bytes, in machine’s …","The components interpreted as raw bytes, in machine’s …","Reinterpert mutable slice as grayscale pixels","Reinterpert mutable slice as grayscale pixels with alpha","Reinterpert mutable slice as grayscale pixels with alpha","Reinterpert mutable slice as grayscale pixels","","","The components interpreted as a mutable array, e.g. one <code>RGB</code>…","","","Reinterpret the slice as a read-only/shared slice of …","Reinterpret the slice as a mutable/exclusive slice of …","","","Reinterpert slice as RGB pixels","Reinterpert mutable slice as RGB pixels","Reinterpert slice as RGBA pixels","Reinterpert mutable slice as RGBA pixels","The components interpreted as an array, e.g. one <code>RGB</code> …","","","Blue","Blue","Blue","Blue","Blue","Blue","Copy RGB components out of the RGBA struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Takes exactly 3 elements from the iterator and creates a …","Takes exactly 4 elements from the iterator and creates a …","Green","Green","Green","Green","Green","Green","","","","Calls <code>U::from(self)</code>.","","Calls <code>U::from(self)</code>.","","","","","Iterate over color components (R, G, and B)","Iterate over all components (length=4)","Convenience function (equivalent of …","","","Create a new RGBA with a new alpha value created by the …","Convenience function for applying the same formula to …","","","Create new RGBA with the same alpha value, but different …","","","","","","","Convenience function for creating a new pixel The order of …","Convenience function for creating a new pixel The order of …","Convenience function for converting to RGBA with alpha …","Convenience function for creating a new pixel The order of …","","","Red","Red","Red","Red","Red","Red","Copy RGB components out of the RGBA struct","Provide a mutable view of only RGB components (leaving out …","","","","","","","","","","","","","","","","","","","","","","","Calls <code>zeroed</code>.","RGB in reverse byte order","16-bit BGR in machine’s native endian","8-bit BGR","BGR+A","16-bit BGR in machine’s native endian","8-bit BGRA","16-bit gray in machine’s native endian","8-bit gray","16-bit gray with alpha in machine’s native endian","8-bit gray with alpha in machine’s native endian","Grayscale. Use <code>.0</code> or <code>*</code> (deref) to access the value.","Grayscale with alpha. Use <code>.0</code>/<code>.1</code> to access.","Alpha last","Alpha last","Alpha last","","","","","","","","","Convenience function for converting to RGBA","Create a new RGBA with the new alpha value, but same RGB …","Create a new <code>GrayAlpha</code> with the new alpha value, but same …","","","","","","","","","","","","","","","","","Blue first","Blue first","Blue first","Blue first","Blue first","Blue first","Copy RGB components out of the RGBA struct","Provide a mutable view of only RGB components (leaving out …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","Returns the argument unchanged.","","Green","Green","Green","Green","Green","Green","Copy <code>Gray</code> component out of the <code>GrayAlpha</code> struct","Provide a mutable view of only <code>Gray</code> component (leaving out …","","","","","","Calls <code>U::from(self)</code>.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Iterate over color components (R, G, and B)","Iterate over all components (length=4)","","","","","Create a new RGBA with a new alpha value created by the …","Create a new <code>GrayAlpha</code> with a new alpha value created by …","","","","","Create new <code>GrayAlpha</code> with the same alpha value, but …","Create new RGBA with the same alpha value, but different …","","","","","","","Convenience function for creating a new pixel Wargning: …","Convenience function for creating a new pixel Warning: The …","New grayscale pixel","New grayscale+alpha pixel","Convenience function for converting to RGBA with alpha …","Convenience function for creating a new pixel Warning: The …","","","","","Red last","Red last","Red","Red","Red last","Red","Copy RGB components out of the RGBA struct","Provide a mutable view of only RGB components (leaving out …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The canvas which all views draw to.","A handle to a view which has been already built into the …","A view is any object which can be displayed on the screen.","","Set the color of the bar inside the ProgressBar.","","","","Returns the bounding box of the view.","Builds the view into the tree and returns a handle which …","","Returns a mutable reference to the context.","","Which form element does this label describe.","Provides custom drawing for the view.","Specifies a name for the view type which can be used as an …","Returns the <code>Entity</code> id of the view.","Handles any events received by the view.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","Sets the fraction of a slider that a press of an arrow key …","Stop the user from tabbing out of a subtree, which is …","Mody the internal data of the view.","Marks the view as needing a redraw.","Marks the view as needing a relayout.","Marks the view as needing a restyle.","Registers a callback for when the user clicks off of the …","Registers a callback for when the user clicks off of the …","Sets the callback triggered when a textbox is blurred, …","Callback which is run when the view is built/rebuilt.","Sets the callback triggered when a textbox edit is …","","","","","","","Sets the callback triggered when the slider value is …","","","","","","","","","Sets the callback triggered when a textbox is edited, i.e. …","","","","","","","","","","","","","","","Sets a callback which will be called when a scrollview is …","","Set the callback triggered when the radio button is …","","","","Sets the callback triggered when a textbox is submitted, …","Set the callback triggered when the checkbox is pressed.","Set the callback triggered when the Switch is pressed.","","Sets the placeholder text that appears when the textbox …","Sets the range of the slider.","","Returns the scale factor of the device.","","","","","","","","","","Sets a validation closure which is called when the textbox …","","","","","","","","","Makes a knob that represents the current value with an arc","","Trigger the <code>on_blur</code> callback.","A simple push button with an action and a contained view.","A checkbox used to display and toggle a boolean state.","","Sets the Size for the inner VStack which holds the content …","A visual indicator such as a tag.","Reset the text of the textbox to the bound data.","","","","","","","","","Copy the textbox buffer to the clipboard.","Cut the textbox text and place it in the clipboard.","A control used to select a date.","","","","","Delete a section of text, determined by the <code>Movement</code>.","","","","Specify the ‘drag’ position of the mouse cursor.","A dropdown is used to display some state with the ability …","A basic element with no interactivity.","Toggle the textbox to <em>not</em> allow text input.","A view which arranges its children into a horizontal stack …","Specify the ‘hit’ position of the mouse cursor.","","","","","","","","","","Insert a string of text into the textbox.","","","A label used to display text.","A view for creating a list of items from a binding to a …","","","","","","","","Move the cursor and selection.","","","","","The orientation of a widget, such as a slider or scrollbar","","Sets the Size for the outer <code>ScrollView</code> which wraps the …","Paste the clipboard buffer into the textbox.","","","","","","A simple ProgressBar that can be used to show progress of …","A radio button used to display and toggle boolean state.","","Specify the scroll offset of the textbox.","","","","Adds given progress to scroll position for the x axis and …","Adds given progress to scroll position for the y axis and …","","","Select all text.","Select the paragraph at the current cursor position.","Select the word at the current cursor position.","","","","","","","","Sets the <code>on_scroll</code> callback.","","","Set the placeholder text of the textbox.","","","Sets the progress of scroll position between 0 and 1 for …","Sets the progress of scroll position between 0 and 1 for …","","The slider control can be used to select from a continuous …","","","","","Toggle the textbox to allow text input.","","Trigger the <code>on_submit</code> callback with the current text.","A Switch used to display and toggle a boolean state.","","","","Events for modifying a textbox.","The <code>Textbox</code> view provides an input control for editing a …","Makes a round knob with a tick to show the current value","Adds tickmarks to a knob to show the steps that a knob can …","","","","","","","A view which arranges its children into a vertical stack …","","","","","A view which overlays its children on top of each other.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Derived lenses for <code>ComboBox</code>.","Height of the outer <code>ScrollView</code> which wraps the inner …","Width of the outer <code>ScrollView</code> which wraps the inner …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Creates a new horizontal progress bar bound to the value …","","Height of the inner VStack which holds the content …","Width of the inner VStack which holds the content …","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Derived lenses for <code>MenuBar</code>.","Derived lenses for <code>MenuButton</code>.","","Creates a new button.","Creates a new checkbox.","","Creates a new dropdown.","Creates a new element.","","","","","","Creates a new label.","Creates a new label.","Creates a new List view with a binding to the given lens …","","","","","Creates a new progress bar bound to the value targeted by …","","","","","","Creates a new Switch.","","","","","","","","","","","","","Creates a new slider bound to the value targeted by the …","","","","Creates a new single-line textbox.","","","","Creates a new multi-line textbox.","","Callback called when the scrollview is scrolled.","Derived lenses for <code>PopupData</code>.","","","","","","Progress of scroll position between 0 and 1 for the x axis","Progress of scroll position between 0 and 1 for the y axis","Derived lenses for <code>Submenu</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new vertical progress bar bound to the value …","Derived lenses for <code>VirtualList</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lens for the field <code>filter_text</code> on <code>ComboBox</code>.","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Lens for the field <code>hovered</code> on <code>ComboBox</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Lens for the field <code>is_open</code> on <code>ComboBox</code>.","Lens for the field <code>list_lens</code> on <code>ComboBox</code>.","Creates a new lens for the field <code>filter_text</code> on <code>ComboBox</code>. …","Creates a new lens for the field <code>placeholder</code> on <code>ComboBox</code>. …","Creates a new lens for the field <code>on_select</code> on <code>ComboBox</code>. …","Creates a new lens for the field <code>list_lens</code> on <code>ComboBox</code>. …","Creates a new lens for the field <code>selected</code> on <code>ComboBox</code>. Use …","Creates a new lens for the field <code>is_open</code> on <code>ComboBox</code>. Use …","Creates a new lens for the field <code>hovered</code> on <code>ComboBox</code>. Use …","Creates a new lens for the field <code>p</code> on <code>ComboBox</code>. Use …","","Lens for the field <code>on_select</code> on <code>ComboBox</code>.","Lens for the field <code>p</code> on <code>ComboBox</code>.","Lens for the field <code>placeholder</code> on <code>ComboBox</code>.","Lens for the whole <code>ComboBox</code> struct.","Lens for the field <code>selected</code> on <code>ComboBox</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Lens for the field <code>is_open</code> on <code>MenuBar</code>.","Creates a new lens for the field <code>is_open</code> on <code>MenuBar</code>. Use …","","Lens for the whole <code>MenuBar</code> struct.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","Lens for the whole <code>MenuButton</code> struct.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Lens for the field <code>is_open</code> on <code>PopupData</code>.","Creates a new lens for the field <code>is_open</code> on <code>PopupData</code>. Use …","","Lens for the whole <code>PopupData</code> struct.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Lens for the field <code>is_open</code> on <code>Submenu</code>.","Creates a new lens for the field <code>is_open</code> on <code>Submenu</code>. Use …","Creates a new lens for the field <code>open_on_hover</code> on <code>Submenu</code>. …","","Lens for the field <code>open_on_hover</code> on <code>Submenu</code>.","Lens for the whole <code>Submenu</code> struct.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Lens for the field <code>item_height</code> on <code>VirtualList</code>.","Creates a new lens for the field <code>offset</code> on <code>VirtualList</code>. …","Creates a new lens for the field <code>num_items</code> on <code>VirtualList</code>. …","Creates a new lens for the field <code>item_height</code> on <code>VirtualList</code>…","Creates a new lens for the field <code>visible_items</code> on …","Creates a new lens for the field <code>scrolly</code> on <code>VirtualList</code>. …","Creates a new lens for the field <code>scroll_to_cursor</code> on …","Creates a new lens for the field <code>on_change</code> on <code>VirtualList</code>. …","","Lens for the field <code>num_items</code> on <code>VirtualList</code>.","Lens for the field <code>offset</code> on <code>VirtualList</code>.","Lens for the field <code>on_change</code> on <code>VirtualList</code>.","Lens for the whole <code>VirtualList</code> struct.","Lens for the field <code>scroll_to_cursor</code> on <code>VirtualList</code>.","Lens for the field <code>scrolly</code> on <code>VirtualList</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Lens for the field <code>visible_items</code> on <code>VirtualList</code>.","","Emitted when a character is typed.","Prints the debug message to the console.","Emitted when a file is dragged and then dropped onto the …","","","","Move keyboard focus to the next navigable view.","","Move keyboard focus to the previous navigable view.","Emitted when an entity changes position or size.","Grabs the mouse cursor, preventing it from leaving the …","","Emitted when a keyboard key is pressed.","Emitted when a keyboard key is released.","Emitted when mouse events have been captured.","Emitted when mouse events have been released.","Emitted when a mouse button is double clicked.","Emitted when a mouse button is pressed","Emitted when the mouse cursor enters an entity.","Emitted when the mouse cursor leaves an entity.","Emitted when the mouse cursor is moved","Emitted when the mouse cursor leaves the bounding box of …","Emitted when the mouse cursor enters the bounding box of …","Emitted when the mouse scroll wheel is scrolled.","Emitted when a mouse button is triple clicked","Emitted when a mouse button is released.","Emitted when the primary mouse button or trigger key is …","Emitted when the primary mouse button or trigger key is …","Requests a redraw of the window contents.","Requests a relayout.","Reloads all application stylesheets.","Request a restyle.","Sets whether the window remains on top of other windows.","Sets the mouse cursor icon.","Sets the (x,y) position of the mouse cursor in window …","Sets whether the window has decorations.","Sets the maximum size of the window.","Sets whether the window is maximized.","Sets the minimum size of the window.","Sets whether the window is minimized.","Sets the position of the window.","Sets whether the window is resizable.","Sets the size of the window.","Sets the title of the window.","Sets whether the window is visible.","Emited when the system window theme has changed.","Emitted when a window is closed. Can also be emitted by a …","Events generated by the application in response to OS …","Modifiers for setting the properties of a window.","Sets whether the window should be on top of other windows. …","","","","","","","","","Sets whether the window has decorations. Accepts a boolean …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Sets the icon used for the window.","Sets the inner size of the window to the given value. …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Sets the maximum inner size of the window to the given …","Sets whether the window is maximized. Accepts a boolean …","Sets the minimum inner size of the window to the given …","Sets whether the window is minimized. Accepts a boolean …","Sets the position of the window to the given value. …","Sets whether the window can be resized. Accepts a boolean …","Sets the title of the window to the given value. Accepts a …","","","Sets whether the window is transparent. Accepts a boolean …","","","","","","","Sets whether the window is visible. Accepts a boolean …","Sets whether the window has vsync enabled.","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,435,0,2,0,0,0,436,436,435,5,6,7,1,5,6,8,7,437,438,5,9,10,11,439,6,13,14,15,8,7,1,437,438,5,9,10,11,439,6,13,14,15,8,7,1,5,9,10,11,6,13,14,15,8,7,1,5,9,10,11,6,13,14,15,8,7,1,13,14,5,9,10,11,6,13,14,15,8,7,1,437,438,5,9,10,11,439,6,13,14,15,8,7,1,436,436,436,436,224,224,224,5,9,10,11,6,13,14,15,8,7,1,10,436,436,437,438,5,9,10,11,439,6,13,14,15,8,7,1,436,436,436,436,436,436,10,11,439,6,13,14,15,8,1,436,436,220,224,435,436,436,5,9,10,11,6,13,14,15,8,7,1,437,438,5,9,10,11,439,6,13,14,15,8,7,1,437,438,5,9,10,11,439,6,13,14,15,8,7,1,437,438,5,9,10,11,439,6,13,14,15,8,7,1,436,436,2,5,9,10,11,6,13,14,15,8,7,1,0,0,0,0,0,0,0,0,0,62,0,0,0,0,0,0,62,22,31,22,22,35,22,22,35,22,22,42,42,35,42,42,42,42,42,42,42,42,42,42,42,42,35,50,42,35,56,72,22,31,62,50,42,35,56,72,22,31,62,50,42,35,42,42,35,440,35,22,35,42,42,42,42,42,42,35,56,56,35,22,56,20,42,35,22,22,42,42,42,42,42,42,42,42,42,42,42,42,440,35,56,22,440,35,22,440,35,56,22,35,22,56,441,35,31,62,62,35,22,35,35,35,22,35,42,42,35,50,42,35,56,72,22,31,62,35,22,35,35,35,22,50,42,35,56,72,22,31,62,35,35,35,35,35,35,35,35,35,35,35,35,35,35,56,72,22,35,42,35,73,42,35,35,35,22,42,35,35,22,35,22,35,22,35,72,22,31,35,35,35,42,42,42,42,441,35,42,35,35,35,56,35,35,22,35,22,42,35,22,440,35,22,440,35,22,440,35,22,42,73,35,35,35,35,35,31,31,31,31,35,35,35,35,22,35,35,35,35,35,22,35,22,35,35,31,31,35,31,31,31,35,35,35,35,35,35,35,35,35,31,35,35,35,31,31,35,35,35,35,35,35,35,31,35,35,31,35,35,56,72,22,35,22,35,22,42,35,42,35,22,56,62,62,35,42,35,50,42,35,56,72,22,31,62,50,42,35,56,72,22,31,62,50,42,35,56,72,22,31,62,35,35,22,42,22,35,22,35,22,0,99,92,0,0,92,442,442,99,0,0,442,442,100,92,99,442,92,99,100,64,442,92,99,100,64,92,99,92,99,92,100,0,92,99,92,99,64,92,99,442,92,99,100,64,100,442,92,99,100,64,64,64,100,64,0,92,99,442,92,99,100,64,442,92,99,100,64,442,92,99,100,64,101,102,103,104,101,102,103,104,101,102,103,104,0,101,102,103,104,101,102,103,104,101,102,103,104,101,102,103,104,101,102,103,104,101,102,103,104,101,101,101,102,103,104,101,102,103,104,0,101,102,103,104,0,101,0,101,102,103,104,101,102,103,104,101,102,103,104,101,102,103,104,101,102,103,104,0,105,106,107,105,106,107,105,106,107,105,106,107,105,106,107,105,106,107,105,106,107,105,106,107,105,106,107,105,106,107,105,106,107,105,106,107,0,0,105,106,107,105,106,107,105,106,107,105,106,107,105,106,107,108,0,0,0,109,109,108,109,0,0,0,108,0,108,54,109,39,63,110,108,54,109,39,63,110,108,54,109,39,108,54,109,39,108,54,109,39,63,110,110,63,108,54,109,39,108,54,109,39,63,108,54,109,39,63,110,108,54,109,39,63,110,108,54,109,39,63,63,63,110,63,110,63,63,110,108,54,109,39,63,110,108,54,109,39,63,110,108,54,109,39,63,110,108,54,109,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,133,0,131,133,133,131,120,120,168,0,113,113,131,140,0,0,0,140,443,0,131,0,0,0,0,0,131,0,0,131,131,0,0,0,0,0,0,70,70,70,70,0,0,70,70,70,70,70,70,140,131,133,127,133,133,133,127,133,133,127,133,133,133,127,133,140,0,0,443,131,140,0,142,0,0,131,135,131,0,0,131,152,0,133,127,133,133,127,133,0,133,127,133,0,0,133,127,133,133,127,133,0,133,127,133,0,0,120,131,131,133,140,135,131,70,120,112,115,116,117,120,112,115,116,117,120,112,115,116,117,120,134,118,127,133,112,115,116,117,70,131,135,136,444,70,118,70,118,70,70,70,70,70,70,119,70,70,70,70,70,70,70,70,70,70,119,118,119,70,70,70,70,70,70,119,119,119,119,127,120,112,115,116,117,190,118,70,70,139,140,119,130,134,118,127,133,112,115,116,117,70,131,135,136,137,132,139,140,119,130,134,118,127,133,112,115,116,117,70,131,135,136,137,132,142,119,118,70,70,0,130,130,127,131,131,132,127,133,120,112,115,116,117,120,112,115,116,117,120,112,115,116,117,119,130,134,118,127,133,112,115,116,117,70,131,135,136,137,132,119,130,134,118,127,133,112,115,116,117,70,131,135,136,137,132,0,139,70,119,152,118,190,190,118,70,70,136,118,70,130,118,132,118,132,152,142,118,118,70,118,118,118,118,134,118,127,133,112,115,116,117,70,131,135,136,134,118,127,133,112,115,116,117,70,131,135,136,0,118,131,119,70,119,0,70,70,140,140,119,134,118,127,133,112,115,116,117,70,131,135,136,137,139,140,140,140,119,130,134,118,127,133,133,112,112,115,115,116,116,117,117,70,70,70,70,70,70,70,70,70,70,70,70,70,131,135,135,136,137,132,120,112,115,116,117,70,131,118,131,134,130,131,118,118,134,120,112,115,116,117,120,112,115,116,117,118,119,142,118,118,70,118,190,118,118,70,118,119,70,0,119,127,127,118,127,133,112,115,116,117,131,142,118,70,70,152,0,119,119,0,142,119,119,119,119,118,112,115,116,117,119,119,118,112,115,116,117,132,132,139,140,119,130,134,118,127,133,112,115,116,117,70,131,135,136,137,132,130,70,118,445,139,137,70,70,70,70,118,152,70,70,70,70,70,70,118,120,112,115,116,117,70,0,119,119,130,0,0,0,120,112,115,116,117,120,112,115,116,117,120,112,115,116,117,120,0,119,139,130,118,132,70,70,70,70,70,70,70,70,70,70,139,137,134,0,152,134,142,118,118,190,118,118,70,152,152,446,446,136,70,70,70,70,70,70,118,118,118,119,118,70,0,0,118,70,152,152,119,140,119,190,132,70,70,70,132,120,112,115,116,117,70,70,70,120,112,115,116,117,70,70,70,131,119,130,134,118,127,133,112,115,116,117,70,131,135,136,137,132,120,112,115,116,117,70,70,70,120,112,115,116,117,70,70,70,140,140,119,130,136,152,139,140,119,130,134,118,127,133,112,115,116,117,70,131,135,136,137,132,139,140,119,130,134,118,127,133,112,115,116,117,70,131,135,136,137,132,119,139,140,119,130,134,118,127,133,112,115,116,117,70,131,135,136,137,132,142,118,190,118,70,142,132,142,118,70,119,0,171,118,70,118,70,0,0,0,0,0,0,0,0,0,162,163,165,166,145,147,146,148,162,163,165,166,145,147,146,148,162,165,145,147,162,165,145,147,447,162,163,165,166,145,147,146,148,162,163,165,166,145,147,146,148,162,163,165,166,145,147,146,148,162,163,165,166,145,147,146,148,162,163,165,166,145,147,146,148,162,163,165,166,145,147,146,148,162,163,165,166,162,163,165,166,145,147,146,148,162,165,145,147,162,163,165,166,145,147,146,148,162,163,165,166,145,147,146,148,162,163,165,166,145,147,146,148,0,176,0,176,175,0,175,175,0,175,176,176,0,0,0,175,176,176,172,175,176,178,172,173,177,175,176,178,172,173,177,175,176,175,176,175,176,172,175,176,172,177,175,176,175,176,175,176,178,172,173,177,175,176,172,178,172,173,177,175,176,173,172,172,172,177,177,178,172,178,172,175,176,178,172,173,177,175,176,178,172,173,177,175,176,178,172,173,177,175,176,172,177,179,140,0,181,180,140,0,443,182,180,179,180,179,0,0,0,181,140,0,0,140,182,180,443,140,0,0,182,182,140,181,0,0,179,180,181,182,183,179,184,185,180,186,187,181,182,183,179,184,185,180,186,187,181,182,179,180,181,182,179,180,181,182,179,180,181,182,179,180,181,182,183,183,179,184,184,185,185,180,186,186,187,187,181,182,182,183,184,186,183,183,179,184,185,180,186,187,181,182,182,182,183,184,186,185,187,179,180,181,182,183,179,184,185,180,186,187,181,182,183,185,187,184,186,184,185,186,179,180,181,182,183,184,185,186,187,182,183,184,185,186,187,182,183,179,184,185,180,186,187,181,182,183,179,184,185,180,186,187,181,182,183,179,184,185,180,186,187,181,182,448,448,125,157,0,0,157,0,125,157,157,0,125,157,0,0,125,167,125,157,126,167,124,126,125,157,167,124,126,125,157,167,124,126,167,167,167,124,126,125,157,167,124,126,125,157,119,167,124,126,167,125,157,167,125,157,167,167,124,126,167,124,126,125,125,157,167,124,126,125,157,124,126,124,126,126,124,126,167,167,125,157,167,167,124,126,124,126,167,124,126,167,167,167,167,124,126,125,157,124,126,167,119,167,124,126,157,126,167,124,126,119,167,124,126,167,167,124,126,125,157,125,125,167,124,126,125,157,167,124,126,125,157,124,167,124,126,125,157,167,167,0,164,189,0,0,164,164,164,164,164,0,188,164,188,164,0,188,164,188,164,0,0,0,0,0,164,164,0,0,0,0,0,0,0,164,188,164,0,0,0,0,189,188,0,0,0,189,188,0,0,188,164,0,189,188,189,188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,188,164,188,164,188,164,188,164,0,0,0,189,0,0,0,0,0,0,0,0,0,0,189,0,0,0,189,0,189,189,0,0,0,192,169,193,192,169,193,192,169,169,169,193,192,169,192,169,193,192,169,192,169,192,169,192,169,193,169,169,193,192,169,192,169,193,192,169,193,193,193,169,169,169,193,193,169,193,169,169,193,192,169,193,192,169,193,192,169,193,192,169,193,193,0,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,74,202,202,198,202,198,202,202,202,202,202,198,198,202,198,202,198,202,198,202,198,202,202,202,202,202,202,202,202,202,202,202,202,198,202,198,202,198,202,198,198,198,202,198,198,198,202,198,202,198,202,198,202,198,202,198,202,198,202,198,202,198,202,74,202,202,202,202,198,202,202,202,202,202,202,202,0,202,202,202,202,202,202,202,198,202,198,202,202,198,198,198,202,198,202,202,198,202,202,202,198,202,198,198,198,198,198,198,198,198,198,198,202,202,198,202,198,202,198,202,202,198,202,198,202,198,202,202,202,202,198,202,198,202,198,202,198,202,198,202,198,202,198,202,198,202,198,202,198,202,198,202,198,202,198,202,198,202,198,202,198,202,198,202,198,202,198,202,198,202,198,202,198,202,198,202,198,202,202,202,202,202,202,202,202,202,202,202,202,202,202,198,202,198,202,198,202,202,202,202,202,202,202,202,202,202,202,202,202,202,198,202,202,198,202,202,198,202,198,202,202,198,202,449,202,198,198,198,202,198,202,202,198,202,0,202,202,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,0,0,0,74,198,198,198,198,198,202,198,198,202,202,198,202,202,198,198,202,202,202,202,198,202,202,202,202,202,199,202,202,202,202,202,198,202,198,202,198,202,202,202,202,202,198,202,202,198,202,198,202,198,202,198,202,198,202,198,202,202,202,202,198,202,202,198,202,198,202,202,198,198,198,202,202,202,202,199,198,202,0,0,0,0,202,202,202,202,202,202,202,202,198,202,202,198,202,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,198,202,198,202,199,198,202,198,202,202,198,202,198,202,198,202,202,202,202,202,202,202,202,198,202,202,202,202,198,202,198,202,198,202,198,202,202,202,202,449,198,202,199,202,74,202,202,202,202,202,198,202,198,202,198,198,202,202,198,198,198,202,198,198,202,202,202,202,198,202,202,202,202,202,202,198,202,198,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,198,202,202,198,198,202,198,202,202,202,198,202,202,202,202,202,202,198,202,196,74,74,198,199,200,75,202,196,74,74,74,74,74,74,74,74,198,199,200,75,202,449,203,196,74,198,199,200,75,202,449,203,196,74,198,199,200,75,202,196,74,198,199,200,75,202,196,74,74,74,75,75,74,198,200,75,202,203,75,74,74,74,198,199,200,75,202,196,196,74,198,199,200,75,202,196,203,203,74,74,74,74,74,74,198,198,199,200,75,202,202,75,74,198,199,200,75,202,449,203,203,196,74,74,74,74,198,202,74,198,202,74,74,74,74,198,199,200,75,202,449,203,196,74,74,75,202,202,75,203,196,74,196,74,200,200,200,203,75,75,200,74,75,74,200,74,74,74,74,198,199,200,75,202,196,198,202,198,202,74,74,198,199,200,75,202,449,203,196,74,198,199,200,75,202,449,203,196,74,198,199,200,75,202,449,203,196,74,55,207,0,206,0,206,206,208,55,55,0,207,208,55,0,206,206,207,208,55,206,206,206,206,206,206,206,206,207,208,55,206,207,208,55,206,0,55,207,208,55,206,207,208,55,206,206,206,207,208,55,206,206,207,208,55,207,208,55,206,207,208,55,206,206,206,206,206,207,208,55,55,55,55,55,206,206,206,206,206,206,206,207,208,55,206,206,206,207,208,55,206,206,206,55,206,55,55,55,206,206,206,207,208,55,206,207,208,55,206,207,208,55,206,206,206,207,208,55,206,55,55,206,207,208,55,206,207,208,55,206,207,208,55,206,206,0,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,0,0,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,237,218,218,218,218,0,450,450,450,0,0,0,0,451,0,0,451,0,0,0,0,0,221,452,452,452,452,452,452,452,452,227,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,451,232,221,227,451,232,221,227,453,453,452,452,454,454,455,455,452,452,453,453,453,453,453,453,453,453,453,453,452,452,452,452,221,227,221,227,453,453,454,454,227,452,452,221,227,456,456,452,452,452,452,232,221,227,455,455,452,452,454,454,454,454,454,454,454,454,454,454,451,232,221,227,221,227,453,453,456,456,455,455,452,452,227,451,232,221,227,453,453,453,453,456,456,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,453,456,456,455,455,221,227,456,456,457,457,457,457,457,457,457,457,457,457,457,457,457,457,457,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,452,453,453,452,452,452,452,453,453,456,456,452,452,453,453,452,452,454,454,221,227,453,453,453,453,227,454,454,454,454,456,456,454,454,221,227,452,452,457,0,232,453,453,452,452,452,452,452,452,451,232,221,227,451,232,221,227,451,232,221,227,452,452,453,453,221,227,227,452,452,241,242,241,242,241,242,241,242,241,242,241,242,241,242,241,242,241,242,241,241,241,242,241,242,241,242,0,241,241,242,0,241,242,241,242,241,242,241,242,71,71,71,0,71,71,71,71,71,71,71,71,71,71,71,71,71,243,243,243,243,243,231,231,0,240,231,81,86,243,243,243,243,243,243,243,243,0,0,49,248,43,248,0,254,0,243,243,243,243,243,243,243,243,228,231,458,459,97,251,0,251,231,0,234,47,231,231,240,47,231,0,44,246,0,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,231,88,248,0,231,251,97,231,251,234,47,248,248,234,234,248,243,243,243,243,246,0,58,0,0,0,0,0,0,243,243,243,243,243,243,243,243,247,0,231,231,88,0,226,45,243,243,248,231,248,231,85,95,240,0,0,243,243,243,255,45,0,251,235,97,243,255,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,250,97,0,458,459,222,0,0,248,0,225,0,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,0,93,248,251,246,231,243,243,231,247,231,231,231,231,58,225,226,86,234,235,248,231,231,231,231,243,243,243,243,243,243,235,0,0,243,243,243,243,243,243,243,243,243,243,243,251,251,251,251,251,251,251,222,0,0,231,255,251,251,251,243,243,245,245,245,245,0,44,243,243,88,225,248,251,250,97,93,49,231,243,243,243,243,243,243,243,243,243,243,243,243,243,231,243,246,0,93,93,93,231,248,234,234,246,81,458,459,93,93,93,97,0,255,231,0,243,243,243,243,243,243,231,0,248,254,0,0,0,93,93,93,88,248,248,234,234,248,226,243,228,240,0,0,231,251,0,85,95,251,251,251,243,243,243,231,231,243,243,231,231,44,243,252,88,228,244,44,245,243,44,44,44,88,43,47,49,52,81,44,243,231,58,246,247,233,234,235,236,248,225,240,249,250,226,228,251,222,252,238,85,86,239,89,97,93,253,94,254,95,255,45,44,44,243,252,44,44,245,245,245,245,245,245,245,245,44,44,44,243,44,52,88,43,47,49,52,81,44,243,231,58,246,247,233,234,235,236,248,225,240,249,250,226,228,251,222,252,238,85,86,239,89,97,93,253,94,254,95,255,245,45,244,88,43,47,49,52,81,44,243,231,58,246,247,233,234,235,236,248,225,240,249,250,226,228,251,222,252,238,85,86,239,89,97,93,253,94,254,95,255,245,45,244,44,44,252,44,239,44,44,244,88,43,47,49,52,81,44,243,231,58,246,247,233,234,235,236,248,225,240,249,250,226,228,251,222,252,238,85,86,239,89,97,93,253,94,254,95,255,45,88,43,47,49,52,81,44,243,231,58,246,247,233,234,235,236,248,225,240,249,250,226,228,251,222,252,238,85,86,239,89,97,93,253,94,254,95,255,45,52,245,245,44,44,44,44,44,252,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,88,43,47,49,52,81,44,231,58,233,236,225,240,228,251,222,238,85,86,239,89,97,253,94,95,245,244,244,253,245,44,44,249,44,253,252,245,88,88,43,47,49,52,81,44,243,231,58,246,247,233,234,235,236,248,225,240,249,250,226,228,228,251,251,222,252,238,85,86,239,89,97,93,253,94,254,95,255,45,88,43,47,49,52,81,44,243,231,58,246,247,233,234,235,236,248,225,240,249,250,226,228,251,222,252,238,85,86,239,89,97,93,253,94,254,95,255,45,245,252,44,44,88,43,47,49,52,81,44,243,231,231,58,246,247,233,234,235,236,248,225,240,249,250,226,228,251,222,252,238,85,86,239,89,97,93,253,94,254,95,255,245,245,245,245,45,44,88,88,43,47,49,49,52,52,52,81,81,81,81,44,44,44,44,243,243,243,231,58,58,246,247,233,233,233,233,233,234,234,235,236,236,236,236,236,248,225,225,225,225,240,240,240,240,240,240,249,250,226,226,226,228,228,228,228,251,222,222,222,222,222,222,222,222,222,222,222,252,252,238,238,238,238,238,85,86,86,239,239,89,89,89,97,93,253,94,94,94,254,95,95,255,245,45,244,245,245,245,245,245,245,44,44,243,44,44,88,43,49,52,44,243,231,58,247,234,235,236,248,249,226,228,251,222,238,85,86,239,89,97,93,94,95,44,44,44,44,44,243,44,44,244,44,44,243,243,44,44,245,52,245,245,88,43,47,49,52,81,44,243,231,58,246,247,233,234,235,236,248,225,240,249,250,226,228,251,222,252,238,85,86,239,89,97,93,253,94,254,95,255,245,45,244,245,245,239,245,226,88,245,245,44,44,244,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,244,244,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,88,228,251,244,44,44,244,244,244,244,244,244,52,252,239,89,253,94,245,244,44,44,44,44,44,44,44,44,44,44,44,88,43,47,49,52,81,44,231,58,246,247,233,234,235,236,248,225,240,249,250,226,228,251,222,252,238,85,86,239,89,97,93,253,94,254,95,88,88,228,228,251,251,44,44,244,44,44,44,253,44,228,222,44,243,44,44,243,245,244,44,243,44,243,244,44,44,44,44,88,44,58,93,94,95,44,244,44,44,245,88,43,49,52,44,243,231,58,247,234,235,236,248,249,226,228,251,222,238,85,86,239,89,97,93,94,95,244,44,44,44,44,44,44,44,52,44,44,249,245,245,245,44,44,244,44,253,88,88,43,47,49,52,81,44,243,231,58,246,247,233,234,235,236,248,225,240,249,250,226,228,251,222,252,238,85,86,239,89,97,93,253,94,254,95,255,45,222,228,251,88,231,231,251,245,44,44,88,228,251,88,43,47,49,52,81,44,243,231,58,246,247,233,234,235,236,248,225,240,249,250,226,228,251,222,252,238,85,86,239,89,97,93,253,94,254,95,255,245,45,244,88,43,47,49,52,81,44,243,231,58,246,247,233,234,235,236,248,225,240,249,250,226,228,251,222,252,238,85,86,239,89,97,93,253,94,254,95,255,245,45,244,44,88,43,47,49,52,81,44,243,231,58,246,247,233,234,235,236,248,225,240,249,250,226,228,251,222,252,238,85,86,239,89,97,93,253,94,254,95,255,245,45,244,245,44,44,44,44,239,89,94,52,239,89,94,52,44,44,228,460,460,461,461,0,0,266,266,266,266,266,266,266,266,266,37,266,266,266,266,266,0,280,0,293,0,296,0,280,295,0,281,0,0,0,293,293,293,293,293,0,292,292,0,291,273,282,0,0,269,0,269,269,273,289,269,0,288,287,276,290,270,269,0,0,0,269,0,0,269,269,269,281,293,0,0,280,296,273,270,269,291,292,292,292,292,292,273,0,0,0,0,273,273,0,0,269,0,288,287,288,287,281,295,296,290,269,269,276,0,293,293,293,295,292,292,292,282,0,0,280,0,269,269,293,292,278,267,267,271,271,267,271,272,271,273,270,298,275,53,53,268,280,281,282,286,287,273,274,278,290,98,276,291,292,293,294,295,296,277,98,278,53,273,273,273,273,273,273,273,273,278,277,272,298,267,277,268,280,281,282,271,283,284,285,269,286,287,273,288,274,289,278,290,98,275,276,53,291,292,293,294,295,296,272,298,267,277,268,280,281,282,271,283,284,285,269,286,287,273,288,274,289,278,290,98,275,276,53,291,292,293,294,295,296,275,267,271,267,271,98,53,267,277,268,280,281,282,271,283,284,285,286,287,273,288,274,289,278,290,98,275,276,53,291,292,293,294,295,296,277,268,280,281,282,271,283,284,285,286,287,273,288,274,289,278,290,98,275,276,53,291,292,293,294,295,296,53,53,268,286,290,275,298,273,273,267,267,267,270,267,53,277,280,281,282,271,283,285,278,98,275,276,53,291,294,295,296,270,267,277,273,288,267,267,53,273,268,280,281,282,286,287,273,274,278,290,98,276,291,292,293,294,295,296,268,280,281,282,286,287,273,274,278,290,98,276,291,292,293,294,295,296,272,273,267,275,267,267,274,267,277,268,280,281,282,283,284,285,269,269,286,287,273,273,273,273,273,288,274,289,278,290,98,275,276,53,291,292,293,294,295,296,275,288,274,272,298,267,277,268,280,281,282,271,283,284,285,269,269,269,269,286,287,273,288,288,288,288,274,289,278,278,278,290,98,275,276,53,291,292,293,294,295,296,273,273,273,273,273,273,278,267,267,267,267,267,283,268,280,281,282,286,287,273,274,292,293,294,267,277,283,274,278,278,278,98,275,284,267,267,275,98,98,273,267,273,273,272,298,267,277,268,280,281,282,271,283,284,285,269,286,287,273,288,274,289,278,290,98,275,276,53,291,292,293,294,295,296,273,98,98,273,278,273,53,277,273,273,275,275,275,275,53,53,275,275,275,267,267,267,271,267,271,275,53,53,98,272,267,274,98,53,294,98,267,273,277,268,286,278,290,98,276,292,293,294,295,296,267,278,98,53,53,284,278,275,275,267,53,277,273,270,0,272,267,267,267,271,271,267,278,278,278,278,267,98,53,53,285,285,267,267,267,98,267,270,267,273,278,278,275,275,53,275,275,275,274,267,275,275,275,275,275,275,275,267,270,267,275,275,275,267,272,274,53,267,98,267,98,53,275,267,267,273,273,273,285,285,275,275,278,98,277,268,280,281,282,271,283,284,285,286,287,273,288,274,289,278,290,98,275,276,53,291,292,293,294,295,296,269,269,273,267,98,267,98,272,298,267,277,268,280,281,282,271,283,284,285,269,286,287,273,288,288,274,289,278,290,98,275,276,53,291,292,293,294,295,296,272,298,267,277,268,280,281,282,271,283,284,285,269,286,287,273,288,274,289,278,290,98,275,276,53,291,292,293,294,295,296,272,298,267,277,268,280,281,282,271,283,284,285,269,286,287,273,288,274,289,278,290,98,275,276,53,291,292,293,294,295,296,273,270,267,277,53,277,278,267,277,283,274,275,294,275,275,275,275,275,275,275,275,275,275,275,275,275,275,283,285,285,283,285,285,462,133,0,131,133,133,131,120,120,168,0,113,113,131,140,0,0,0,140,443,0,131,0,0,0,0,0,131,0,0,131,131,0,0,0,0,0,0,70,70,70,70,0,0,70,70,70,70,70,70,140,131,133,127,133,133,133,127,133,133,127,133,133,133,127,133,140,0,0,443,131,140,0,142,0,0,131,135,131,0,0,131,152,0,133,127,133,133,127,133,0,133,127,133,0,0,133,127,133,133,127,133,0,133,127,133,0,0,120,131,131,133,140,135,131,120,120,120,120,444,120,190,142,0,120,120,120,0,119,152,190,190,152,142,0,0,120,120,120,142,190,0,142,152,0,0,142,445,152,120,0,119,0,0,0,120,120,120,120,0,0,152,142,190,152,152,446,446,119,0,0,152,152,190,120,120,120,120,152,142,190,142,142,0,171,0,0,0,0,0,0,0,0,0,447,0,176,0,176,175,0,175,175,0,175,176,176,0,0,0,175,176,176,179,140,0,181,180,140,0,443,182,180,179,180,179,0,0,0,181,140,0,0,140,182,180,443,140,0,0,182,182,140,181,0,0,448,448,125,157,0,0,157,0,125,157,157,0,125,157,0,0,125,167,167,119,167,167,119,119,167,167,0,164,189,0,0,164,164,164,164,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,189,0,0,0,189,0,0,0,189,189,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,189,0,0,0,0,0,0,0,0,0,0,189,0,0,0,189,0,189,189,0,0,0,169,169,169,0,143,143,143,143,0,0,0,0,0,0,0,0,0,0,0,301,301,463,301,301,464,301,301,301,316,311,312,313,314,301,316,311,312,313,314,301,301,465,466,467,301,301,301,301,311,312,301,301,301,301,301,301,301,301,311,312,313,314,301,316,311,312,313,314,301,301,301,301,301,301,301,301,465,466,467,301,464,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,316,311,312,313,314,301,301,301,316,311,312,313,314,301,301,316,311,301,301,301,301,316,311,312,313,314,311,312,311,312,301,301,301,301,301,301,301,301,301,301,301,464,301,463,301,311,312,313,301,465,466,467,301,301,301,301,301,301,301,301,301,316,311,312,313,314,301,316,311,312,313,314,301,316,311,312,313,314,301,301,465,466,467,301,464,301,324,0,0,324,324,0,323,323,323,323,323,290,270,270,0,324,0,0,290,324,0,323,324,324,323,324,0,0,270,320,321,306,323,320,321,322,324,307,306,323,320,321,322,324,307,306,323,322,306,323,322,306,323,270,320,321,322,306,323,270,320,321,320,306,323,306,323,322,324,307,306,323,320,321,322,324,307,306,323,323,320,321,322,324,307,306,323,320,307,306,320,320,306,270,320,321,270,320,321,306,320,270,320,321,323,322,306,323,323,320,321,322,324,307,306,323,320,321,322,324,307,306,323,320,321,322,324,307,306,323,306,270,320,321,306,306,306,468,469,470,468,471,472,473,474,474,469,470,468,468,468,0,0,0,0,0,0,0,0,0,0,0,0,0,0,475,476,300,302,302,300,300,302,302,300,300,302,300,0,302,300,477,477,477,477,478,478,477,477,477,477,302,300,479,302,300,480,480,302,300,477,477,477,477,479,302,300,481,482,475,476,302,300,300,302,300,302,300,302,300,302,300,302,300,302,300,302,300,302,300,302,300,302,300,302,302,302,302,300,300,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,302,300,481,482,475,476,302,300,302,300,302,302,302,300,300,300,302,300,302,300,483,302,300,300,484,302,300,300,302,302,300,302,302,300,302,300,302,300,302,300,481,482,475,476,302,300,300,300,302,302,300,300,302,302,300,300,302,300,302,300,302,300,302,300,302,300,302,300,302,300,485,0,0,0,0,0,0,0,0,0,0,0,0,486,487,328,303,303,329,329,303,303,329,329,327,328,329,327,328,303,329,303,329,327,328,303,329,303,329,327,328,303,329,488,489,486,487,327,328,328,328,327,328,303,329,327,328,303,329,327,328,303,329,327,328,303,329,327,328,303,329,327,328,303,329,303,303,329,303,329,327,328,303,329,327,328,303,329,327,327,327,327,328,328,303,329,327,327,327,327,328,328,328,328,328,328,328,328,303,303,303,329,329,329,488,489,486,487,327,328,329,329,327,328,303,329,327,327,327,328,328,328,303,329,327,328,303,329,327,328,327,328,303,329,328,329,327,328,303,329,329,328,303,303,329,303,303,329,327,328,303,329,327,328,327,328,303,329,488,489,486,487,327,328,328,328,303,303,329,329,303,303,329,329,303,329,327,328,303,329,327,328,327,328,327,328,303,329,327,328,303,329,327,328,303,329,0,0,0,68,344,344,344,344,344,68,344,344,344,344,68,68,344,68,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,344,378,0,0,0,0,0,0,490,0,0,377,491,0,490,492,493,399,493,0,0,0,372,490,490,0,0,494,380,380,490,0,0,372,490,0,0,490,0,490,376,383,381,493,0,0,494,380,380,490,0,0,0,0,0,0,0,0,493,0,381,490,0,0,493,399,0,378,491,490,0,377,0,0,0,0,0,0,490,0,0,0,491,491,0,381,490,490,490,492,380,382,492,380,382,495,491,492,382,490,495,382,491,491,382,0,0,0,0,0,490,0,490,0,399,0,0,0,0,0,0,0,380,382,490,493,0,0,376,383,0,0,0,349,352,372,373,376,377,378,379,380,381,382,383,385,367,492,386,387,388,389,357,370,384,371,347,390,358,493,351,391,364,350,343,363,369,491,494,392,393,394,368,400,490,353,395,495,359,362,365,372,396,397,398,373,374,399,355,375,361,349,348,360,376,377,366,352,378,379,354,380,381,382,345,356,383,385,367,492,386,387,388,389,357,370,384,371,347,390,358,493,351,391,364,350,343,363,369,491,494,392,393,394,368,400,490,353,395,495,359,362,365,372,396,397,398,373,374,399,355,375,361,349,348,360,376,377,366,352,378,379,354,380,381,382,345,356,383,372,373,374,375,376,377,378,379,380,381,382,383,372,373,374,375,376,377,378,379,380,381,382,383,0,375,375,400,357,361,349,360,372,374,383,370,384,371,352,385,367,386,387,388,389,357,370,384,371,347,390,358,351,391,364,350,343,363,369,392,393,394,368,353,395,359,362,365,396,397,398,373,355,361,349,348,360,366,352,354,345,356,372,373,376,377,378,379,380,381,382,383,372,373,376,377,378,379,380,381,382,383,385,367,386,357,347,358,391,364,350,363,369,368,353,362,365,396,397,398,373,374,355,375,361,349,348,360,366,352,354,345,356,372,373,374,399,376,377,378,379,380,381,382,383,385,367,492,386,387,388,389,357,370,384,371,347,390,358,493,351,391,364,350,343,363,369,491,494,392,393,394,368,400,490,353,395,495,359,362,365,372,396,397,398,373,374,399,355,375,361,349,348,360,376,377,366,352,378,379,354,380,381,382,345,356,383,400,343,379,375,375,367,385,367,492,386,387,388,389,357,370,384,371,347,390,358,493,351,391,364,350,343,363,369,491,494,392,393,394,368,400,490,353,395,495,359,362,365,372,396,397,398,373,374,399,355,375,361,349,348,360,376,377,366,352,378,379,354,380,381,382,345,356,383,374,0,0,379,385,367,386,387,388,389,357,370,384,371,347,390,358,351,391,364,350,343,363,369,392,393,394,368,400,353,395,359,362,365,396,397,398,373,355,361,349,348,360,366,352,354,345,356,352,0,375,0,374,375,376,381,383,375,375,0,372,373,374,375,376,377,378,379,380,381,382,383,385,367,492,386,387,388,389,357,370,384,371,347,390,358,493,351,391,364,350,343,363,369,491,494,392,393,394,368,400,490,353,395,495,359,362,365,372,396,397,398,373,374,399,355,375,361,349,348,360,376,377,366,352,378,379,354,380,381,382,345,356,383,385,367,492,386,387,388,389,357,370,384,371,347,390,358,493,351,391,364,350,343,363,369,491,494,392,393,394,368,400,490,353,395,495,359,362,365,372,396,397,398,373,374,399,355,375,361,349,348,360,376,377,366,352,378,379,354,380,381,382,345,356,383,385,367,492,386,387,388,389,357,370,384,371,347,390,358,493,351,391,364,350,343,363,369,491,494,392,393,394,368,400,490,353,395,495,359,362,365,372,396,397,398,373,374,399,355,375,361,349,348,360,376,377,366,352,378,379,354,380,381,382,345,356,383,343,0,379,401,402,403,404,405,406,407,408,409,401,402,403,404,405,406,407,408,409,401,402,403,404,405,406,407,408,409,401,402,403,404,405,406,407,408,409,401,402,403,404,405,406,407,408,409,401,402,403,404,405,406,407,408,409,401,402,403,404,405,406,407,408,409,0,401,402,403,404,405,406,407,408,409,401,402,403,404,405,406,407,408,409,401,402,403,404,405,406,407,408,409,0,401,402,403,404,405,406,407,408,409,0,0,401,402,403,404,405,406,407,408,409,0,0,0,0,0,401,402,403,404,405,406,407,408,409,401,402,403,404,405,406,407,408,409,401,402,403,404,405,406,407,408,409,401,402,403,404,405,406,407,408,409,401,402,403,404,405,406,407,408,409,410,411,410,411,410,411,410,411,410,411,410,411,410,411,410,411,410,411,410,410,410,411,410,411,0,410,411,0,410,410,411,410,411,410,411,410,411,410,411,412,412,412,412,412,412,412,412,412,412,412,412,0,412,412,412,412,412,0,0,417,417,418,0,0,0,419,0,418,0,417,419,418,417,417,0,417,0,413,417,418,419,417,418,416,413,419,414,415,417,418,416,413,419,414,415,413,414,415,416,417,418,416,413,419,414,415,417,418,416,413,419,414,415,0,413,417,419,417,417,418,419,417,418,419,417,418,416,413,419,414,417,418,416,413,419,414,415,414,415,417,418,416,413,419,414,415,416,415,413,414,416,415,413,414,416,413,414,415,413,413,496,416,413,414,415,414,415,418,416,496,415,417,418,416,413,419,414,415,417,418,416,413,419,414,415,417,418,416,413,419,414,415,417,418,416,413,419,414,415,416,413,414,418,416,497,497,420,421,420,421,420,421,420,421,420,421,420,421,420,421,420,421,420,421,420,421,420,421,420,421,420,421,0,420,421,0,420,421,420,421,420,421,420,421,420,421,420,421,422,423,424,422,423,424,422,423,424,422,423,424,422,423,424,422,423,424,422,423,424,422,423,424,422,423,424,422,423,422,423,422,423,424,422,423,424,0,422,423,424,0,0,422,423,422,423,424,422,423,424,422,423,424,422,423,424,422,423,424,425,426,427,428,429,430,431,432,425,426,427,428,429,430,431,432,425,426,427,428,429,430,431,432,425,426,427,428,429,430,431,432,425,426,427,428,429,430,431,432,425,426,427,428,429,430,431,432,425,426,427,428,429,430,431,432,425,426,427,428,429,430,431,432,425,426,427,428,429,430,431,432,425,426,427,428,429,430,425,426,427,428,429,430,425,426,427,428,429,430,431,432,425,426,427,428,429,430,431,432,0,425,426,427,428,429,430,431,432,0,0,0,0,0,0,425,426,427,428,429,430,425,426,427,428,429,430,431,432,425,426,427,428,429,430,431,432,425,426,427,428,429,430,431,432,425,426,427,428,429,430,431,432,425,426,427,428,429,430,431,432,0,433,433,433,433,0,83,433,433,433,433,433,433,83,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,433,0,0,498,83,433,83,433,83,433,83,433,498,83,433,83,83,433,498,498,83,433,498,498,498,498,498,498,498,83,433,498,83,433,83,433,83,433,498,498,499,500],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-2],[[1,[-1,-2]]],2,2],[[-1,-2],[[1,[-1,-2]]],2,2],[-1,3,[]],[[[5,[-1,4]],-2],[],2,2],[[[6,[-1,-2]],-3],[],[2,2],[2,2],2],[[[7,[-1]],-2],[],[2,2],2],[[[1,[-1,-2]],-3],[],[],[],2],[[[5,[-1,4]],-2],[],2,2],[[[6,[-1,-2]],-3],[],[2,2],[2,2],2],[[[8,[-1,-2]],-3],[],[],[],2],[[[7,[-1]],-2],[],[2,2],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[5,[-1,-2]]],[[5,[-1,-2]]],2,[]],[[[9,[-1,-2]]],[[9,[-1,-2]]],2,[]],[[[10,[-1,-2]]],[[10,[-1,-2]]],2,[]],[[[11,[-1]]],[[11,[-1]]],[]],[[[6,[-1,-2]]],[[6,[-1,-2]]],12,12],[[[13,[-1]]],[[13,[-1]]],[]],[[[14,[-1,-2]]],[[14,[-1,-2]]],[],[]],[[[15,[-1,-2]]],[[15,[-1,-2]]],12,12],[[[8,[-1,-2]]],[[8,[-1,-2]]],12,12],[[[7,[-1]]],[[7,[-1]]],12],[[[1,[-1,-2]]],[[1,[-1,-2]]],12,12],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[],[[13,[-1]]],16],[[],[[14,[-1,-2]]],16,16],[[[5,[-1,-2]],17],18,2,[]],[[[9,[-1,-2]],17],18,2,[]],[[[10,[-1,-2]],17],18,2,[]],[[[11,[-1]],17],18,[]],[[[6,[-1,-2]],17],18,2,2],[[[13,[-1]],17],18,[]],[[[14,[-1,-2]],17],18,[],[]],[[[15,[-1,-2]],17],18,19,19],[[[8,[-1,-2]],17],18,19,19],[[[7,[-1]],17],18,2],[[[1,[-1,-2]],17],18,19,19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,-2],[],[],20],[[-1,-2],[],[],20],[[-1,-2],21,[],20],[[-1,-2],21,[],20],[[-1,22],-2,[],[]],[[-1,22],[[21,[-2]]],[],[]],[[-1,22],[[21,[-2]]],[],[]],[[[5,[-1,-2]],-3],3,2,[],23],[[[9,[-1,-2]],-3],3,2,[],23],[[[10,[-1,-2]],-3],3,2,[],23],[[[11,[-1]],-2],3,[],23],[[[6,[-1,-2]],-3],3,24,24,23],[[[13,[-1]],-2],3,[],23],[[[14,[-1,-2]],-3],3,[],[],23],[[[15,[-1,-2]],-3],3,24,24,23],[[[8,[-1,-2]],-3],3,24,24,23],[[[7,[-1]],-2],3,24,23],[[[1,[-1,-2]],-3],3,24,24,23],[[[10,[-1,-2]]],25,[],[]],[[-1,25],[[10,[-1,-2]]],[],[]],[[-1,25],[[10,[-1,-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-1,[14,[-2]]]]],[],[]],[-1,[[6,[-1,[14,[-2]]]]],[],[]],[[-1,-2],[[5,[-1,-3]]],[],26,[]],[[-1,-2],[[5,[-1,-3]]],[],26,[]],[[-1,-2],[[9,[-1,-3]]],[],26,[]],[[-1,-2],[[9,[-1,-3]]],[],26,[]],[[-1,25],[[10,[-1,-2]]],[],[]],[-1,[[11,[-1]]],[]],[[22,-1,-2],3,2,26],[[-1,-2],[[6,[-1,-2]]],2,2],[[],[[13,[-1]]],[]],[[],[[14,[-1,-2]]],[],[]],[[-1,-2],[[15,[-1,-2]]],[],[]],[[-1,-2],[[8,[-1,-2]]],2,2],[[-1,-2],[[1,[-1,-2]]],2,2],[[-1,-2],[[8,[-1,-2]]],2,2],[[-1,-2],[[8,[-1,-2]]],2,2],[[-1,-1],4,[]],0,[-1,3,[]],[[-1,-2],[[6,[-1,-2]]],[],2],[[-1,-2],[[6,[-1,-2]]],[],2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,[[6,[-1,[13,[-2]]]]],2,[]],[-1,[[6,[-1,[13,[-2]]]]],2,[]],[[-1,-2],-3,[],29,[]],[[[5,[-1,-2]],-3],-4,2,[],29,[]],[[[9,[-1,-2]],-3],-4,2,[],29,[]],[[[10,[-1,-2]],-3],-4,2,[],29,[]],[[[11,[-1]],-2],-3,[],29,[]],[[[6,[-1,-2]],-3],-4,2,2,29,[]],[[[13,[-1]],-2],-3,[],29,[]],[[[14,[-2,-1]],-3],-4,[],[12,[30,[-1]]],29,[]],[[[15,[-1,-2]],-3],-4,[12,2],[12,2],29,[]],[[[8,[-1,-2]],-3],-4,2,2,29,[]],[[[7,[-1]],-2],-3,2,29,[]],[[[1,[-1,-2]],-3],-4,2,2,29,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[31,31],3],[[22,-1],3,[[34,[[33,[32]]]]]],[[22,-1],3,26],[[35,-1],3,26],[[22,-1],3,26],[[22,-1],[[27,[3,36]]],37],[[35,38,[21,[38]],-1],39,26],[[22,38,[21,[38]],-1],39,26],[[22,40,-1],3,41],[42,[[21,[43]]]],[42,44],[35,44],[42,[[21,[[46,[45]]]]]],[42,[[46,[47]]]],[42,48],[42,49],[42,48],[42,49],[42,44],[42,48],[42,49],[42,48],[42,49],[42,48],[35,48],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[50,51],[42,51],[35,51],[42,[[21,[[46,[52]]]]]],[42,53],0,[[-1,54],3,[]],[[35,54],3],[[22,54],3],[35,3],[42,44],[42,55],[42,55],[42,55],[42,55],[42,51],[35,51],[56,56],[[-1,-2],3,[],[]],0,0,0,[-1,[[21,[-2]]],[],[]],[42,[[21,[-1]]],[]],[35,[[21,[-1]]],[]],[22,[[21,[-1]]],[]],[[],22],[42,[[33,[57]]]],[42,58],[[42,59,53],3],[[42,59,53],3],[[42,59,53],3],[[42,59,53],3],[[42,59],3],[[42,59,53],3],[[42,59,51,[3,[48,48]]],3],[[42,59],3],[[42,59,51,[3,[48,48]],48],3],[[42,59,51,[3,[48,48]]],3],[[-1,-2],3,[],[60,61]],[[35,-1],3,[60,61]],[[56,-1],[[27,[3,62]]],[60,61]],[[22,-1],3,[60,61]],[[-1,63],3,[]],[[35,63],3],[[22,63],3],0,0,0,0,[35,64],[22,64],0,0,0,[[31,17],18],[[62,17],18],[[62,17],18],[35,3],[22,3],[35,3],[35,3],[[35,4],3],[[22,4],3],0,[42,44],0,[35,48],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[35,[[27,[65,[67,[66]]]]]],[22,56],[35,[[21,[-1]]],68],[35,4],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[35,4],[[35,-1],4,0],[35,4],[35,4],[35,4],[35,4],[35,4],[35,4],[35,4],[35,4],[35,4],[35,4],[[35,69],3],[35,[[21,[0]]]],[[56,65,70,71],[[27,[3,62]]]],[[72,65,70,71],3],[[22,69,70,71],3],[35,3],[[42,48],48],[[35,48],48],[-1,[[67,[73]]],[]],[42,74],[35,74],[[35,-1],3,29],[[35,39,-1],3,26],[[22,39,-1],3,26],[42,[[75,[0]]]],[35,[[75,[0]]]],[35,3],[22,3],[35,3],[22,3],[35,3],[22,3],[22,35],[22,72],[[76,77],22],[[78,25],31],0,[[35,25],[[21,[0]]]],[[35,77],3],[42,48],[42,44],[42,48],[42,48],0,0,[[42,48],48],[[35,48],48],[[35,-1,38],3,0],[[35,-1,69,38],3,0],[56,[[27,[3,62]]]],[35,3],[35,[[27,[3,36]]]],[22,3],[[35,69],[[21,[0]]]],[[22,69],[[21,[0]]]],[42,48],[35,48],[22,48],[[-1,-2,79],54,[],[60,61]],[[35,-1,79],54,[60,61]],[[22,-1,79],54,[60,61]],[[-1,63,79],54,[]],[[35,63,79],54],[[22,63,79],54],0,0,0,[42,44],[[-1,63],[[27,[3,3]]],[]],[[35,4],3],[[35,43],3],[[35,44],3],[[35,55],3],[[35,51],3],[[31,51],3],[[31,-1],3,[[80,[[67,[[33,[32]]]]]]]],[[31,-1],3,[[80,[[67,[[33,[48]]]]]]]],[[31,-1],3,[[80,[[67,[[33,[48]]]]]]]],[[35,4],3],[[35,81],3],[[35,65],[[27,[3,[67,[66]]]]]],[[35,82],3],[[22,[33,[69]]],3],[[35,58],3],[[35,-1],3,[[80,[83]]]],[[35,4],3],[[35,4],3],[[35,69],3],[[22,-1],3,26],[[35,40],3],[[22,40],3],[[35,55],3],[[35,84],3],[[31,77],3],[[31,77],3],[[35,69],3],[[31,77],3],[[31,77],3],[[31,77],3],[[35,48],3],[[35,-1],3,[[80,[85]]]],[[35,-1],3,[[80,[85]]]],[[35,4],3],[[35,-1],3,[[80,[86]]]],[[35,4],3],[[35,4],3],[[35,55],3],[[35,87],3],[[31,87],3],[[35,-1],3,[[80,[88]]]],[[35,-1],3,[[80,[89]]]],[[35,69],3],[[31,90],3],[[31,91],3],[[35,92],3],[[35,55],3],[[35,-1],3,[[80,[[46,[93]]]]]],[[35,94],3],[[35,-1],3,[[80,[94]]]],[[35,77],3],[[35,4],3],[[31,-1],3,[[80,[[67,[69]]]]]],[[35,95],3],[[35,76],3],[[31,-1],3,[[80,[[67,[[33,[32]]]]]]]],[[35,96],3],[[35,-1],3,[61,29]],[[56,-1],3,[61,29]],[[72,-1],3,[61,29]],[[22,-1],3,[61,29]],[[35,39],3],[[22,39],3],[[35,39],3],[[22,39],3],[42,[[21,[97]]]],[[35,69],3],[42,4],[[35,39],4],[[22,39],4],[-1,-2,[],[]],[-1,65,[]],[[-1,35],65,[]],[[35,69,4],3],[42,98],[35,98],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[35,3],[35,77],[22,77],[42,[[21,[95]]]],0,[35,76],[22,76],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,60,[]],[-1,60,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[92,92],[99,99],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[],92],[[],100],0,[[92,92],4],[[99,99],4],[[-1,60],4,[]],[[-1,60],4,[]],[[64,35,63],3],[[92,17],18],[[99,17],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[100,92],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[22,64],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[101,101],[102,102],[103,103],[104,104],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[101,101],4],[[102,102],4],[[103,103],4],[[104,104],4],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[101,17],18],[[102,17],18],[[103,17],18],[[104,17],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,22],[],[]],[[-1,22],21,[]],[[101,-1],3,23],[[102,-1],3,23],[[103,-1],3,23],[[104,-1],3,23],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],101],[[],102],[[],103],[[],104],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[[101,64,-1],-2,29,[]],[[102,64,-1],-2,29,[]],[[103,64,-1],-2,29,[]],[[104,-1],-2,29,[]],0,[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[105,105],[106,106],[107,107],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[105,105],4],[[106,106],4],[[107,107],4],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[105,17],18],[[106,17],18],[[107,17],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[105,-1],3,23],[[106,-1],3,23],[[107,-1],3,23],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],105],[[],106],[[],107],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[[105,100,-1],-2,29,[]],[[106,100,-1],-2,29,[]],[[107,-1],-2,29,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[108,108],[54,54],[109,109],[39,39],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[63,3],[110,3],[[],110],0,[[108,108],4],[[54,54],4],[[109,109],4],[[39,39],4],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[63,17],18],[[108,17],18],[[54,17],18],[[109,17],18],[[39,17],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[63,-1],3,29],[-1,63,[60,61]],0,0,[[63,108],63],0,[63,[[21,[-1]]],[60,61]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[70,48],70],[[-1,-2],3,[],111],[[[112,[-1]],-2],3,[113,114],111],[[[115,[-1]],-2],3,113,111],[[[116,[-1]],-2],3,[113,114],111],[[[117,[-1]],-2],3,113,111],[[-1,-1,-2],3,[],111],[[[112,[-1]],[112,[-1]],-2],3,[113,114],111],[[[115,[-1]],[115,[-1]],-2],3,113,111],[[[116,[-1]],[116,[-1]],-2],3,[113,114],111],[[[117,[-1]],[117,[-1]],-2],3,113,111],[[-1,-2,-3],3,[],111,111],[[[112,[-1]],-2,-3],3,[113,114],111,111],[[[115,[-1]],-2,-3],3,113,111,111],[[[116,[-1]],-2,-3],3,[113,114],111,111],[[[117,[-1]],-2,-3],3,113,111,111],[[-1,-2],3,[],111],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,[[33,[32]]],[]],[70,[[33,[32]]]],[[[118,[-1,-2]]],[[119,[33]]],120,[[34,[33]],121]],[70,[[21,[[119,[[33,[48]]]]]]]],[[[118,[-1,-2]]],[[119,[33]]],120,[[122,[33]],121]],[70,[[21,[[119,[[33,[123]]]]]]]],[70,[[21,[[119,[[33,[32]]]]]]]],[70,[[21,[[118,[[115,[123]],[46,[123]]]]]]]],[70,[[21,[[118,[[115,[32]],[46,[32]]]]]]]],[70,[[21,[[118,[[117,[123]],[46,[123]]]]]]]],[70,[[21,[[118,[[117,[32]],[46,[32]]]]]]]],[[[119,[-2]]],[[119,[[33,[-1]]]]],[],[[122,[[33,[-1]]]]]],[70,[[21,[[118,[[115,[123]],[46,[123]]]]]]]],[70,[[21,[[118,[[115,[32]],[46,[32]]]]]]]],[70,[[21,[[118,[[117,[123]],[46,[123]]]]]]]],[70,[[21,[[118,[[117,[32]],[46,[32]]]]]]]],[70,[[21,[[118,[[112,[123]],[46,[123]]]]]]]],[70,[[21,[[118,[[112,[48]],[46,[48]]]]]]]],[70,[[21,[[118,[[112,[32]],[46,[32]]]]]]]],[70,[[21,[[118,[[116,[123]],[46,[123]]]]]]]],[70,[[21,[[118,[[116,[48]],[46,[48]]]]]]]],[70,[[21,[[118,[[116,[32]],[46,[32]]]]]]]],[[[119,[-2]]],[[33,[-1]]],[],[[122,[[33,[-1]]]]]],[[[118,[-1,-2]]],-2,120,121],[[[119,[-2]]],[[119,[[33,[-1]]]]],[],[[34,[[33,[-1]]]]]],[70,[[21,[[118,[[112,[123]],[46,[123]]]]]]]],[70,[[21,[[118,[[112,[48]],[46,[48]]]]]]]],[70,[[21,[[118,[[112,[32]],[46,[32]]]]]]]],[70,[[21,[[118,[[116,[123]],[46,[123]]]]]]]],[70,[[21,[[118,[[116,[48]],[46,[48]]]]]]]],[70,[[21,[[118,[[116,[32]],[46,[32]]]]]]]],[[[119,[-2]]],[[33,[-1]]],[],[[34,[[33,[-1]]]]]],[[[119,[-1]]],[[27,[[124,[33,-2]],125]]],[[34,[33]]],120],[[[119,[-1]]],[[27,[[126,[33,-2]],125]]],[[122,[33]]],120],[[[119,[-1]]],[[27,[[124,[33,-2]],125]]],[[122,[33]]],120],[127,123],[[-1,-1],3,[]],[[[112,[-1]],[112,[-1]]],3,[113,114]],[[[115,[-1]],[115,[-1]]],3,113],[[[116,[-1]],[116,[-1]]],3,[113,114]],[[[117,[-1]],[117,[-1]]],3,113],[[-1,128,128],3,[]],[[[118,[-1,-2]],128,128,-1],3,120,[121,129]],[[70,128,128,[116,[32]]],3],[[70,48],70],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[3,[128,128,128,128]]],[]],[[[119,[-1]]],[[3,[32,128,128]]],[]],[[[118,[-1,-2]]],[[3,[128,128,128,128]]],120,[121,121]],[70,[[3,[128,128,128,128]]]],[[70,96],70],0,[130,[[118,[[116,[32]],[46,[32]]]]]],[130,[[118,[[116,[32]],[46,[32]]]]]],[127,32],[131,4],[131,4],[[[132,[-1]],128,128,128,128],3,[]],[127,32],[133,32],[-1,33,[]],[[[112,[-1]]],[[33,[-1]]],[113,114]],[[[115,[-1]]],[[33,[-1]]],113],[[[116,[-1]]],[[33,[-1]]],[113,114]],[[[117,[-1]]],[[33,[-1]]],113],[-1,3,[]],[[[112,[-1]]],[[3,[-1,-1,-1,-1]]],[113,114]],[[[115,[-1]]],[[3,[-1,-1,-1,-1]]],113],[[[116,[-1]]],[[3,[-1,-1,-1,-1]]],[113,114]],[[[117,[-1]]],[[3,[-1,-1,-1,-1]]],113],[-1,33,[]],[[[112,[-1]]],[[33,[-1]]],[113,114]],[[[115,[-1]]],[[33,[-1]]],113],[[[116,[-1]]],[[33,[-1]]],[113,114]],[[[117,[-1]]],[[33,[-1]]],113],[[[119,[-1]]],[[119,[-1]]],12],[130,130],[134,134],[[[118,[-1,-2]]],[[118,[-1,-2]]],120,[121,12]],[127,127],[133,133],[[[112,[-1]]],[[112,[-1]]],12],[[[115,[-1]]],[[115,[-1]]],12],[[[116,[-1]]],[[116,[-1]]],12],[[[117,[-1]]],[[117,[-1]]],12],[70,70],[131,131],[135,135],[136,136],[[[137,[-1]]],[[137,[-1]]],138],[[[132,[-1]]],[[132,[-1]]],12],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],0,[139,[[27,[[46,[130]],140]]]],[70,127],0,[-1,127,[]],[[[118,[-1,-2]]],[[118,[-3,46]]],120,121,[120,[141,[-1]]]],[[-1,-2,128,128],[[27,[3,140]]],[],142],[[-1,143,128,128],4,[]],[[[118,[-1,-2]],143,128,128],4,120,[121,129]],[[70,128,128,128,128],70],[[70,128,128,128,128],70],[136,144],[[],[[118,[-1,-2]]],120,16],[[],70],[130,134],[[[118,[-1,-2]]],[],120,121],[[[132,[-1]]],[],121],[[[118,[-1,-2]]],[],120,[121,129]],[[[132,[-1]]],[],129],[-1,[[3,[128,128]]],[]],[-1,[[3,[128,128]]],[]],[[[118,[-1,-2]]],[[3,[128,128]]],120,[121,121]],[[[118,[-1,-2]]],[[3,[128,128]]],120,121],[70,[[3,[128,128]]]],[[[118,[-1,-2]]],[[145,[-1]]],120,121],[[[118,[-1,-2]]],[[146,[-1]]],120,[121,129]],[[[118,[-1,-2]]],[[147,[-1]]],120,121],[[[118,[-1,-2]]],[[148,[-1]]],120,[121,129]],[[134,134],4],[[[118,[-1,-2]],[118,[-1,-2]]],4,[149,120],149],[[127,127],4],[[133,133],4],[[[112,[-1]],[112,[-1]]],4,149],[[[115,[-1]],[115,[-1]]],4,149],[[[116,[-1]],[116,[-1]]],4,149],[[[117,[-1]],[117,[-1]]],4,149],[[70,70],4],[[131,131],4],[[135,135],4],[[136,136],4],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],0,[[[118,[[115,[32]],[46,[32]]]],[33,[[3,[32,32,32]]]],[21,[32]]],[[118,[[116,[32]],[46,[32]]]]]],[131,[[33,[69]]]],[[[119,[-1]]],[[3,[25,25,25]]],[]],[[70,[33,[48]]],70],[[[119,[-1]],25],4,[]],0,[70,70],[70,70],[[140,17],[[27,[3,150]]]],[[140,17],[[27,[3,150]]]],[[[119,[-1]],17],[[27,[3,150]]],19],[[134,17],[[27,[3,150]]]],[[[118,[-1,-2]],17],[[27,[3,150]]],[19,120],19],[[127,17],[[27,[3,150]]]],[[133,17],[[27,[3,150]]]],[[[112,[-1]],17],[[27,[3,150]]],19],[[[115,[-1]],17],[[27,[3,150]]],19],[[[116,[-1]],17],[[27,[3,150]]],19],[[[117,[-1]],17],[[27,[3,150]]],19],[[70,17],[[27,[3,150]]]],[[131,17],[[27,[3,150]]]],[[135,17],[[27,[3,150]]]],[[136,17],[[27,[3,150]]]],[[[137,[-1]],17],[[27,[3,150]]],[19,138]],[-1,-1,[]],[36,140],[-1,-1,[]],[125,140],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[127,133],[-1,-1,[]],[-1,-1,[]],[[[151,[-1]]],[[112,[-1]]],[]],[-1,-1,[]],[[[151,[-1]]],[[115,[-1]]],[]],[-1,-1,[]],[[[151,[-1]]],[[116,[-1]]],[]],[-1,-1,[]],[[[151,[-1]]],[[117,[-1]]],[]],[[[118,[[117,[123]],[46,[123]]]]],70],[[[118,[[115,[32]],[46,[32]]]]],70],[-1,-1,[]],[[[118,[[112,[48]],[46,[48]]]]],70],[[[118,[[117,[32]],[46,[32]]]]],70],[[[118,[[115,[48]],[46,[48]]]]],70],[[[118,[[116,[123]],[46,[123]]]]],70],[[[118,[[116,[48]],[46,[48]]]]],70],[[[118,[[115,[123]],[46,[123]]]]],70],[[[118,[[112,[32]],[46,[32]]]]],70],[[[118,[[117,[48]],[46,[48]]]]],70],[[[118,[[112,[123]],[46,[123]]]]],70],[[[118,[[116,[32]],[46,[32]]]]],70],[-1,-1,[]],[-1,-1,[]],[131,135],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[],-1,[]],[[-1,-1,-1,-1],[[112,[-1]]],[113,114]],[[-1,-1,-1,-1],[[115,[-1]]],113],[[-1,-1,-1,-1],[[116,[-1]]],[113,114]],[[-1,-1,-1,-1],[[117,[-1]]],113],[-1,[[27,[70,140]]],152],[-1,[[21,[131]]],[[34,[153]]]],[[128,128,-1],[[118,[-2,46]]],111,120],[-1,[[21,[131]]],[[34,[69]]]],[[128,128],134],[[[118,[[116,[32]],[46,[32]]]],128,128,134],130],[-1,[[27,[131,140]]],[[34,[154]]]],[[128,128,-1],[[118,[-1,46]]],120],[[128,128,-1],[[21,[[118,[-2,-1]]]]],121,120],[38,134],[33,-1,[]],[[[33,[-1]]],[[112,[-1]]],[113,114]],[[[33,[-1]]],[[115,[-1]]],113],[[[33,[-1]]],[[116,[-1]]],[113,114]],[[[33,[-1]]],[[117,[-1]]],113],[33,-1,[]],[[[33,[-1]]],[[112,[-1]]],[113,114]],[[[33,[-1]]],[[115,[-1]]],113],[[[33,[-1]]],[[116,[-1]]],[113,114]],[[[33,[-1]]],[[117,[-1]]],113],[[128,128,46],[[21,[[118,[-1,46]]]]],120],[[[119,[-2]],32,128,128],[[21,[-1]]],[],[[122,[[33,[-1]]]]]],[[-1,128,128],[],[]],[[[118,[-1,-2]],128,128],-1,120,[121,121]],[[[118,[-1,-2]],128,128],-1,120,121],[[70,128,128],[[116,[32]]]],[[[118,[-1,-2]],128,128],[[21,[-1]]],120,121],[[-1,128,128],[],[]],[[[118,[-1,-2]],128,128],-1,120,[121,129]],[[[118,[-1,-2]],128,128],-1,120,[121,129]],[[70,128,128],[[116,[32]]]],[[[118,[-1,-2]],128,128],[[21,[-1]]],120,[121,129]],[[[119,[-2]],32,128,128],[[21,[-1]]],[],[[34,[[33,[-1]]]]]],[70,70],[[[33,[32]]],[[27,[131,140]]]],[[[119,[-1]]],4,[]],[127,4],[127,4],[[[118,[-1,-2]],-3],3,[24,120],24,23],[[127,-1],3,23],[[133,-1],3,23],[[[112,[-1]],-2],3,24,23],[[[115,[-1]],-2],3,24,23],[[[116,[-1]],-2],3,24,23],[[[117,[-1]],-2],3,24,23],[[131,-1],3,23],[-1,128,[]],[[[118,[-1,-2]]],128,120,121],[70,128],[[70,96],70],[-1,[[21,[[46,[32]]]]],[]],[-1,[[27,[[3,[128,128]],140]]],[[34,[154]]]],[[[119,[-2]]],[[21,[[33,[-1]]]]],[],[[122,[[33,[-1]]]]]],[[[119,[-2]]],[[21,[[33,[-1]]]]],[],[[34,[[33,[-1]]]]]],0,[[-1,128,128],4,[]],[[[119,[-1]],32,128,128],4,[]],[[[119,[-1]],32,128,128],25,[]],[[[119,[-1]],32,128,128],[[21,[25]]],[]],[[[119,[-1]],[3,[32,128,128]]],[],[[155,[25]]]],[[[118,[-1,-2]],[3,[128,128]]],-1,120,121],[[[112,[-1]],25],-1,[]],[[[115,[-1]],25],-1,[]],[[[116,[-1]],25],-1,[]],[[[117,[-1]],25],-1,[]],[[[119,[-1]],25,25,25],[[21,[25]]],[]],[[[119,[-1]],[3,[32,128,128]]],[],[[156,[25]]]],[[[118,[-1,-2]],[3,[128,128]]],-1,120,[121,129]],[[[112,[-1]],25],-1,[]],[[[115,[-1]],25],-1,[]],[[[116,[-1]],25],-1,[]],[[[117,[-1]],25],-1,[]],[[[132,[-1]]],[],121],[[[132,[-1]]],[],129],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[130,[[118,[[116,[32]],[46,[32]]]]]],[70,[[46,[32]]]],[[[118,[-1,-2]]],[[119,[-2]]],120,[[34,[33]],121]],[-1,139,[]],[-1,-2,[],[]],[-1,-2,[],[]],[70,[[118,[[115,[123]],[46,[123]]]]]],[70,[[118,[[115,[32]],[46,[32]]]]]],[70,[[118,[[117,[123]],[46,[123]]]]]],[70,[[118,[[117,[32]],[46,[32]]]]]],[[[118,[-1,-2]]],-2,120,121],[-1,[[27,[140]]],[]],[70,[[118,[[112,[123]],[46,[123]]]]]],[70,[[118,[[112,[48]],[46,[48]]]]]],[70,[[118,[[112,[32]],[46,[32]]]]]],[70,[[118,[[116,[123]],[46,[123]]]]]],[70,[[118,[[116,[48]],[46,[48]]]]]],[70,[[118,[[116,[32]],[46,[32]]]]]],[[[118,[-1,46]]],46,120],[-1,3,[]],[[[112,[-1]]],3,[113,114]],[[[115,[-1]]],3,113],[[[116,[-1]]],3,[113,114]],[[[117,[-1]]],3,113],[70,3],0,[[[119,[-1]],157],4,[]],0,[130,128],[[-1,131],[[27,[70,140]]],[158,159]],[[[33,[32]]],[[27,[70,140]]]],[[[33,[32]],131],[[27,[70,140]]]],[[-1,-2],-1,[],111],[[[112,[-1]],-2],[[112,[-1]]],[113,114],111],[[[115,[-1]],-2],[[115,[-1]]],113,111],[[[116,[-1]],-2],[[116,[-1]]],[113,114],111],[[[117,[-1]],-2],[[117,[-1]]],113,111],[[-1,-1,-2],-1,[],111],[[[112,[-1]],[112,[-1]],-2],[[112,[-1]]],[113,114],111],[[[115,[-1]],[115,[-1]],-2],[[115,[-1]]],113,111],[[[116,[-1]],[116,[-1]],-2],[[116,[-1]]],[113,114],111],[[[117,[-1]],[117,[-1]],-2],[[117,[-1]]],113,111],[[-1,-2,-3],-1,[],111,111],[[[112,[-1]],-2,-3],[[112,[-1]]],[113,114],111,111],[[[115,[-1]],-2,-3],[[115,[-1]]],113,111,111],[[[116,[-1]],-2,-3],[[116,[-1]]],[113,114],111,111],[[[117,[-1]],-2,-3],[[117,[-1]]],113,111,111],[[-1,-2],-1,[],111],0,[[[119,[-1]]],[[21,[25]]],[]],[[[67,[160]]],139],[[[118,[[116,[32]],[46,[32]]]]],130],[[128,128],[[118,[-1,46]]],120],[[-1,128,128,128,128],[[132,[-1]]],[]],[[128,128],70],[[128,128],70],[[128,128],70],[[128,128],70],[[128,128],70],[[128,128],70],[[128,128],70],[[128,128],70],[[128,128],70],[[128,128],70],[139,[[21,[[27,[130,140]]]]]],[[[137,[-1]]],[[21,[[3,[128,128]]]]],142],[134,[[3,[128,128]]]],[-1,[[27,[70,140]]],[[34,[154]]]],[-1,133,[]],[[134,134],[[21,[161]]]],[-1,[[137,[-1]]],138],[[[118,[-1,-2]]],[[162,[-1]]],120,121],[[[118,[-1,-2]]],[[163,[-1]]],120,[121,129]],[[-1,128,128],3,[]],[[[118,[-1,-2]],128,128,-1],3,120,[121,129]],[[[118,[-1,-2]],128,128,-1],3,120,[121,129]],[[70,128,128,[116,[32]]],3],[[-1,[33,[32]]],[[27,[3,140]]],[]],[[-1,[33,[32]],-2],[[27,[3,140]]],[],26],[[-1,128,128,128,128,[33,[32]]],[[27,[3,140]]],[]],[[-1,128,128,128,128,[33,[32]],-2],[[27,[3,140]]],[],26],[136,144],[[70,128,128,164],70],[[70,128,128,164],70],[[70,128,128,164],70],[70,70],[70,70],[70,70],[[[118,[-1,-2]]],[[165,[-1]]],120,121],[[[118,[-1,-2]]],[[166,[-1]]],120,[121,129]],[[[118,[-1,-2]]],167,120,121],0,[[[118,[-1,-2]],-3],[[27,[3,140]]],[168,120],121,[[34,[154]]]],[[70,-1],[[27,[3,140]]],[[34,[154]]]],[[-1,[33,[32]],128,128,127],[[27,[3,140]]],[[34,[154]]]],[[-1,[33,[32]],128,128,127,131],[[27,[3,140]]],[[34,[154]]]],[[[118,[-1,-2]],-3,131],[[27,[3,140]]],[168,120],121,[[34,[154]]]],[[70,-1,131],[[27,[3,140]]],[[34,[154]]]],[-1,144,[]],[[-1,169],[[27,[3,140]]],[]],[[[119,[-1]],32,128,128],3,[]],[140,[[21,[66]]]],[[[119,[-1]]],[[3,[25,25,25]]],[]],[[-1,128,128,128,128],[[132,[-1]]],138],[[[132,[-1]],128,128,128,128],132,129],[[70,128,128],70],[[70,128,128],70],[70,[[46,[32]]]],[[[132,[-1]]],[[118,[46]]],121],[-1,115,[]],[[[112,[-1]]],[[115,[-1]]],[113,114]],[[[115,[-1]]],[[115,[-1]]],113],[[[116,[-1]]],[[115,[-1]]],[113,114]],[[[117,[-1]]],[[115,[-1]]],113],[70,[[118,[[115,[123]],[46,[123]]]]]],[70,[[118,[[115,[48]],[46,[48]]]]]],[70,[[118,[[115,[32]],[46,[32]]]]]],[-1,117,[]],[[[112,[-1]]],[[117,[-1]]],[113,114]],[[[115,[-1]]],[[117,[-1]]],113],[[[116,[-1]]],[[117,[-1]]],[113,114]],[[[117,[-1]]],[[117,[-1]]],113],[70,[[118,[[117,[123]],[46,[123]]]]]],[70,[[118,[[117,[48]],[46,[48]]]]]],[70,[[118,[[117,[32]],[46,[32]]]]]],[131,69],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,112,[]],[[[112,[-1]]],[[112,[-1]]],[113,114]],[[[115,[-1]]],[[112,[-1]]],113],[[[116,[-1]]],[[112,[-1]]],[113,114]],[[[117,[-1]]],[[112,[-1]]],113],[70,[[118,[[112,[123]],[46,[123]]]]]],[70,[[118,[[112,[48]],[46,[48]]]]]],[70,[[118,[[112,[32]],[46,[32]]]]]],[-1,116,[]],[[[112,[-1]]],[[116,[-1]]],[113,114]],[[[115,[-1]]],[[116,[-1]]],113],[[[116,[-1]]],[[116,[-1]]],[113,114]],[[[117,[-1]]],[[116,[-1]]],113],[70,[[118,[[116,[123]],[46,[123]]]]]],[70,[[118,[[116,[48]],[46,[48]]]]]],[70,[[118,[[116,[32]],[46,[32]]]]]],[-1,65,[]],[[-1,35],65,[]],[[[119,[-2]]],[[119,[[46,[-1]]]]],12,[[34,[[33,[-1]]]]]],[130,128],[136,144],[-1,144,[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[[[119,[-1]]],[[27,[[118,[-2,-1]],[3,[125,[119,[-1]]]]]]],121,120],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[[-1,128,128],[],[]],[[[118,[-1,-2]],128,128],-1,120,[121,121]],[[-1,128,128],3,[]],[[[118,[-1,-2]],128,128,-1],3,120,[121,129]],[[70,48,96],70],[[-1,128,128,128,128],[[132,[-1]]],138],[[[132,[-1]],128,128,128,128],132,121],[-1,128,[]],[[[118,[-1,-2]]],128,120,121],[70,128],[[-1,128,128],[[119,[[33,[-2]]]]],120,113],[[-1,[33,[32]],128,128,127,-2],[[27,[3,140]]],[170,159],[[80,[135]]]],[[-1,[33,[32]],128,128,127],[[27,[3,140]]],[]],[[[118,[-1,-2]],-3,-4],[[27,[3,140]]],[168,120],121,[170,159],[[80,[135]]]],[[70,-1,-2],[[27,[3,140]]],[170,159],[[80,[135]]]],[[[118,[-1,-2]],-3],[[27,[3,140]]],[168,120],121,171],[[70,-1],[[27,[3,140]]],171],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[162,[-1]]],[[162,[-1]]],120],[[[165,[-1]]],[[165,[-1]]],120],[[[145,[-1]]],[[145,[-1]]],120],[[[147,[-1]]],[[147,[-1]]],120],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[-1,-2,[],[]],[[[162,[-1]],17],[[27,[3,150]]],120],[[[163,[-1]],17],[[27,[3,150]]],120],[[[165,[-1]],17],[[27,[3,150]]],120],[[[166,[-1]],17],[[27,[3,150]]],120],[[[145,[-1]],17],[[27,[3,150]]],120],[[[147,[-1]],17],[[27,[3,150]]],120],[[[146,[-1]],17],[[27,[3,150]]],120],[[[148,[-1]],17],[[27,[3,150]]],120],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[162,[-1]]],25,120],[[[163,[-1]]],25,120],[[[165,[-1]]],25,120],[[[166,[-1]]],25,120],[[[145,[-1]]],25,120],[[[147,[-1]]],25,120],[[[146,[-1]]],25,120],[[[148,[-1]]],25,120],[[[162,[-1]]],[[21,[-1]]],120],[[[163,[-1]]],[[21,[-1]]],120],[[[165,[-1]]],[[21,[[162,[-1]]]]],120],[[[166,[-1]]],[[21,[[163,[-1]]]]],120],[[[145,[-1]]],[[21,[[3,[128,128,-1]]]]],120],[[[147,[-1]]],[[21,[[3,[128,[145,[-1]]]]]]],120],[[[146,[-1]]],[[21,[[3,[128,128,-1]]]]],120],[[[148,[-1]]],[[21,[[3,[128,[146,[-1]]]]]]],120],[[[162,[-1]]],[[21,[-1]]],120],[[[163,[-1]]],[[21,[-1]]],120],[[[165,[-1]]],[[21,[[162,[-1]]]]],120],[[[166,[-1]]],[[21,[[163,[-1]]]]],120],[[[162,[-1]]],[[3,[25,[21,[25]]]]],120],[[[163,[-1]]],[[3,[25,[21,[25]]]]],120],[[[165,[-1]]],[[3,[25,[21,[25]]]]],120],[[[166,[-1]]],[[3,[25,[21,[25]]]]],120],[[[145,[-1]]],[[3,[25,[21,[25]]]]],120],[[[147,[-1]]],[[3,[25,[21,[25]]]]],120],[[[146,[-1]]],[[3,[25,[21,[25]]]]],120],[[[148,[-1]]],[[3,[25,[21,[25]]]]],120],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[172,[-1]]],[[173,[-1]]],174],[-1,60,[]],[-1,60,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[175,175],[176,176],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[[172,[-1]]],127,174],[[],175],[[],176],[[[172,[-1]]],[[3,[128,128]]],174],[[[177,[-1]],[33,[32]],128,128,127],[[27,[3,140]]],170],[[175,175],4],[[176,176],4],[[-1,60],4,[]],[[-1,60],4,[]],[[175,17],[[27,[3,150]]]],[[176,17],[[27,[3,150]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[172,[-1]]],[[21,[[46,[32]]]]],174],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[173,[-1]]],139,174],[[[172,[-1]]],[[27,[140]]],174],[[[172,[-1]]],4,174],[-1,[[27,[[172,[-1]],140]]],174],[-1,[[177,[-1]]],170],[[-1,175,176],[[177,[-1]]],170],[[[178,[-1]],[33,[32]]],[[27,[25,36]]],174],[[[172,[-1]],[33,[32]]],[[27,[3,140]]],174],[[[178,[-1]],[46,[32]]],[[27,[25,36]]],174],[[[172,[-1]]],144,174],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[[-1,169],[[27,[[172,[-1]],140]]],174],[[[177,[-1]],[33,[32]],128,128,127],[[27,[3,140]]],170],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[179,179],[180,180],[181,181],[182,182],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[179,179],4],[[180,180],4],[[181,181],4],[[182,182],4],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[183,17],[[27,[3,150]]]],[[183,17],[[27,[3,150]]]],[[179,17],[[27,[3,150]]]],[[184,17],[[27,[3,150]]]],[[184,17],[[27,[3,150]]]],[[185,17],[[27,[3,150]]]],[[185,17],[[27,[3,150]]]],[[180,17],[[27,[3,150]]]],[[186,17],[[27,[3,150]]]],[[186,17],[[27,[3,150]]]],[[187,17],[[27,[3,150]]]],[[187,17],[[27,[3,150]]]],[[181,17],[[27,[3,150]]]],[[182,17],[[27,[3,150]]]],[[182,17],[[27,[3,150]]]],[183,182],[184,182],[186,182],[-1,-1,[]],[182,183],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[131,182],[154,182],[[182,179],183],[182,184],[182,186],[180,185],[181,187],[[179,-1],3,23],[[180,-1],3,23],[[181,-1],3,23],[[182,-1],3,23],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[183,179],[185,180],[187,181],[[182,-1],184,[[80,[[67,[66]]]]]],[[182,-1],186,[[80,[[67,[66]]]]]],[184,[[21,[66]]]],[185,[[21,[66]]]],[186,[[21,[66]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[-1,65,[]],[[-1,35],65,[]],[[-1,35],65,[]],[[-1,35],65,[]],[[-1,35],65,[]],[[-1,35],65,[]],[[-1,35],65,[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,60,[]],[-1,60,[]],[-1,60,[]],[[[126,[-1,-2]],128,128],3,[[122,[33]],[34,[33]]],120],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[167,[[3,[32,128,128]]]],[[[124,[-1,-2]]],[[3,[128,128,128,128]]],[[34,[33]]],120],[[[126,[-1,-2]]],[[3,[128,128,128,128]]],[[122,[33]],[34,[33]]],120],0,0,[167,167],[[[124,[-1,-2]]],[[124,[-1,-2]]],[12,[34,[33]]],[12,120]],[[[126,[-1,-2]]],[[126,[-1,-2]]],[12,[122,[33]]],[12,120]],[125,125],[157,157],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],0,[[32,128,128],167],[[[124,[-1,-2]]],[[3,[128,128]]],[[34,[33]]],120],[[[126,[-1,-2]]],[[3,[128,128]]],[[122,[33]],[34,[33]]],120],[[167,167],4],[[125,125],4],[[157,157],4],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[167,[[3,[25,25,25]]]],[[167,25],4],[[[124,[-1,-2]]],[[119,[-1]]],[[34,[33]]],120],[[[126,[-1,-2]]],[[119,[-1]]],[[122,[33]]],120],[[167,17],[[27,[3,150]]]],[[[124,[-1,-2]],17],[[27,[3,150]]],[19,[34,[33]]],[19,120]],[[[126,[-1,-2]],17],[[27,[3,150]]],[19,[122,[33]]],[19,120]],[[125,17],[[27,[3,150]]]],[[125,17],[[27,[3,150]]]],[[157,17],[[27,[3,150]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[124,[-1,-2]],32,128,128],21,[[122,[33]],[34,[33]]],120],[[[126,[-1,-2]],32,128,128],21,[[122,[33]]],120],[[[124,[-1,-2]],128,128],[],[[34,[33]]],120],[[[126,[-1,-2]],128,128],[],[[122,[33]],[34,[33]]],120],[[[126,[-1,-2]],128,128],[],[[122,[33]],[34,[33]]],120],[[[124,[-1,-2]],32,128,128],21,[[34,[33]]],120],[[[126,[-1,-2]],32,128,128],21,[[34,[33]],[122,[33]]],120],[167,4],[[167,-1],3,23],[[125,-1],3,23],[[157,-1],3,23],0,0,[[[124,[-1,-2]]],33,[[122,[33]],[34,[33]]],120],[[[126,[-1,-2]]],33,[[122,[33]]],120],[[[124,[-1,-2]]],33,[[34,[33]]],120],[[[126,[-1,-2]]],33,[[34,[33]],[122,[33]]],120],[[167,32,128,128],4],[[[124,[-1,-2]],128,128],4,[[34,[33]]],120],[[[126,[-1,-2]],128,128],4,[[122,[33]],[34,[33]]],120],[[167,32,128,128],25],[[167,32,128,128],[[21,[25]]]],[[167,25,25,25],[[21,[25]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[124,[-1,-2]]],[[119,[-1]]],[[34,[33]]],120],[[[126,[-1,-2]]],[[119,[-1]]],[[122,[33]]],120],[[167,157],4],0,[167,[[21,[25]]]],[[[124,[-1,-2]]],25,[[34,[33]]],120],[[[126,[-1,-2]]],25,[[122,[33]]],120],[[157,157],[[21,[161]]]],[[[126,[-1,-2]],128,128],3,[[122,[33]],[34,[33]]],120],[[32,128,128],167],[[[124,[-1,-2]]],-1,[[34,[33]]],120],[[[126,[-1,-2]]],-1,[[122,[33]]],120],0,[[167,32,128,128],3],[[[124,[-1,-2]],128,128],3,[[34,[33]]],120],[[[126,[-1,-2]],128,128],3,[[122,[33]]],120],[167,[[3,[25,25,25]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,65,[]],[[-1,35],65,[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[[[124,[-1,-2]]],[[27,[[126,[-1,-2]],[3,[125,[124,[-1,-2]]]]]]],[[122,[33]],[34,[33]]],120],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],0,0,0,0,0,0,0,0,0,0,0,[-1,60,[]],[[-1,48],[[118,[46]]],142],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,96],[[118,[-2,[46,[-3]]]]],142,120,113],[188,188],[164,164],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],0,[[-1,48],[[118,[-2,[46,[-3]]]]],142,120,113],[[-1,128,128,128,128],[[132,[-1]]],142],[[-1,128,128,128,128],[[132,[-1]]],142],[[[118,[-1,[46,[32]]]],-2],3,120,[189,138]],[[164,164],4],[[-1,60],4,[]],[[-1,[33,[48]]],[[118,[-2,[46,[-3]]]]],142,120,113],[-1,[[118,[46]]],142],[[-1,[118,[-2]]],[[27,[3,140]]],142,129],[-1,3,190],[-1,[[118,[46]]],142],[[-1,[118,[-2]]],[[27,[3,140]]],142,129],[-1,3,190],[[164,17],[[27,[3,150]]]],[-1,-1,[]],[-1,-1,[]],[-1,[[118,[115,46]]],142],[-1,[[118,[117,46]]],142],[-1,[[118,[-2,46]]],142,[120,[141,[115]]]],[-1,[[118,[-2,46]]],142,[120,[141,[117]]]],[-1,4,[]],[188,4],[[-1,-2,-2],3,190,120],[[-1,96],[[118,[-2,[46,[-3]]]]],142,120,113],[[[118,[-1,[46,[32]]]],-2],[[118,[[115,[32]],[46,[32]]]]],120,[189,138]],[-1,25,[]],[[188,[115,[32]]],25],[[-1,48,48],[[21,[-2]]],142,120],[[-1,48,48],[[21,[-2]]],142,120],[-1,-2,[],[]],[-1,-2,[],[]],[-1,3,190],[[-1,25],21,[]],[[188,25],21],[-1,3,[]],[[188,[115,[32]]],3],[[-1,-2,191,191],3,190,142],[[[3,[128,128]],[3,[128,128]],128,128],[[3,[128,128]]]],[[-1,-2,191,191],3,190,142],[[-1,128,128,164],[[118,[46]]],142],[-1,[[118,[46]]],142],[[-1,[118,[-2]]],[[27,[3,140]]],142,129],[-1,3,190],[-1,[[118,[46]]],142],[[-1,[118,[-2]]],[[27,[3,140]]],142,129],[-1,[[118,[46]]],142],[[-1,[118,[-2]]],[[27,[3,140]]],142,129],[[-1,48,48],[[21,[-2]]],142,120],[[-1,48,48],[[21,[-2]]],142,120],[[-1,128,128],[[118,[-2,[46,[-3]]]]],142,120,[113,114]],[[-1,-2],3,190,142],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[[-1,48,96],[[118,[-2,[46,[-3]]]]],142,120,113],[[-1,-2,-2],3,190,120],0,0,0,[[-1,96],[[118,[-2,[46,[-3]]]]],142,120,113],[[-1,96],3,190],[[-1,48],[[118,[-2,[46,[-3]]]]],142,120,113],[[-1,48],3,190],[[[118,[-1,[46,[32]]]],-2],3,120,[189,138]],[-1,[[118,[115,46]]],142],[-1,[[118,[117,46]]],142],[-1,[[118,[-2,46]]],142,[120,[141,[115]]]],[-1,[[118,[-2,46]]],142,[120,[141,[117]]]],[-1,4,[]],[[-1,96],[[118,[-2,[46,[-3]]]]],142,120,113],[[-1,96],3,190],[[[118,[-1,[46,[32]]]],-2],[[118,[[115,[32]],[46,[32]]]]],120,[189,138]],[-1,25,[]],[-1,3,190],[[-1,25],21,[]],[-1,3,[]],0,0,0,[-1,60,[]],[-1,60,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[169,128,128],[[27,[3,140]]]],[[169,192],[[27,[3,140]]]],[[[193,[-1]]],3,174],[192,192],[169,169],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[[193,[-1]]],[[27,[70,140]]],[158,159]],[[],192],[[],169],[[192,192],4],[[169,169],4],[[-1,60],4,[]],[[-1,60],4,[]],[[192,17],[[27,[3,150]]]],[[169,17],[[27,[3,150]]]],[[[193,[-1]]],[[21,[131]]],174],[[169,144],3],[[169,25],3],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[192,-1],3,23],[[169,-1],3,23],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[193,[-1]]],[[27,[[3,[128,128]],140]]],[158,159]],[[[193,[-1]]],-1,174],[[[193,[-1]],169],3,174],0,0,0,[-1,[[193,[-1]]],174],[[[193,[-1]]],3,174],[[],169],[-1,[[27,[[193,[[195,[194]]]],36]]],[[34,[154]]]],[[169,144],[[27,[3,140]]]],[[169,25],[[27,[3,140]]]],[[[193,[-1]],131],3,174],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[[-1,131],[[193,[-1]]],174],[[[193,[-1]]],[[27,[[193,[-1]],36]]],[158,159]],0,[-1,60,[]],[-1,-2,[],[]],[-1,-2,[],[]],[143,143],[[-1,-2],3,[],[]],[[143,143],4],[[-1,60],4,[]],[[143,17],[[27,[3,150]]]],[-1,-1,[]],[[143,-1],3,23],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[196,[-1]]],-1,[12,149,61,197]],[[],74],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[[74,74],74],[[74,74],3],[[74,74],74],[[74,74],3],[74,32],[[74,74],74],[[74,74],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[74,74],[198,198],[199,199],[[[200,[-1]]],[[200,[-1]]],[12,201]],[[[75,[-1]]],[[75,[-1]]],[12,201]],[202,202],[[[196,[-1]]],[[196,[-1]]],[12,149,61,197,12]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[74,74],161],[74,74],[[74,74],4],0,0,[[],74],[[],198],[[],[[200,[-1]]],201],[[],[[75,[-1]]],201],[[],202],[[],[[203,[-1]]],[12,149,61,197,16]],[[[75,[-1]],199],[[3,[48,48]]],201],[[74,74],74],[[],74],[[74,74],4],[[198,198],4],[[199,199],4],[[[200,[-1]],[200,[-1]]],4,[149,201]],[[[75,[-1]],[75,[-1]]],4,[149,201]],[[202,202],4],[[[196,[-1]],[196,[-1]]],4,[12,149,61,197]],[[[196,[-1]],-1],4,[12,149,61,197]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[[203,[-1]],35,63],3,[12,149,61,197]],[[[203,[-1]]],[[46,[[3,[204,[196,[-1]]]]]]],[12,149,61,197]],[[74,-1],3,205],[[74,17],[[27,[3,150]]]],[[74,17],[[27,[3,150]]]],[[74,17],[[27,[3,150]]]],[[74,17],[[27,[3,150]]]],[[74,17],[[27,[3,150]]]],[[198,17],[[27,[3,150]]]],[[198,17],[[27,[3,150]]]],[[199,17],[[27,[3,150]]]],[[[200,[-1]],17],[[27,[3,150]]],[19,201]],[[[75,[-1]],17],[[27,[3,150]]],[19,201]],[[202,17],[[27,[3,150]]]],[[202,17],[[27,[3,150]]]],[[[75,[-1]]],[[3,[48,48]]],201],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[46,[[3,[204,[196,[-1]]]]]]],[[203,[-1]]],[12,149,61,197]],[-1,-1,[]],[-1,-1,[]],[32,[[21,[74]]]],[32,74],[32,74],[-1,74,205],[69,[[27,[198]]]],[69,[[27,[202]]]],[[74,-1],3,23],[[198,-1],3,23],[[202,-1],3,23],[[74,74],3],[[74,74],74],[[74,74],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[74,4],[74,4],0,[202,128],[202,128],0,[[],[[203,[-1]]],[12,149,61,197]],[-1,[[196,[-1]]],[12,149,61,197]],[74,74],[[[196,[-1]]],[],[12,149,61,197]],[[74,74],[[21,[161]]]],0,0,0,[[[203,[-1]],22,198],[[0,[160]]],[12,149,61,197]],0,0,0,[[74,74],3],0,[[74,74,4],3],0,[[74,74],74],[[74,74],3],[[74,74],74],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,65,[]],[-1,65,[]],[[-1,35],65,[]],[[-1,35],65,[]],[[74,74],3],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[[74,74],74],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],206],[-1,60,[]],[-1,60,[]],[-1,60,[]],[[206,206],206],[[206,206],3],[[206,206],206],[[206,206],3],[206,32],[206,32],[[206,206],206],[[206,206],3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[55,55,55],55],[207,207],[208,208],[55,55],[206,206],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[206,206],[[206,206],4],[[],207],[[],208],[[],55],[[206,206],206],[[],206],[[207,207],4],[[208,208],4],[[55,55],4],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[206,-1],3,205],[[207,17],[[27,[3,150]]]],[[208,17],[[27,[3,150]]]],[[55,17],[[27,[3,150]]]],[[206,17],18],[[206,17],18],[[206,17],18],[[206,17],18],[[206,17],18],[-1,-1,[]],[-1,-1,[]],[209,55],[-1,-1,[]],[210,55],[211,55],[212,55],[-1,-1,[]],[32,[[21,[206]]]],[32,206],[32,206],[32,206],[-1,206,205],[69,[[21,[206]]]],[[207,22],207],[[208,22],208],[[55,22],55],[[206,206],3],[[206,206],206],[[206,206],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[206],[206,4],[55,4],[206,4],[55,4],[55,4],[55,4],[206,[[213,[206]]]],[206,[[214,[206]]]],[206,206],[215,[[27,[207,[217,[216]]]]]],[215,[[27,[208,[217,[216]]]]]],[215,[[27,[55,[217,[216]]]]]],[[206,206],3],[[207,207],4],[[208,208],4],[[55,55],4],[[206,206,4],3],0,0,0,[[206,206],206],[[206,206],3],[[206,206],206],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[55,48,48],48],[[55,48,48,55,55],48],[[206,206],3],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[[206,206],206],0,[-1,60,[]],[-1,-2,[],[]],[-1,-2,[],[]],[51,48],[51,[[3,[48,48]]]],[51,[[3,[48,48]]]],[51,[[3,[48,48]]]],[51,[[3,[48,48]]]],[51,[[3,[48,48]]]],[51,[[3,[48,48]]]],[51,[[3,[48,48]]]],[51,51],[[-1,-2],3,[],[]],[[51,51],4],[[],51],[[51,51],4],[[-1,60],4,[]],[[51,48],51],[[51,48],51],[[51,48],51],[[51,17],18],[[51,17],18],[-1,-1,[]],[[48,48,48,48],51],0,[51,48],[[51,51],51],[[51,51],4],[-1,-2,[],[]],[51,48],[51,48],[[51,48],51],[[51,48],51],[[51,48,48,48,48],51],[[51,48],51],[-1,-2,[],[]],[-1,65,[]],[[-1,35],65,[]],[51,48],[51,[[3,[48,48]]]],[51,[[3,[48,48]]]],[[51,98],51],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],0,[51,48],0,0,0,0,[[218,69,-1],218,2],[[218,69,-1],218,[[80,[219]],220]],[-1,60,[]],[-1,-2,[],[]],[-1,-2,[],[]],[218,218],[[-1,-2],3,[],[]],[[218,218],4],[[-1,60],4,[]],[-1,-1,[]],[[218,22],65],[-1,-2,[],[]],[[218,-1],218,26],[69,218],[[218,218],4],0,[-1,-2,[],[]],[[-1,35],65,[]],[[218,35],65],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],0,[[-1,22],3,[]],[[-1,35,63],3,[]],[-1,[[21,[69]]],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[221,-1],221,[[80,[[223,[222]]]]]],[[-1,-3],-1,[],[[80,[43]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[43]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[44]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[44]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[225]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[225]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[[46,[226]]]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[[46,[226]]]]],[[224,[-2]]]],[[227,228],227],[[-1,-3],-1,[],[[80,[222]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[222]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[49]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[49]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[222]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[222]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[49]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[49]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[44]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[44]]],[[224,[-2]]]],[[-1,-3],-1,[],[19,[80,[[229,[49]]]]],[[224,[-2]]]],[[-1,-3],-1,[],[19,[80,[[229,[49]]]]],[[224,[-2]]]],[[-1,-3],-1,[],[19,[80,[230]]],[[224,[-2]]]],[[-1,-3],-1,[],[19,[80,[230]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[222]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[222]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[49]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[49]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[222]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[222]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[49]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[49]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[222]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[222]]],[[224,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[52]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[52]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[44]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[44]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[4]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[4]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[4]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[4]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,69],-1,[]],[[-1,69],-1,[]],[[-1,-3],-1,[],[[80,[81]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[81]]],[[224,[-2]]]],[221,221],[227,227],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[44]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[44]]],[[224,[-2]]]],[[227,44],227],[[-1,-3],-1,[],[[80,[231]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[231]]],[[224,[-2]]]],[[],221],[[],227],[[-1,82],-1,[]],[[-1,82],-1,[]],[[-1,-3],-1,[],[[80,[4]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[4]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[58]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[58]]],[[224,[-2]]]],[[232,35,63],3],[[221,17],18],[[227,17],18],[[-1,-3],-1,[],[[80,[4]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[4]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[4]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[4]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[[46,[57]]]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[[46,[57]]]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[233]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[233]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[234]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[234]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[235]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[235]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[236]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[236]]],[[224,[-2]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[221,22],221],[[227,22],227],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[4]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[4]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[4]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[4]]],[[224,[-2]]]],[[-1,-2],-1,[],[[80,[65]]]],[[-1,-2],-1,[],[[80,[65]]]],[227,227],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,-3],-1,[],[[80,[207]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[207]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,84],-1,[]],[[-1,84],-1,[]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],237,[[224,[-2]]]],[[-1,-3],-1,[],237,[[224,[-2]]]],[[-1,-3],-1,[],[[80,[4]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[4]]],[[224,[-2]]]],[[],221],[[],227],[[-1,-3],-1,[],[[80,[77]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[77]]],[[224,[-2]]]],[[-1,-2],-1,[],[26,61,197]],[[-1,-2],-1,[],[26,61,197]],[[-1,-2],-1,[],[26,61,197]],[[-1,-2],-1,[],[26,61,197]],[[-1,-2],-1,[],[26,61,197]],[[-1,-2],-1,[],[26,61,197]],[[-1,-2],-1,[],[26,61,197]],[[-1,-2],-1,[],[26,61,197]],[[-1,-2],-1,[],[26,61,197]],[[-1,-2],-1,[],[26,61,197]],[[-1,-2],-1,[],[26,61,197]],[[-1,-2],-1,[],[26,61,197]],[[-1,-2],-1,[],[26,61,197]],[[-1,-2],-1,[],[26,61,197]],[[-1,-2],-1,[],[26,61,197]],[[-1,-3],-1,[],[[80,[238]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[238]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[44]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[44]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[222]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[222]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[222]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[222]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[85]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[85]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[85]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[85]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[85]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[85]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[86]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[86]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[208]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[208]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[4]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[4]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[4]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[4]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,87],-1,[]],[[-1,87],-1,[]],[[-1,-3],-1,[],[[80,[88]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[88]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[89]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[89]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[44]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[44]]],[[224,[-2]]]],0,0,[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[227,228],227],[[-1,-3],-1,[],237,[[224,[-2]]]],[[-1,-3],-1,[],237,[[224,[-2]]]],[[-1,-3],-1,[],[[80,[97]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[97]]],[[224,[-2]]]],[[-1,-3],-1,[],41,[[224,[-2]]]],[[-1,-3],-1,[],41,[[224,[-2]]]],[[-1,-3],-1,[],[[80,[4]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[4]]],[[224,[-2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,69,-2],-1,[],[[224,[4]]]],[[-1,69,-2],-1,[],[[224,[4]]]],[[-1,-2],-1,[],29],0,0,[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[[46,[93]]]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[[46,[93]]]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[239]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[239]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[94]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[94]]],[[224,[-2]]]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[[-1,-3],-1,[],[[80,[95]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[95]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[55]]],[[224,[-2]]]],[-1,221,[[80,[240]]]],[[227,-1],227,[[80,[228]]]],[[227,-1],227,[[80,[228]]]],[[-1,-3],-1,[],[[80,[96]]],[[224,[-2]]]],[[-1,-3],-1,[],[[80,[96]]],[[224,[-2]]]],[-1,60,[]],[-1,60,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[241,241],[242,242],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[241,241],4],[[242,242],4],[[-1,60],4,[]],[[-1,60],4,[]],[[241,17],18],[[242,17],18],[-1,-1,[]],[-1,-1,[]],[[-1,22],[],[]],[[-1,22],21,[]],[[241,-1],3,23],[[242,-1],3,23],[-1,-2,[],[]],[-1,-2,[],[]],[[],241],[[],242],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[[241,232,-1],-2,29,[]],[[242,-1],-2,29,[]],0,0,0,0,[-1,60,[]],[-1,-2,[],[]],[-1,-2,[],[]],[71,71],[[-1,-2],3,[],[]],[[71,71],4],[[-1,60],4,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[44,32],[243,32],0,[[88,88],88],[[228,228],228],0,[[],44],[[],245],0,[[],44],[[],44],[[],44],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[[],44],[44,32],[243,32],0,[[],44],[[],44],[[245,245],245],[[245,245],3],[[245,245],245],[[245,245],3],[245,32],[245,32],[[245,245],245],[[245,245],3],[[],44],[[],44],[[],44],0,[[],44],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],44],[[],44],0,[[],44],[[],239],[[],44],[[],44],[244,3],[88,88],[43,43],[47,47],[49,49],[52,52],[81,81],[44,44],[243,243],[231,231],[58,58],[246,246],[247,247],[233,233],[234,234],[235,235],[236,236],[248,248],[225,225],[240,240],[249,249],[250,250],[226,226],[228,228],[251,251],[222,222],[[[252,[-1]]],[[252,[-1]]],12],[238,238],[85,85],[86,86],[239,239],[89,89],[97,97],[93,93],[253,253],[94,94],[254,254],[95,95],[255,255],[45,45],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],0,[245,245],[[245,245],4],[[],44],[[],44],[[],44],[[],44],[[],44],0,[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],88],[[],43],[[],47],[[],49],[[],52],[[],81],[[],44],[[],231],[[],58],[[],233],[[],236],[[],225],[[],240],[[],228],[[],251],[[],222],[[],238],[[],85],[[],86],[[],239],[[],89],[[],97],[[],253],[[],94],[[],95],[[],245],[[],244],0,0,[[245,245],245],[[],44],[[],44],0,[[],44],0,0,[[],245],[[88,48],4],[[88,88],4],[[43,43],4],[[47,47],4],[[49,49],4],[[52,52],4],[[81,81],4],[[44,44],4],[[243,243],4],[[231,231],4],[[58,58],4],[[246,246],4],[[247,247],4],[[233,233],4],[[234,234],4],[[235,235],4],[[236,236],4],[[248,248],4],[[225,225],4],[[240,240],4],[[249,249],4],[[250,250],4],[[226,226],4],[[228,228],4],[[228,48],4],[[251,48],4],[[251,251],4],[[222,222],4],[[[252,[-1]],[252,[-1]]],4,149],[[238,238],4],[[85,85],4],[[86,86],4],[[239,239],4],[[89,89],4],[[97,97],4],[[93,93],4],[[253,253],4],[[94,94],4],[[254,254],4],[[95,95],4],[[255,255],4],[[45,45],4],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[245,-1],3,205],0,[[],44],[[],44],[[88,17],[[27,[3,150]]]],[[43,17],[[27,[3,150]]]],[[47,17],[[27,[3,150]]]],[[49,17],[[27,[3,150]]]],[[52,17],[[27,[3,150]]]],[[81,17],[[27,[3,150]]]],[[44,17],[[27,[3,150]]]],[[243,17],[[27,[3,150]]]],[[231,17],[[27,[3,150]]]],[[231,17],[[27,[3,150]]]],[[58,17],[[27,[3,150]]]],[[246,17],[[27,[3,150]]]],[[247,17],[[27,[3,150]]]],[[233,17],[[27,[3,150]]]],[[234,17],[[27,[3,150]]]],[[235,17],[[27,[3,150]]]],[[236,17],[[27,[3,150]]]],[[248,17],[[27,[3,150]]]],[[225,17],[[27,[3,150]]]],[[240,17],[[27,[3,150]]]],[[249,17],[[27,[3,150]]]],[[250,17],[[27,[3,150]]]],[[226,17],[[27,[3,150]]]],[[228,17],[[27,[3,150]]]],[[251,17],[[27,[3,150]]]],[[222,17],[[27,[3,150]]]],[[[252,[-1]],17],[[27,[3,150]]],19],[[238,17],[[27,[3,150]]]],[[85,17],[[27,[3,150]]]],[[86,17],[[27,[3,150]]]],[[239,17],[[27,[3,150]]]],[[89,17],[[27,[3,150]]]],[[97,17],[[27,[3,150]]]],[[93,17],[[27,[3,150]]]],[[253,17],[[27,[3,150]]]],[[94,17],[[27,[3,150]]]],[[254,17],[[27,[3,150]]]],[[95,17],[[27,[3,150]]]],[[255,17],[[27,[3,150]]]],[[245,17],18],[[245,17],18],[[245,17],18],[[245,17],18],[[45,17],18],[[],44],[-1,-1,[]],[[[256,[88]]],88],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[69,49],[-1,-1,[]],[227,52],[69,52],[228,81],[222,81],[-1,-1,[]],[[[229,[222]]],81],[69,44],[257,44],[-1,-1,[]],[243,44],[44,243],[-1,-1,[]],[258,243],[-1,-1,[]],[-1,-1,[]],[4,58],[-1,-1,[]],[-1,-1,[]],[259,233],[48,233],[69,233],[77,233],[-1,-1,[]],[-1,-1,[]],[211,234],[-1,-1,[]],[-1,-1,[]],[69,236],[128,236],[123,236],[248,236],[-1,-1,[]],[249,225],[221,225],[69,225],[-1,-1,[]],[-1,-1,[]],[250,240],[[[3,[250,254]]],240],[88,240],[254,240],[69,240],[-1,-1,[]],[-1,-1,[]],[69,226],[-1,-1,[]],[225,226],[48,228],[55,228],[[[256,[228]]],228],[-1,-1,[]],[-1,-1,[]],[[[260,[254]]],222],[211,222],[254,222],[[[260,[250]]],222],[261,222],[250,222],[251,222],[55,222],[-1,-1,[]],[69,222],[228,222],[-1,-1,[]],[[[3,[-1,-1,-1,-1,-1,-1]]],[[252,[-1]]],[]],[48,238],[69,238],[77,238],[211,238],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[4,86],[[[3,[-1,-2]]],239,[[80,[222]]],[[80,[222]]]],[-1,-1,[]],[69,89],[-1,-1,[]],[[[3,[-1,-2]]],89,[[80,[262]]],[[80,[262]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,94,[[80,[222]]]],[[[3,[-1,-2]]],94,[[80,[222]]],[[80,[222]]]],[-1,-1,[]],[4,95],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[32,[[21,[245]]]],[32,245],[32,245],[32,245],[-1,245,205],[69,[[21,[245]]]],[[],44],[44,32],[243,32],[[],44],[44,243],[[88,22],88],[[43,22],43],[[49,22],49],[[52,22],52],[[44,22],44],[[243,22],243],[[231,22],231],[[58,22],58],[[247,22],247],[[234,22],234],[[235,22],235],[[236,22],236],[[248,22],248],[[249,22],249],[[226,22],226],[[228,22],228],[[251,22],251],[[222,22],222],[[238,22],238],[[85,22],85],[[86,22],86],[[239,22],239],[[89,22],89],[[97,22],97],[[93,22],93],[[94,22],94],[[95,22],95],[[],44],[[],44],[[],44],[[],44],[[],44],0,[[],44],[[],44],0,[[],44],[[],44],[[48,48,48],243],[[48,48,48,48],243],[[],44],[[],44],[[245,245],3],0,[[245,245],245],[[245,245],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[245],[245,4],[239,4],[245,4],[226,4],[88,4],[245,[[213,[245]]]],[245,[[214,[245]]]],[[],44],[[],44],0,[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],0,[[244,48],48],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[88,48],88],[[228,48],228],[[251,48],251],0,[[],44],[[],44],0,0,[244,3],[244,3],[244,3],0,[[-1,-2,[21,[228]],[21,[228]],[21,[44]],4],52,[[80,[228]]],[[80,[228]]]],[[-1,-1,-1,-1,-1,-1],[[252,[-1]]],[]],[[-1,-2],239,[[80,[[260,[250]]]]],[[80,[[260,[254]]]]]],[[-1,-2],89,[[80,[262]]],[[80,[262]]]],[[65,38,[21,[38]],[21,[263]]],253],[[-1,-2],94,[[80,[222]]],[[80,[222]]]],[245,245],0,[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[215,[[27,[88,[217,[216]]]]]],[215,[[27,[43,[217,[216]]]]]],[215,[[27,[47,[217,[216]]]]]],[215,[[27,[49,[217,[216]]]]]],[215,[[27,[52,[217,[216]]]]]],[215,[[27,[81,[217,[216]]]]]],[215,[[27,[44,[217,[216]]]]]],[215,[[27,[231,[217,[216]]]]]],[215,[[27,[58,[217,[216]]]]]],[215,[[27,[246,[217,[216]]]]]],[215,[[27,[247,[217,[216]]]]]],[215,[[27,[233,[217,[216]]]]]],[215,[[27,[234,[217,[216]]]]]],[215,[[27,[235,[217,[216]]]]]],[215,[[27,[236,[217,[216]]]]]],[215,[[27,[248,[217,[216]]]]]],[215,[[27,[225,[217,[216]]]]]],[215,[[27,[240,[217,[216]]]]]],[215,[[27,[249,[217,[216]]]]]],[215,[[27,[250,[217,[216]]]]]],[215,[[27,[226,[217,[216]]]]]],[215,[[27,[228,[217,[216]]]]]],[215,[[27,[251,[217,[216]]]]]],[215,[[27,[222,[217,[216]]]]]],[215,[[27,[[252,[-1]],[217,[216]]]]],[264,12]],[215,[[27,[238,[217,[216]]]]]],[215,[[27,[85,[217,[216]]]]]],[215,[[27,[86,[217,[216]]]]]],[215,[[27,[239,[217,[216]]]]]],[215,[[27,[89,[217,[216]]]]]],[215,[[27,[97,[217,[216]]]]]],[215,[[27,[93,[217,[216]]]]]],[215,[[27,[253,[217,[216]]]]]],[215,[[27,[94,[217,[216]]]]]],[215,[[27,[254,[217,[216]]]]]],[215,[[27,[95,[217,[216]]]]]],[[88,48],[[21,[161]]]],[[88,88],[[21,[161]]]],[[228,228],[[21,[161]]]],[[228,48],[[21,[161]]]],[[251,48],[[21,[161]]]],[[251,251],[[21,[161]]]],[[],44],[[],44],[[244,48],48],[[],44],[[],44],[[],44],0,[[],44],[48,228],[48,222],[44,32],[243,32],[[],44],[[],44],0,[[245,245],3],0,[[32,32,32],44],[[32,32,32],243],[[32,32,32,32],44],[[32,32,32,32],243],0,[[],44],[[],44],[[],44],[[],44],[[88,88],4],[[44,44],4],[[58,58],4],[[93,93],4],[[94,94],4],[[95,95],4],[[],44],[244,48],[[],44],[[],44],[[245,245,4],3],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[244,-1],3,29],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],[[],44],0,[[],44],[[],44],0,[[245,245],245],[[245,245],3],[[245,245],245],[[],44],[[],44],0,[[],44],0,[88,48],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[222,48,48],48],[228,[[21,[48]]]],[251,[[21,[48]]]],[88,48],[-1,65,[]],[[-1,35],65,[]],[251,[[3,[48,69]]]],[[245,245],3],[[],44],[[],44],[[88,88],[[21,[88]]]],[[228,228],[[21,[228]]]],[[251,251],[[21,[251]]]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[[],44],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[[245,245],245],[[],44],[[],44],[[],44],[[],44],0,0,0,0,0,0,0,0,[[],44],[[],44],[[],228],0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[265,266],[69,266],[-1,-1,[]],[-1,266,[[34,[154]]]],[69,266],[-1,[[27,[65,36]]],[]],[266,[[27,[65,36]]]],[-1,-2,[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[267,[-1]],-2],[[27,[268,269]]],270,[[34,[154]]]],[[[267,[-1]],-2],[[27,[[46,[268]],269]]],270,[[34,[154]]]],[[271,-1],[[27,[[46,[268]],269]]],[[34,[154]]]],[[271,-1],[[27,[268,269]]],[[34,[154]]]],[[[267,[-1]],[33,[32]]],[[27,[268,269]]],270],[[271,[33,[32]]],[[27,[268,269]]]],[[272,25,25],[[21,[[3,[25,25]]]]]],[[271,-1,128],[[27,[268,269]]],[[34,[[33,[32]]]]]],[[],273],[[-1,274],[[27,[269]]],[]],0,[275,4],[[53,48,48,48,48,48,276],3],[[53,48,48,48,48,48],3],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[277,48],[98,48],0,[[53,48,48,48,48,48,48],3],[[273,273],273],[[273,273],3],[[273,273],273],[[273,273],3],[273,128],[273,128],[[273,273],273],[[273,273],3],[[],278],[277,4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[48,48,48,48,48,48,278,278],275],[[[267,[-1]],48,-2,275],[[27,[25,269]]],270,[[34,[69]]]],[[271,48,-1,275],[[27,[25,269]]],[[34,[69]]]],[[[267,[-1]],48,-2,275],[[27,[[46,[[279,[25]]]],269]]],270,[[34,[69]]]],[[271,48,-1,275],[[27,[[46,[[279,[25]]]],269]]],[[34,[69]]]],[98,144],[[53,48,48,48],3],[[[267,[-1]],128,128,128,128,278],3,270],[277,277],[268,268],[280,280],[281,281],[282,282],[271,271],[283,283],[284,284],[285,285],[286,286],[287,287],[273,273],[288,288],[274,274],[289,289],[278,278],[290,290],[98,98],[275,275],[276,276],[53,53],[291,291],[292,292],[293,293],[294,294],[295,295],[296,296],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[53,3],[53,3],[[268,268],161],[[286,286],161],[[290,290],161],[278,275],0,[273,273],[[273,273],4],[[[267,[-1]],53,48,48,291],4,270],[[[267,[-1]],-2,273],[[27,[286,269]]],270,[[80,[288]]]],[[[267,[-1]],25,25,287,273],[[27,[286,269]]],270],[[-1,274],[[27,[269]]],[]],[[[267,[-1]],274],[[27,[286,269]]],270],[[53,48,48,48,48,48,48],3],[[],277],[[],280],[[],281],[[],282],[[],271],[[],283],[[],285],[[],278],[[],98],[[],275],[[],276],[[],53],[[],291],[[],294],[[],295],[[],296],[[-1,286],3,[]],[[[267,[-1]],286],3,270],[277,48],[[273,273],273],[288,297],[[[267,[-1]],298,275,48],3,270],[[[267,[-1]]],3,270],[[53,48,48,48,48],3],[[],273],[[268,268],4],[[280,280],4],[[281,281],4],[[282,282],4],[[286,286],4],[[287,287],4],[[273,273],4],[[274,274],4],[[278,278],4],[[290,290],4],[[98,98],4],[[276,276],4],[[291,291],4],[[292,292],4],[[293,293],4],[[294,294],4],[[295,295],4],[[296,296],4],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[272,25,25],3],[[273,-1],3,205],[[[267,[-1]],53,275],3,270],[275,291],[[[267,[-1]],48,48,-2,275],[[27,[283,269]]],270,[[34,[69]]]],[[[267,[-1]],286,289,286],3,270],[274,273],[[[267,[-1]]],3,270],[[277,17],[[27,[3,150]]]],[[268,17],[[27,[3,150]]]],[[280,17],[[27,[3,150]]]],[[281,17],[[27,[3,150]]]],[[282,17],[[27,[3,150]]]],[[283,17],[[27,[3,150]]]],[[284,17],[[27,[3,150]]]],[[285,17],[[27,[3,150]]]],[[269,17],[[27,[3,150]]]],[[269,17],[[27,[3,150]]]],[[286,17],[[27,[3,150]]]],[[287,17],[[27,[3,150]]]],[[273,17],[[27,[3,150]]]],[[273,17],[[27,[3,150]]]],[[273,17],[[27,[3,150]]]],[[273,17],[[27,[3,150]]]],[[273,17],[[27,[3,150]]]],[[288,17],[[27,[3,150]]]],[[274,17],[[27,[3,150]]]],[[289,17],[[27,[3,150]]]],[[278,17],[[27,[3,150]]]],[[290,17],[[27,[3,150]]]],[[98,17],[[27,[3,150]]]],[[275,17],[[27,[3,150]]]],[[276,17],[[27,[3,150]]]],[[53,17],[[27,[3,150]]]],[[291,17],[[27,[3,150]]]],[[292,17],[[27,[3,150]]]],[[293,17],[[27,[3,150]]]],[[294,17],[[27,[3,150]]]],[[295,17],[[27,[3,150]]]],[[296,17],[[27,[3,150]]]],[275,48],[288,287],[274,287],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[140,269],[299,269],[-1,-1,[]],[36,269],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[301,[[33,[[300,[32]]]]]]],288],[[[301,[[33,[[302,[32]]]]]]],288],[[[301,[[33,[[303,[32]]]]]]],288],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[44,278],[243,278],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[128,[[21,[273]]]],[128,273],[128,273],[128,273],[-1,273,205],[69,[[21,[273]]]],0,[[[267,[-1]],286],21,270],[[[267,[-1]],286],21,270],[[[267,[-1]],292,292],3,270],[[[267,[-1]],292,292,292,292],3,270],[[[267,[-1]],293],3,270],0,[[268,-1],3,23],[[280,-1],3,23],[[281,-1],3,23],[[282,-1],3,23],[[286,-1],3,23],[[287,-1],3,23],[[273,-1],3,23],[[274,-1],3,23],[[292,-1],3,23],[[293,-1],3,23],[[294,-1],3,23],[[[267,[-1]]],48,270],[277,48],[283,48],[274,25],[69,278],[[48,48,48],278],[[48,48,48,48],278],[[],98],[[286,48,48,48,48,48,48],275],0,[[[267,[-1]],286],[[27,[274,269]]],270],[[[267,[-1]],286],[[27,[[3,[25,25]],269]]],270],[[286,48,48,48,48,48,278],275],[[98,25]],[[98,25]],[[273,273],3],[[[267,[-1]],48,48,48,48],3,270],[[273,273],273],[[273,273],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[273],[98,3],[98,98],[273,4],[278,4],[273,4],[53,4],[277,4],[273,[[213,[273]]]],[273,[[214,[273]]]],[275,48],[275,295],[275,295],[275,296],[[53,48,48],3],[[53,48,48],3],[275,48],[[48,48,48,48,278,278],275],[[48,48,48,48,-1],275,205],[[[267,[-1]],-2,273],[[27,[286,269]]],270,[[34,[154]]]],[[[267,[-1]],[33,[32]],273],[[27,[286,269]]],270],[[[267,[-1]],275],[[27,[277,269]]],270],[[271,275],[[27,[277,269]]]],[[[267,[-1]],48,48,-2,275],[[27,[283,269]]],270,[[34,[69]]]],[[271,48,48,-1,275],[[27,[283,269]]],[[34,[69]]]],[275,48],[[53,48,48],3],[[53,48,48],3],[[98,98],3],[[25,25],272],[-1,[[27,[[267,[-1]],269]]],270],[[273,25,25,287],274],[[98,48,48,48,48,48,48],98],[[],53],[293,294],[[48,48],98],[[-1,271],[[27,[[267,[-1]],269]]],270],[273,273],[277,4],[[268,268],[[21,[161]]]],[[286,286],[[21,[161]]]],[[278,278],[[21,[161]]]],[[290,290],[[21,[161]]]],[[98,98],[[21,[161]]]],[[276,276],[[21,[161]]]],[[292,292],[[21,[161]]]],[[293,293],[[21,[161]]]],[[294,294],[[21,[161]]]],[[295,295],[[21,[161]]]],[[296,296],[[21,[161]]]],[[[267,[-1]],53],304,270],[278,278],[[98,98],3],[[53,48,48,48,48],3],[[53,48,48,48,48],3],0,0,[[48,48,48,48,278,278],275],[[48,48,48,48,-1],275,205],[[[267,[-1]],286,25,25,287,273],[[27,[3,269]]],270],[[53,48,48,48,48],3],[277,4],[[273,273],3],[[-1,305,[33,[306]],[46,[307]]],3,[]],0,[[272,25,25],3],[[[267,[-1]]],3,270],[[[267,[-1]]],3,270],[[[267,[-1]]],3,270],[[271,308],3],[[271,308],3],[[[267,[-1]]],3,270],[[32,32,32],278],[[32,32,32,32],278],[[48,48,48,48],278],[[48,48,48],278],[[[267,[-1]],48],3,270],[[98,48],3],[[53,48,48,48,48,48],3],[[53,48,48,48,48,48,48,48,48],3],0,0,[[[267,[-1]]],3,270],[[[267,[-1]],-2],3,270,111],[[[267,[-1]],48,48],3,270],[[98,48,48],3],[[[267,[-1]],48,48,48,48],3,270],[-1,[[27,[[301,[[46,[[300,[32]]]]]],269]]],[]],[[[267,[-1]]],[[27,[[301,[[46,[[300,[32]]]]]],269]]],270],[[273,273,4],3],[[278,32],3],[[278,48],3],[[275,4],3],[[275,278],3],[[53,48],3],[[275,291],3],[[275,[33,[268]]],3],[[275,48],3],[[274,287],3],[[[267,[-1]],48],3,270],[[275,48],3],[[275,295],3],[[275,295],3],[[275,295],3],[[275,296],3],[[275,48],3],[[275,48],3],[[[267,[-1]],290],3,270],[[-1,128,128,48],3,[]],[[[267,[-1]],128,128,48],3,270],[[275,4],3],[[275,281],3],[[275,280],3],[[[267,[-1]],98],3,270],[272,[[3,[25,25]]]],[274,297],[53,25],[[[267,[-1]],48],3,270],[[98,48],3],[[[267,[-1]],48],3,270],[[98,48],3],[[53,276],3],[275,4],[[[267,[-1]],53,275],3,270],[[[267,[-1]],48,48,-2,275],[[27,[283,269]]],270,[[34,[69]]]],[[273,273],273],[[273,273],3],[[273,273],273],0,0,[275,281],[275,280],[278,[[151,[48]]]],[98,[[151,[48]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,65,[]],[[-1,35],65,[]],[[273,273],3],[[[267,[-1]]],98,270],[[98,48,48],[[3,[48,48]]]],[[[267,[-1]],48,48],3,270],[[98,48,48],3],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[70,[[27,[288,269]]]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[[273,273],273],[[-1,288,25,25],[[27,[3,269]]],[]],[[[267,[-1]],286,-2,25,25],[[27,[3,269]]],270,[[80,[288]]]],[277,4],[53,309],[277,123],[[],278],[[[267,[-1]]],48,270],[277,123],[283,48],[274,25],[[275,4],275],[[292,292],294],[[275,278],275],[[275,291],275],[[275,[33,[268]]],275],[[275,48],275],[[275,48],275],[[275,295],275],[[275,295],275],[[275,295],275],[[275,296],275],[[275,48],275],[[275,48],275],[[275,4],275],[[275,281],275],[[275,280],275],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,-2],3,[],111],[[-1,-1,-2],3,[],111],[[-1,-2,-3],3,[],111,111],[[-1,-2],3,[],111],[-1,[[33,[32]]],[]],[[-1,-1],3,[]],[[-1,128,128],3,[]],[-1,[[3,[128,128,128,128]]],[]],0,[-1,33,[]],[-1,3,[]],[-1,33,[]],0,0,[-1,127,[]],[[-1,-2,128,128],[[27,[3,140]]],[],142],[[-1,143,128,128],4,[]],[-1,[[3,[128,128]]],[]],[-1,[[3,[128,128]]],[]],0,0,[[],-1,[]],[33,-1,[]],[33,-1,[]],[[-1,128,128],[],[]],[[-1,128,128],[],[]],[[[33,[32]]],[[27,[131,140]]]],[-1,128,[]],[-1,[[21,[[46,[32]]]]],[]],[-1,[[27,[[3,[128,128]],140]]],[[34,[154]]]],0,[[-1,128,128],4,[]],[-1,139,[]],[-1,[[27,[140]]],[]],[-1,3,[]],0,0,[[-1,131],[[27,[70,140]]],[158,159]],[[[33,[32]]],[[27,[70,140]]]],[[[33,[32]],131],[[27,[70,140]]]],[[-1,-2],-1,[],111],[[-1,-1,-2],-1,[],111],[[-1,-2,-3],-1,[],111,111],[[-1,-2],-1,[],111],0,[-1,[[27,[70,140]]],[[34,[154]]]],[-1,133,[]],[-1,[[137,[-1]]],138],[[-1,128,128],3,[]],[[-1,[33,[32]]],[[27,[3,140]]],[]],[[-1,[33,[32]],-2],[[27,[3,140]]],[],26],[[-1,128,128,128,128,[33,[32]]],[[27,[3,140]]],[]],[[-1,128,128,128,128,[33,[32]],-2],[[27,[3,140]]],[],26],0,[[-1,[33,[32]],128,128,127],[[27,[3,140]]],[[34,[154]]]],[[-1,[33,[32]],128,128,127,131],[[27,[3,140]]],[[34,[154]]]],[-1,144,[]],[[-1,169],[[27,[3,140]]],[]],[[-1,128,128,128,128],[[132,[-1]]],138],[-1,115,[]],[-1,117,[]],[-1,112,[]],[-1,116,[]],[-1,144,[]],[[-1,128,128],[],[]],[[-1,128,128],3,[]],[[-1,128,128,128,128],[[132,[-1]]],138],[-1,128,[]],[[-1,[33,[32]],128,128,127,-2],[[27,[3,140]]],[170,159],[[80,[135]]]],[[-1,[33,[32]],128,128,127],[[27,[3,140]]],[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,48],[[118,[46]]],142],[[-1,96],[[118,[-2,[46,[-3]]]]],142,120,113],0,[[-1,48],[[118,[-2,[46,[-3]]]]],142,120,113],[[-1,128,128,128,128],[[132,[-1]]],142],[[-1,128,128,128,128],[[132,[-1]]],142],[[[118,[-1,[46,[32]]]],-2],3,120,[189,138]],[[-1,[33,[48]]],[[118,[-2,[46,[-3]]]]],142,120,113],[-1,[[118,[46]]],142],[[-1,[118,[-2]]],[[27,[3,140]]],142,129],[-1,3,190],[-1,[[118,[46]]],142],[[-1,[118,[-2]]],[[27,[3,140]]],142,129],[-1,3,190],[-1,[[118,[115,46]]],142],[-1,[[118,[117,46]]],142],[-1,[[118,[-2,46]]],142,[120,[141,[115]]]],[-1,[[118,[-2,46]]],142,[120,[141,[117]]]],[-1,4,[]],[[-1,-2,-2],3,190,120],[[-1,96],[[118,[-2,[46,[-3]]]]],142,120,113],[[[118,[-1,[46,[32]]]],-2],[[118,[[115,[32]],[46,[32]]]]],120,[189,138]],[-1,25,[]],[[-1,48,48],[[21,[-2]]],142,120],[[-1,48,48],[[21,[-2]]],142,120],[-1,3,190],[[-1,25],21,[]],[-1,3,[]],[[-1,-2,191,191],3,190,142],[[[3,[128,128]],[3,[128,128]],128,128],[[3,[128,128]]]],[[-1,-2,191,191],3,190,142],[[-1,128,128,164],[[118,[46]]],142],[-1,[[118,[46]]],142],[[-1,[118,[-2]]],[[27,[3,140]]],142,129],[-1,3,190],[-1,[[118,[46]]],142],[[-1,[118,[-2]]],[[27,[3,140]]],142,129],[-1,[[118,[46]]],142],[[-1,[118,[-2]]],[[27,[3,140]]],142,129],[[-1,48,48],[[21,[-2]]],142,120],[[-1,48,48],[[21,[-2]]],142,120],[[-1,128,128],[[118,[-2,[46,[-3]]]]],142,120,[113,114]],[[-1,-2],3,190,142],[[-1,48,96],[[118,[-2,[46,[-3]]]]],142,120,113],[[-1,-2,-2],3,190,120],0,0,0,[[-1,96],[[118,[-2,[46,[-3]]]]],142,120,113],[[-1,96],3,190],[[-1,48],[[118,[-2,[46,[-3]]]]],142,120,113],[[-1,48],3,190],[[[118,[-1,[46,[32]]]],-2],3,120,[189,138]],[-1,[[118,[115,46]]],142],[-1,[[118,[117,46]]],142],[-1,[[118,[-2,46]]],142,[120,[141,[115]]]],[-1,[[118,[-2,46]]],142,[120,[141,[117]]]],[-1,4,[]],[[-1,96],[[118,[-2,[46,[-3]]]]],142,120,113],[[-1,96],3,190],[[[118,[-1,[46,[32]]]],-2],[[118,[[115,[32]],[46,[32]]]]],120,[189,138]],[-1,25,[]],[-1,3,190],[[-1,25],21,[]],[-1,3,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,60,[]],[[[301,[[46,[-1]]]]],[[3,[[33,[-1]],25,25]]],310],[-1,[[301,[[33,[-2]]]]],[],[]],[[[301,[[46,[-1]]]]],[[301,[[33,[-1]]]]],[]],[[[301,[-2]]],[[301,[[33,[-1]]]]],[],[[122,[[33,[-1]]]]]],[-1,[[301,[[33,[-2]]]]],[],[]],[[[301,[[33,[-1]]]]],[[301,[[33,[-1]]]]],[]],[[[301,[[46,[-1]]]]],[[301,[[33,[-1]]]]],[]],[[[301,[-2]]],[[301,[[33,[-1]]]]],[],[[34,[[33,[-1]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[301,[-1]]],-1,[]],0,0,0,0,[[[301,[-1]]],-1,[]],[[[301,[-1]]],[[301,[-1]]],12],[[-1,-2],3,[],[]],[[[311,[-1]]],25,[]],[[[312,[-1]]],25,[]],[[[301,[[33,[-2]]]],[301,[[33,[-1]]]]],4,[],[[149,[-1]]]],[[[301,[[46,[-2]]]],[301,[[33,[-1]]]]],4,[],[[149,[-1]]]],[[[301,[[33,[-2]]]],[301,[[33,[-1]]]]],4,[],[[149,[-1]]]],[[[301,[[33,[-2]]]],[301,[[33,[-1]]]]],4,[],[[149,[-1]]]],[[[301,[[33,[-2]]]],[301,[[46,[-1]]]]],4,[],[[149,[-1]]]],[[[301,[[46,[-2]]]],[301,[[46,[-1]]]]],4,[],[[149,[-1]]]],[[[301,[[33,[-2]]]],[301,[[33,[-1]]]]],4,[],[[149,[-1]]]],[[-1,60],4,[]],[[[311,[-1]],17],[[27,[3,150]]],19],[[[312,[-1]],17],[[27,[3,150]]],19],[[[313,[-1]],17],[[27,[3,150]]],19],[[[314,[-1]],17],[[27,[3,150]]],19],[[[301,[-1]],17],[[27,[3,150]]],19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[301,[[46,[-1]]]]],[[301,[[315,[[33,[-1]]]]]]],12],[[[301,[[315,[[33,[-1]]]]]]],[[301,[[46,[-1]]]]],12],[[[301,[[33,[-1]]]]],[[301,[[315,[[33,[-1]]]]]]],12],[[[301,[[33,[-1]]]],-2],3,24,23],[[[301,[[33,[-1]]]],-2],3,24,23],[[[301,[[46,[-1]]]],-2],3,24,23],[[[301,[-1]]],25,[]],0,0,0,0,[-1,25,[]],[[[301,[-2]]],25,[],[[34,[[33,[-1]]]]]],[[[301,[[33,[-1]]]],25],[],310],[[[301,[[33,[-1]]]],[3,[25,25]]],[],310],[[[301,[[33,[-1]]]],25],[],310],[[[301,[[33,[-1]]]],[3,[128,128]]],[],310],[[[301,[[46,[-1]]]],[3,[128,128]]],[],310],[[[301,[[33,[-1]]]],[3,[128,128]]],[],310],[[[301,[[33,[-1]]]],[3,[25,25]]],[],310],[[[301,[[46,[-1]]]],25],[],310],[[[301,[[46,[-1]]]],[3,[25,25]]],[],310],[[[301,[[33,[-1]]]],[3,[128,128]]],[],310],[[[301,[[46,[-1]]]],25],[],310],[[[301,[[33,[-1]]]],[3,[25,25]]],[],310],[[[301,[[46,[-1]]]],[3,[128,128]]],[],310],[[[301,[[33,[-1]]]],25],[],310],[[[301,[[46,[-1]]]],[3,[25,25]]],[],310],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[301,[-1]]],-1,[]],[[[301,[[46,[-1]]]]],[[3,[[46,[-1]],25,25]]],310],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[301,[-1]]],[],205],[[[301,[[315,[[33,[-1]]]]]]],[[301,[[46,[-1]]]]],12],[[[316,[-1]]],25,310],[[[311,[-1]]],25,[]],[[[301,[-2]],-3],[[301,[-5]]],[],[[34,[[33,[-1]]]]],29,[],[[34,[[33,[-4]]]]]],[[-1,25,25],[[301,[-1]]],[]],[[[301,[-2]],-4],[[301,[-4]]],[],[[34,[[33,[-1]]]]],[],[[34,[[33,[-3]]]]]],[[-1,25,25,25],[[301,[-1]]],[]],[[[316,[-1]]],21,310],[[[311,[-1]]],21,[]],[[[312,[-1]]],21,[]],[[[313,[-1]]],21,[]],[[[314,[-1]]],21,[]],[[[311,[-1]]],21,[]],[[[312,[-1]]],21,[]],[[[311,[-1]],25],21,[]],[[[312,[-1]],25],21,[]],[[[301,[[33,[-1]]]]],[[316,[-1]]],310],[[[301,[[46,[-1]]]]],[[316,[-1]]],310],[[[301,[[33,[-1]]]]],[[316,[-1]]],310],[[[301,[[33,[-1]]]]],[[314,[-1]]],310],[[[301,[[46,[-1]]]]],[[314,[-1]]],310],[[[301,[[33,[-1]]]]],[[313,[-1]]],[]],[[[301,[[46,[-1]]]]],[[311,[-1]]],[]],[[[301,[[33,[-1]]]]],[[311,[-1]]],[]],[[[301,[[33,[-1]]]]],[[311,[-1]]],[]],[[[301,[[46,[-1]]]]],[[312,[-1]]],[]],[[[301,[[33,[-1]]]]],[[312,[-1]]],[]],[-1,[[317,[-2]]],[],[]],[[[301,[-2]]],[[317,[-1]]],[],[[34,[[33,[-1]]]]]],[-1,[[318,[-2]]],[],[]],[[[301,[-2]]],[[318,[-1]]],[],[[122,[[33,[-1]]]]]],[[[311,[-1]]],[[3,[25,[21,[25]]]]],[]],[[[312,[-1]]],[[3,[25,[21,[25]]]]],[]],[[[313,[-1]]],[[3,[25,[21,[25]]]]],[]],[[[301,[-1]]],25,[]],0,0,0,0,[[[301,[[46,[-1]]]],25,25,25,25],[[301,[[33,[-1]]]]],[]],[[[301,[[33,[-1]]]],25,25,25,25],[[301,[[33,[-1]]]]],[]],[[[301,[[33,[-1]]]],25,25,25,25],[[301,[[33,[-1]]]]],[]],[[[301,[[46,[-1]]]],25,25,25,25],[[301,[[33,[-1]]]]],[]],[[[301,[[33,[-1]]]],25,25,25,25],[[301,[[33,[-1]]]]],[]],[[[301,[[33,[-1]]]]],[[3,[[315,[[33,[-1]]]],25,25]]],12],[-1,-2,[],[]],[[[301,[-1]]],301,319],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[[[301,[-1]]],25,[]],0,0,0,0,[-1,25,[]],[[[301,[-2]]],25,[],[[34,[[33,[-1]]]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,274],[[27,[269]]],[]],[[320,274],[[27,[269]]]],[[321,274],[[27,[269]]]],[-1,60,[]],[-1,60,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[322,322],[306,306],[323,323],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,274],[[27,[269]]],[]],[[320,274],[[27,[269]]]],[[321,274],[[27,[269]]]],[[],322],[[],306],[[],323],[[-1,286],3,[]],[[320,286],3],[[321,286],3],[320,3],[[306,306],4],[[323,323],4],[[-1,60],4,[]],[[-1,60],4,[]],[[322,17],[[27,[3,150]]]],[[324,17],[[27,[3,150]]]],[[307,17],[[27,[3,150]]]],[[306,17],[[27,[3,150]]]],[[323,17],[[27,[3,150]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[323,-1],3,23],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[320,4],[324,307],[[48,48,48,48],306],[-1,[[27,[320,269]]],111],[-1,[[27,[320,269]]],111],[[306,306],[[21,[161]]]],[[-1,305,[33,[306]],[46,[307]]],3,[]],[[320,305,[33,[306]],[46,[307]]],3],[[321,[305,[325]],[33,[306]],[46,[307]]],3],[-1,[[27,[[301,[[46,[[300,[32]]]]]],269]]],[]],[320,[[27,[[301,[[46,[[300,[32]]]]]],269]]]],[321,[[27,[[301,[[46,[[300,[32]]]]]],269]]]],[[306,48,48,48,48],3],[[320,21],3],[[-1,128,128,48],3,[]],[[320,128,128,48],3],[[321,128,128,48],3],[323,48],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[323,32],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],0,[[-1,288,25,25],[[27,[3,269]]],[]],[[320,288,25,25],[[27,[3,269]]]],[[321,288,25,25],[[27,[3,269]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[302,[-1]],-1],[],[310,326]],[[[302,[-1]],[302,[-1]]],[],326],[[[300,[-1,-2]],[300,[-1,-2]]],[],326,326],[[[300,[-1]],-1],[],[310,326]],[[[302,[-1]],-1],3,[310,326]],[[[302,[-1]],[302,[-1]]],3,[326,310]],[[[300,[-1,-2]],[300,[-1,-2]]],3,[326,310],[326,310]],[[[300,[-1]],-1],3,[310,326]],[[[302,[-1]],-1],[[300,[-1]]],12],[[[300,[-1,-2]],-2],[[300,[-1,-2]]],310,12],0,[-1,60,[]],[-1,60,[]],[-1,[[33,[[327,[-2]]]]],[],[]],[-1,[[33,[[327,[-2]]]]],[],[]],[-1,[[33,[[328,[-2]]]]],[],[]],[-1,[[33,[[328,[-2]]]]],[],[]],[-1,[[33,[32]]],[]],[-1,[[33,[32]]],[]],[-1,[[33,[[303,[-2]]]]],[],[]],[-1,[[33,[[329,[-2]]]]],[],[]],[-1,[[33,[[329,[-2]]]]],[],[]],[-1,[[33,[[303,[-2]]]]],[],[]],[[[302,[-1]]],[[33,[-1]]],[]],[[[300,[-1]]],[[33,[-1]]],[]],[-1,[[33,[-2]]],[],[]],[[[302,[-1]]],[[33,[-1]]],[]],[[[300,[-1]]],[[33,[-1]]],[]],[-1,[[33,[-2]]],[],[]],[-1,[[33,[-2]]],[],[]],[[[302,[-1]]],[[33,[-1]]],[]],[[[300,[-1]]],[[33,[-1]]],[]],[-1,[[33,[[302,[-2]]]]],[],[]],[-1,[[33,[[302,[-2]]]]],[],[]],[-1,[[33,[[300,[-2]]]]],[],[]],[-1,[[33,[[300,[-2]]]]],[],[]],[-1,[[33,[-2]]],[],[]],[[[302,[-1]]],[[33,[-1]]],[]],[[[300,[-1]]],[[33,[-1]]],[]],0,0,0,0,0,0,[[[300,[-1,-2]]],[[327,[-1]]],12,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[302,[-1]]],[[302,[-1]]],12],[[[300,[-1,-2]]],[[300,[-1,-2]]],12,12],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[[302,[-1]],[302,[-1]]],161,330],[[[300,[-1,-2]],[300,[-1,-2]]],161,330,330],[[],[[302,[-1]]],16],[[],[[300,[-1,-2]]],16,16],[[[302,[-1]],-1],[],[310,331]],[[[300,[-1]],-1],[],[310,331]],[[[302,[-1]],-1],3,[310,331]],[[[300,[-1]],-1],3,[310,331]],[[[302,[-1]],[302,[-1]]],4,149],[[[300,[-1,-2]],[300,[-1,-2]]],4,149,149],[[-1,60],4,[]],[[-1,60],4,[]],[[[302,[-1]],17],[[27,[3,150]]],332],[[[302,[-1]],17],[[27,[3,150]]],333],[[[302,[-1]],17],[[27,[3,150]]],19],[[[302,[-1]],17],[[27,[3,150]]],334],[[[300,[-1,-2]],17],[[27,[3,150]]],19,19],[[[300,[-1,-2]],17],[[27,[3,150]]],333,333],[[[302,[32]]],[[302,[335]]]],[[[302,[32]]],[[302,[77]]]],[[[302,[96]]],[[302,[77]]]],[[[302,[123]]],[[302,[77]]]],[[[302,[123]]],[[302,[128]]]],[[[302,[32]]],[[302,[48]]]],[[[302,[335]]],[[302,[77]]]],[[[3,[-1,-1,-1]]],[[302,[-1]]],[]],[-1,-1,[]],[[[302,[123]]],[[302,[48]]]],[[[302,[32]]],[[302,[123]]]],[[[302,[123]]],[[302,[96]]]],[[[302,[335]]],[[302,[48]]]],[[[302,[32]]],[[302,[128]]]],[[[327,[-1]]],[[302,[-1]]],12],[[[303,[-1]]],[[302,[-1]]],12],[[[151,[-1]]],[[302,[-1]]],310],[[[302,[48]]],[[302,[77]]]],[[[302,[123]]],[[302,[144]]]],[[[300,[96]]],[[300,[77]]]],[[[327,[-1]]],[[300,[-1,32]]],310],[-1,-1,[]],[[[328,[-1]]],[[300,[-1]]],12],[[[300,[32]]],[[300,[335]]]],[[[300,[32]]],[[300,[128]]]],[[[300,[32]]],[[300,[48]]]],[[[300,[123]]],[[300,[144]]]],[[[302,[-1]]],[[300,[-1,32]]],310],[[[300,[123]]],[[300,[128]]]],[[[300,[48]]],[[300,[77]]]],[[[300,[335]]],[[300,[48]]]],[[[303,[-1]]],[[300,[-1,32]]],12],[[[302,[-1]]],[[300,[-1,123]]],310],[[[329,[-1,-2]]],[[300,[-1,-2]]],12,[]],[[[300,[32]]],[[300,[77]]]],[[[300,[32]]],[[300,[123]]]],[[[151,[-1]]],[[300,[-1]]],310],[[[327,[-1]]],[[300,[-1,123]]],310],[[[3,[-1,-1,-1,-2]]],[[300,[-1,-2]]],[],[]],[[[300,[123]]],[[300,[77]]]],[[[300,[335]]],[[300,[77]]]],[[[300,[123]]],[[300,[96]]]],[[[300,[123]]],[[300,[48]]]],[-1,[[302,[-2]]],205,[]],[-1,[[300,[-2]]],205,[]],0,0,0,0,0,0,[[[302,[-1]],-2],3,24,23],[[[300,[-1,-2]],-3],3,24,24,23],[[[302,[-1]]],[[151,[-1]]],[]],[-1,-2,[],[]],[[[302,[-1]]],[[3,[-1,-1,-1]]],[]],[-1,-2,[],[]],[[[300,[-1,-2]]],[[3,[-1,-1,-1,-2]]],[],[]],[[[300,[-1]]],[[151,[-1]]],[]],[-1,4,[]],[-1,4,[]],[[[302,[-1]]],[[337,[[336,[-1]]]]],12],[[[300,[-1]]],[[337,[[336,[-1]]]]],12],[[-1,-2],-3,[],111,[]],[[[302,[-1]],-2],[[302,[-3]]],310,111,[]],[[[300,[-1]],-2],[[300,[-3]]],310,111,[]],[[[300,[-1,-2]],-3],[[300,[-1,-4]]],310,12,29,[]],[[-1,-2],-3,[],111,[]],[[[302,[-1]],-2],[[302,[-3]]],310,111,[]],[[[300,[-1,-2]],-3],[[300,[-4,-2]]],310,310,111,[]],[[[300,[-1,-2]],-3],[[300,[-4,-5]]],310,12,111,12,[[338,[-2]],12]],[[[302,[-1]],[302,[-1]]],[],339],[[[302,[-1]],-1],[],[310,339]],[[[300,[-1]],-1],[],[310,339]],[[[302,[-1]],-1],3,[310,339]],[[[302,[-1]],[302,[-1]]],3,[339,310]],[[[300,[-1]],-1],3,[310,339]],[[-1,-1,-1],[[302,[-1]]],[]],[[-1,-1,-1,-1],[[300,[-1]]],[]],[[[302,[-1]],-2],[[300,[-1,-2]]],12,[]],[[-1,-1,-1,-2],[[300,[-1,-2]]],[],[]],[[[302,[-1]],[302,[-1]]],[[21,[161]]],340],[[[300,[-1,-2]],[300,[-1,-2]]],[[21,[161]]],340,340],0,0,0,0,0,0,[[[300,[-1,-2]]],[[302,[-1]]],12,[]],[[[300,[-1,-2]]],[[302,[-1]]],[],[]],[[[302,[-1]],[302,[-1]]],[],341],[[[302,[-1]],-1],[],[310,341]],[[[300,[-1]],-1],[],[310,341]],[[[300,[-1,-2]],[300,[-1,-2]]],[],341,341],[[[302,[-1]],[302,[-1]]],3,[341,310]],[[[302,[-1]],-1],3,[310,341]],[[[300,[-1,-2]],[300,[-1,-2]]],3,[341,310],[341,310]],[[[300,[-1]],-1],3,[310,341]],[-1,[[302,[-2]]],160,[16,326]],[-1,[[300,[-2,-3]]],160,[16,326],[16,326]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,65,[]],[-1,65,[]],[[-1,35],65,[]],[[-1,35],65,[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[[],-1,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[303,[-1]],[303,[-1]]],[],326],[[[303,[-1]],-1],[],[310,326]],[[[329,[-1]],-1],[],[310,326]],[[[329,[-1,-2]],[329,[-1,-2]]],[],326,326],[[[303,[-1]],[303,[-1]]],3,[326,310]],[[[303,[-1]],-1],3,[310,326]],[[[329,[-1,-2]],[329,[-1,-2]]],3,[326,310],[326,310]],[[[329,[-1]],-1],3,[310,326]],[[[327,[-1]],-1],[[328,[-1]]],12],[[[328,[-1,-2]],-2],[[328,[-1,-2]]],310,12],[[[329,[-1,-2]],-2],[[329,[-1,-2]]],310,12],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[[[303,[-1]]],-1,[]],[[[329,[-1]]],-1,[]],[[[327,[-1]]],[[33,[-1]]],[]],[[[328,[-1]]],[[33,[-1]]],[]],[[[303,[-1]]],[[33,[-1]]],[]],[[[329,[-1]]],[[33,[-1]]],[]],[[[303,[-1]]],-1,[]],[[[329,[-1]]],-1,[]],[[[327,[-1]]],[[33,[-1]]],[]],[[[328,[-1]]],[[33,[-1]]],[]],[[[303,[-1]]],[[33,[-1]]],[]],[[[329,[-1]]],[[33,[-1]]],[]],0,0,0,0,0,0,[[[328,[-1,-2]]],[[327,[-1]]],12,[]],[[[328,[-1,-2]]],[[327,[-1]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[327,[-1]]],[[327,[-1]]],12],[[[328,[-1,-2]]],[[328,[-1,-2]]],12,12],[[[303,[-1]]],[[303,[-1]]],12],[[[329,[-1,-2]]],[[329,[-1,-2]]],12,12],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[[327,[-1]],[327,[-1]]],161,330],[[[328,[-1,-2]],[328,[-1,-2]]],161,330,330],[[[303,[-1]],[303,[-1]]],161,330],[[[329,[-1,-2]],[329,[-1,-2]]],161,330,330],[[],[[327,[-1]]],16],[[],[[328,[-1,-2]]],16,16],[[],[[303,[-1]]],16],[[],[[329,[-1,-2]]],16,16],[[[303,[-1]]],-1,[]],[[[303,[-1]],-1],[],[310,331]],[[[329,[-1]],-1],[],[310,331]],[[[303,[-1]],-1],3,[310,331]],[[[329,[-1]],-1],3,[310,331]],[[[327,[-1]],[327,[-1]]],4,149],[[[328,[-1,-2]],[328,[-1,-2]]],4,149,149],[[[303,[-1]],[303,[-1]]],4,149],[[[329,[-1,-2]],[329,[-1,-2]]],4,149,149],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[[327,[-1]],17],[[27,[3,150]]],334],[[[327,[-1]],17],[[27,[3,150]]],333],[[[327,[-1]],17],[[27,[3,150]]],19],[[[327,[-1]],17],[[27,[3,150]]],332],[[[328,[-1,-2]],17],[[27,[3,150]]],19,19],[[[328,[-1,-2]],17],[[27,[3,150]]],333,333],[[[303,[-1]],17],[[27,[3,150]]],19],[[[329,[-1,-2]],17],[[27,[3,150]]],19,19],[-1,-1,[]],[[[302,[-1]]],[[327,[-1]]],12],[[[151,[-1]]],[[327,[-1]]],310],[[[3,[-1,-1,-1]]],[[327,[-1]]],[]],[[[302,[-1]]],[[328,[-1,32]]],310],[[[3,[-1,-1,-1,-2]]],[[328,[-1,-2]]],[],[]],[[[302,[-1]]],[[328,[-1,123]]],310],[[[151,[-1]]],[[328,[-1]]],310],[[[327,[-1]]],[[328,[-1,123]]],310],[-1,-1,[]],[[[300,[-1]]],[[328,[-1]]],12],[[[327,[-1]]],[[328,[-1,32]]],310],[-1,[[303,[-1]]],310],[-1,-1,[]],[342,-1,[]],[[[303,[-1]]],[[329,[-1,123]]],310],[-1,-1,[]],[[[303,[-1]]],[[329,[-1,32]]],310],0,0,0,0,0,0,[[[329,[-1,-2]]],[[303,[-1]]],12,[]],[[[329,[-1,-2]]],[[303,[-1]]],[],[]],[[[327,[-1]],-2],3,24,23],[[[328,[-1,-2]],-3],3,24,24,23],[[[303,[-1]],-2],3,24,23],[[[329,[-1,-2]],-3],3,24,24,23],[[[327,[-1]]],[[3,[-1,-1,-1]]],[]],[-1,-2,[],[]],[[[327,[-1]]],[[151,[-1]]],[]],[[[328,[-1]]],[[151,[-1]]],[]],[[[328,[-1,-2]]],[[3,[-1,-1,-1,-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[-1,4,[]],[[[327,[-1]]],[[337,[[336,[-1]]]]],12],[[[328,[-1]]],[[337,[[336,[-1]]]]],12],[[[327,[-1]],-2],[[327,[-3]]],310,111,[]],[[[328,[-1]],-2],[[328,[-3]]],310,111,[]],[[[303,[-1]],-2],[[303,[-3]]],310,111,[]],[[[329,[-1]],-2],[[329,[-3]]],310,111,[]],[[[328,[-1,-2]],-3],[[328,[-1,-4]]],310,12,29,[]],[[[329,[-1,-2]],-3],[[329,[-1,-4]]],310,12,29,[]],[[[327,[-1]],-2],[[327,[-3]]],310,111,[]],[[[328,[-1,-2]],-3],[[328,[-4,-2]]],310,310,111,[]],[[[303,[-1]],-2],[[303,[-3]]],310,111,[]],[[[329,[-1,-2]],-3],[[329,[-4,-2]]],310,310,111,[]],[[[329,[-1,-2]],-3],[[329,[-4,-5]]],310,12,29,12,[[338,[-2]],12]],[[[328,[-1,-2]],-3],[[328,[-4,-5]]],310,12,111,12,[[338,[-2]],12]],[[[303,[-1]],-1],[],[310,339]],[[[303,[-1]],[303,[-1]]],[],339],[[[329,[-1]],-1],[],[310,339]],[[[303,[-1]],[303,[-1]]],3,[339,310]],[[[303,[-1]],-1],3,[310,339]],[[[329,[-1]],-1],3,[310,339]],[[-1,-1,-1],[[327,[-1]]],[]],[[-1,-1,-1,-1],[[328,[-1]]],[]],[-1,[[303,[-1]]],[]],[[-1,-2],[[329,[-1,-2]]],[],[]],[[[327,[-1]],-2],[[328,[-1,-2]]],12,[]],[[-1,-1,-1,-2],[[328,[-1,-2]]],[],[]],[[[327,[-1]],[327,[-1]]],[[21,[161]]],340],[[[328,[-1,-2]],[328,[-1,-2]]],[[21,[161]]],340,340],[[[303,[-1]],[303,[-1]]],[[21,[161]]],340],[[[329,[-1,-2]],[329,[-1,-2]]],[[21,[161]]],340,340],0,0,0,0,0,0,[[[328,[-1,-2]]],[[327,[-1]]],12,[]],[[[328,[-1,-2]]],[[327,[-1]]],[],[]],[[[303,[-1]],[303,[-1]]],[],341],[[[303,[-1]],-1],[],[310,341]],[[[329,[-1]],-1],[],[310,341]],[[[329,[-1,-2]],[329,[-1,-2]]],[],341,341],[[[303,[-1]],[303,[-1]]],3,[341,310]],[[[303,[-1]],-1],3,[310,341]],[[[329,[-1]],-1],3,[310,341]],[[[329,[-1,-2]],[329,[-1,-2]]],3,[341,310],[341,310]],[-1,[[303,[-2]]],160,[16,326]],[-1,[[329,[-2,-3]]],160,[16,326],[16,326]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,65,[]],[-1,65,[]],[[-1,35],65,[]],[[-1,35],65,[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],0,0,0,[[-1,50,31],3,[]],[[[344,[343]],-1],[[344,[343]]],[[224,[44]]]],[[[344,[-1]],-2,-3],[[344,[-1]]],[],2,26],[-1,-2,[],[]],[-1,-2,[],[]],[[[344,[-1]]],51,[]],[[-1,22,-2],[[344,[-1]]],[],29],[[[344,[[345,[-1,-2]]]],4],[[344,[[345,[-1,-2]]]]],2,[346,220,310]],[[[344,[-1]]],22,[]],[[[344,[-1]]],[[21,[-2]]],[],[]],[[[344,[347]],-1],[[344,[347]]],[[80,[65]]]],[[-1,42,59],3,[]],[-1,[[21,[69]]],[]],0,[[-1,35,63],3,[]],[-1,-1,[]],[-1,-2,[],[]],[[[344,[348]],48],[[344,[348]]]],[[[344,[[349,[-1]]]],48],[[344,[[349,[-1]]]]],2],[[[344,[-1]]],[[344,[-1]]],[]],[[[344,[-1]],-2],[[344,[-1]]],[],29],[[[344,[-1]]],3,[]],[[[344,[-1]]],3,[]],[[[344,[-1]]],3,[]],[[[344,[[350,[-1]]]],-2],[[344,[[350,[-1]]]]],2,26],[[[344,[[351,[-1]]]],-2],[[344,[[351,[-1]]]]],2,26],[[[344,[[352,[-1]]]],-2],[[344,[[352,[-1]]]]],2,[26,61,197]],[[[344,[-1]],-2],[[344,[-1]]],[],26],[[[344,[[352,[-1]]]],-2],[[344,[[352,[-1]]]]],2,[26,61,197]],[[[344,[[345,[-1,-2]]]],-3],[[344,[[345,[-1,-2]]]]],2,[346,220,310],26],[[[344,[[353,[-1,-2]]]],-3],[[344,[[353,[-1,-2]]]]],2,[346,220],26],[[[344,[354]],-1],[[344,[354]]],26],[[[344,[355]],-1],[[344,[355]]],26],[[[344,[356]],-1],[[344,[356]]],26],[[[344,[[357,[-1]]]],-2],[[344,[[357,[-1]]]]],2,26],[[[344,[[349,[-1]]]],-2],[[344,[[349,[-1]]]]],2,26],[[[344,[348]],-1],[[344,[348]]],26],[[[344,[[358,[-1,-2]]]],-3],[[344,[[358,[-1,-2]]]]],2,220,26],[[[344,[359]],-1],[[344,[359]]],[26,61,197]],[[[344,[360]],-1],[[344,[360]]],[26,61,197]],[[[344,[[358,[-1,-2]]]],-3],[[344,[[358,[-1,-2]]]]],2,220,26],[[[344,[-1]],-2],[[344,[-1]]],68,[26,61,197]],[[[344,[-1]],-2],[[344,[-1]]],68,[26,61,197]],[[[344,[-1]],-2],[[344,[-1]]],68,[26,61,197]],[[[344,[[352,[-1]]]],-2],[[344,[[352,[-1]]]]],2,[26,61,197]],[[[344,[-1]],-2],[[344,[-1]]],68,[26,61,197]],[[[344,[-1]],-2],[[344,[-1]]],68,[26,61,197]],[[[344,[-1]],-2],[[344,[-1]]],68,[26,61,197]],[[[344,[-1]],-2],[[344,[-1]]],68,[26,61,197]],[[[344,[-1]],-2],[[344,[-1]]],68,[26,61,197]],[[[344,[[358,[-1,-2]]]],-3],[[344,[[358,[-1,-2]]]]],2,220,26],[[[344,[360]],-1],[[344,[360]]],[26,61,197]],[[[344,[-1]],-2],[[344,[-1]]],68,[26,61,197]],[[[344,[-1]],-2],[[344,[-1]]],68,[26,61,197]],[[[344,[-1]],-2],[[344,[-1]]],68,[26,61,197]],[[[344,[-1]],-2],[[344,[-1]]],68,[26,61,197]],[[[344,[-1]],-2],[[344,[-1]]],68,[26,61,197]],[[[344,[-1]],-2],[[344,[-1]]],68,[26,61,197]],[[[344,[-1]],-2],[[344,[-1]]],68,[26,61,197]],[[[344,[[361,[-1]]]],-2],[[344,[[361,[-1]]]]],2,[26,61,197]],[[[344,[[362,[-1,-2,-3]]]],-4],[[344,[[362,[-1,-2,-3]]]]],2,2,[220,41],26],[[[344,[363]],-1],[[344,[363]]],26],[[[344,[364]],-1],[[344,[364]]],26],[[[344,[365]],-1],[[344,[365]]],26],[[[344,[366]],-1],[[344,[366]]],26],[[[344,[[352,[-1]]]],-2],[[344,[[352,[-1]]]]],2,[26,61,197]],[[[344,[367]],-1],[[344,[367]]],26],[[[344,[368]],-1],[[344,[368]]],26],0,[[[344,[[352,[-1]]]],-3],[[344,[[352,[-1]]]]],2,41,[[224,[-2]]]],[[[344,[[349,[-1]]]],[279,[48]]],[[344,[[349,[-1]]]]],2],[[[344,[348]],[279,[48]]],[[344,[348]]]],[[[344,[-1]]],48,[]],[[[344,[356]],4],[[344,[356]]]],[[[344,[[369,[-1]]]],-2],[[344,[[369,[-1]]]]],2,[[224,[4]]]],[[[344,[[361,[-1]]]],4],[[344,[[361,[-1]]]]],2],[[[344,[[345,[-1,-2]]]],4],[[344,[[345,[-1,-2]]]]],2,[346,220,310]],[[[344,[[349,[-1]]]],48],[[344,[[349,[-1]]]]],2],[[[344,[-1]],-2],[[344,[-1]]],68,29],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[[[344,[[352,[-1]]]],-2],[[344,[[352,[-1]]]]],2,[26,61,197]],[[[344,[370]],-1],[[344,[370]]],2],[[[344,[371]],-1],[[344,[371]]],2],[[[344,[366]],-2],[[344,[366]]],[[80,[25]]],[[224,[-1]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[349,[-1]],50,31],3,2],[[[352,[-1]],50,31],3,2],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[372,372],[373,373],[374,374],[375,375],[376,376],[377,377],[378,378],[379,379],[380,380],[381,381],[382,382],[383,383],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],0,0,0,0,[[22,48,-1,-2],[[344,[[357,[-1]]]]],2,26],[[22,4,4,-1,-2],[[344,[[361,[-1]]]]],2,29],[[22,-1,-2],[[344,[[349,[-1]]]]],2,29],[[22,-1,376,377],[[344,[360]]],26],[[],372],[[],374],[[],383],[[370,42,59],3],[[384,42,59],3],[[371,42,59],3],[[[352,[-1]],42,59],3,2],[385,[[21,[69]]]],[367,[[21,[69]]]],[386,[[21,[69]]]],[387,[[21,[69]]]],[388,[[21,[69]]]],[389,[[21,[69]]]],[[[357,[-1]]],[[21,[69]]],2],[370,[[21,[69]]]],[384,[[21,[69]]]],[371,[[21,[69]]]],[347,[[21,[69]]]],[390,[[21,[69]]]],[[[358,[-1,-2]]],[[21,[69]]],2,[]],[[[351,[-1]]],[[21,[69]]],2],[391,[[21,[69]]]],[364,[[21,[69]]]],[[[350,[-1]]],[[21,[69]]],2],[343,[[21,[69]]]],[363,[[21,[69]]]],[[[369,[-1]]],[[21,[69]]],2],[392,[[21,[69]]]],[393,[[21,[69]]]],[394,[[21,[69]]]],[368,[[21,[69]]]],[[[353,[-1,-2]]],[[21,[69]]],2,[346,220]],[395,[[21,[69]]]],[359,[[21,[69]]]],[[[362,[-1,-2,-3]]],[[21,[69]]],2,2,[220,41]],[365,[[21,[69]]]],[396,[[21,[69]]]],[397,[[21,[69]]]],[398,[[21,[69]]]],[373,[[21,[69]]]],[355,[[21,[69]]]],[[[361,[-1]]],[[21,[69]]],2],[[[349,[-1]]],[[21,[69]]],2],[348,[[21,[69]]]],[360,[[21,[69]]]],[366,[[21,[69]]]],[[[352,[-1]]],[[21,[69]]],2],[354,[[21,[69]]]],[[[345,[-1,-2]]],[[21,[69]]],2,[346,220,310]],[356,[[21,[69]]]],[[372,372],4],[[373,373],4],[[376,376],4],[[377,377],4],[[378,378],4],[[379,379],4],[[380,380],4],[[381,381],4],[[382,382],4],[[383,383],4],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[385,35,63],3],[[367,35,63],3],[[386,35,63],3],[[[357,[-1]],35,63],3,2],[[347,35,63],3],[[[358,[-1,-2]],35,63],3,2,[]],[[391,35,63],3],[[364,35,63],3],[[[350,[-1]],35,63],3,2],[[363,35,63],3],[[[369,[-1]],35,63],3,2],[[368,35,63],3],[[[353,[-1,-2]],35,63],3,2,[346,220]],[[[362,[-1,-2,-3]],35,63],3,2,2,[220,41]],[[365,35,63],3],[[396,35,63],3],[[397,35,63],3],[[398,35,63],3],[[373,35,63],3],[[374,35,63],3],[[355,35,63],3],[[375,35,63],3],[[[361,[-1]],35,63],3,2],[[[349,[-1]],35,63],3,2],[[348,35,63],3],[[360,35,63],3],[[366,35,63],3],[[[352,[-1]],35,63],3,2],[[354,35,63],3],[[[345,[-1,-2]],35,63],3,2,[346,220,310]],[[356,35,63],3],[[372,17],18],[[373,17],18],[[374,17],18],[[399,17],18],[[376,17],18],[[377,17],18],[[378,17],18],[[379,17],18],[[380,17],18],[[381,17],18],[[382,17],18],[[383,17],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[[22,-1],[[344,[343]]],2],0,0,0,[[22,-1,-2],[[344,[367]]],2,2],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[22,-1,-2],[[344,[385]]],26,29],[[22,-1],[[344,[367]]],2],[[22,-1,4,-2],[[344,[386]]],2,26],[[22,-1,-2],[[344,[387]]],26,26],[22,[[344,[388]]]],[[22,-2],[[344,[389]]],41,[[224,[-1]]]],[[22,-1,-2,4],[[344,[[357,[-2]]]]],[[224,[48]]],2],[[22,4,55,55,48,48,372],[[344,[370]]]],[[22,55,55,55,48,372],[[344,[384]]]],[[22,55,55,55,48,372],[[344,[371]]]],[[22,-2],[[344,[347]]],237,[[224,[-1]],12]],[[22,-2],[[344,[390]]],237,[[224,[-1]],12]],[[22,-1,-2],[[344,[[358,[-1,-3]]]]],2,26,12],[[22,-1,4,-2],[[344,[[351,[-1]]]]],2,26],[22,[[344,[391]]]],[[22,-1,-2,4],[[344,[364]]],2,2],[[22,-1,4,-2],[[344,[[350,[-1]]]]],2,26],[[22,-1,383],[[344,[343]]],2],[[22,-1],[[344,[363]]],2],[[22,-1,-2,383,-3],[[344,[[369,[-1]]]]],2,2,26],[[22,-1],[[344,[392]]],29],[[22,-1],[[344,[393]]],29],[[22,-1],[[344,[394]]],29],[[22,-1],[[344,[368]]],2],[[-1,-2],400,26,26],[[22,-1],[[344,[[353,[-1,-2]]]]],2,[346,220]],[[22,-1],[[344,[395]]],29],[[22,-2],[[344,[359]]],237,[[224,[-1]],12]],[[22,-1,-2],[[344,[[362,[-1,-2,-3]]]]],[310,2],[310,2],[220,41]],[[22,-1],[[344,[365]]],2],[[22,-1],[[344,[396]]],26],[[22,-1,-2],[[344,[397]]],26,26],[[22,-1,-2],[[344,[398]]],[26,61,197],26],[[22,65,[21,[65]]],[[344,[373]]]],[[22,128,-1],[[344,[355]]],2],[[22,48,48,4,4,-1],[[344,[[361,[[7,[0]]]]]]],29],[[22,-1],[[344,[[349,[-1]]]]],2],[[22,-1,-3],[[344,[348]]],2,41,[[224,[-2]]]],[[22,-1,376,377],[[344,[360]]],2],[[22,-1,-2],[[344,[366]]],2,[12,26]],[[22,-1],[[344,[[352,[-1]]]]],2],[[22,-1],[[344,[354]]],2],[[22,-1],[[344,[[345,[-1,-2]]]]],2,[346,220,310]],[[22,-1,48,-2],[[344,[356]]],2,26],[[22,-1,4],[[344,[[352,[-1]]]]],2],0,0,0,[[374,374],4],[[375,375],4],[[376,376],4],[[381,381],4],[[383,383],4],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[[22,-1],[[344,[343]]],2],0,0,[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[401,[-1,-2,-3]]],[[401,[-1,-2,-3]]],[],[],[]],[[[402,[-1,-2,-3]]],[[402,[-1,-2,-3]]],[],[],[]],[[[403,[-1,-2,-3]]],[[403,[-1,-2,-3]]],[],[],[]],[[[404,[-1,-2,-3]]],[[404,[-1,-2,-3]]],[],[],[]],[[[405,[-1,-2,-3]]],[[405,[-1,-2,-3]]],[],[],[]],[[[406,[-1,-2,-3]]],[[406,[-1,-2,-3]]],[],[],[]],[[[407,[-1,-2,-3]]],[[407,[-1,-2,-3]]],[],[],[]],[[[408,[-1,-2,-3]]],[[408,[-1,-2,-3]]],[],[],[]],[[[409,[-1,-2,-3]]],[[409,[-1,-2,-3]]],[],[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[[401,[-1,-2,-3]],[401,[-1,-2,-3]]],4,149,149,149],[[[402,[-1,-2,-3]],[402,[-1,-2,-3]]],4,149,149,149],[[[403,[-1,-2,-3]],[403,[-1,-2,-3]]],4,149,149,149],[[[404,[-1,-2,-3]],[404,[-1,-2,-3]]],4,149,149,149],[[[405,[-1,-2,-3]],[405,[-1,-2,-3]]],4,149,149,149],[[[406,[-1,-2,-3]],[406,[-1,-2,-3]]],4,149,149,149],[[[407,[-1,-2,-3]],[407,[-1,-2,-3]]],4,149,149,149],[[[408,[-1,-2,-3]],[408,[-1,-2,-3]]],4,149,149,149],[[[409,[-1,-2,-3]],[409,[-1,-2,-3]]],4,149,149,149],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],0,[[[401,[-1,-2,-3]],17],18,[],[],[]],[[[402,[-1,-2,-3]],17],18,[],[],[]],[[[403,[-1,-2,-3]],17],18,[],[],[]],[[[404,[-1,-2,-3]],17],18,[],[],[]],[[[405,[-1,-2,-3]],17],18,[],[],[]],[[[406,[-1,-2,-3]],17],18,[],[],[]],[[[407,[-1,-2,-3]],17],18,[],[],[]],[[[408,[-1,-2,-3]],17],18,[],[],[]],[[[409,[-1,-2,-3]],17],18,[],[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[401,[-1,-2,-3]],-4],3,[],[],[],23],[[[402,[-1,-2,-3]],-4],3,[],[],[],23],[[[403,[-1,-2,-3]],-4],3,[],[],[],23],[[[404,[-1,-2,-3]],-4],3,[],[],[],23],[[[405,[-1,-2,-3]],-4],3,[],[],[],23],[[[406,[-1,-2,-3]],-4],3,[],[],[],23],[[[407,[-1,-2,-3]],-4],3,[],[],[],23],[[[408,[-1,-2,-3]],-4],3,[],[],[],23],[[[409,[-1,-2,-3]],-4],3,[],[],[],23],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[],[[401,[-1,-2,-3]]],[],[],[]],[[],[[402,[-1,-2,-3]]],[],[],[]],[[],[[403,[-1,-2,-3]]],[],[],[]],[[],[[404,[-1,-2,-3]]],[],[],[]],[[],[[405,[-1,-2,-3]]],[],[],[]],[[],[[406,[-1,-2,-3]]],[],[],[]],[[],[[407,[-1,-2,-3]]],[],[],[]],[[],[[408,[-1,-2,-3]]],[],[],[]],[[],[[409,[-1,-2,-3]]],[],[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[[[401,[-1,-2,-3]],[362,[-1,-2,-3]],-4],-5,2,2,[220,41],29,[]],[[[402,[-1,-2,-3]],[362,[-1,-2,-3]],-4],-5,2,2,[220,41],29,[]],[[[403,[-1,-2,-3]],[362,[-1,-2,-3]],-4],-5,2,2,[220,41],29,[]],[[[404,[-1,-2,-3]],[362,[-1,-2,-3]],-4],-5,2,2,[220,41],29,[]],[[[405,[-1,-2,-3]],[362,[-1,-2,-3]],-4],-5,2,2,[220,41],29,[]],[[[406,[-1,-2,-3]],[362,[-1,-2,-3]],-4],-5,2,2,[220,41],29,[]],[[[407,[-1,-2,-3]],[362,[-1,-2,-3]],-4],-5,2,2,[220,41],29,[]],[[[408,[-1,-2,-3]],[362,[-1,-2,-3]],-4],-5,2,2,[220,41],29,[]],[[[409,[-1,-2,-3]],-4],-5,2,2,[220,41],29,[]],[-1,60,[]],[-1,60,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[410,410],[411,411],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[410,410],4],[[411,411],4],[[-1,60],4,[]],[[-1,60],4,[]],[[410,17],18],[[411,17],18],[-1,-1,[]],[-1,-1,[]],[[-1,22],[],[]],[[-1,22],21,[]],[[410,-1],3,23],[[411,-1],3,23],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],410],[[],411],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[[410,396,-1],-2,29,[]],[[411,-1],-2,29,[]],[-1,60,[]],[-1,-2,[],[]],[-1,-2,[],[]],[412,412],[[-1,-2],3,[],[]],[[412,412],4],[[-1,60],4,[]],[[412,17],18],[-1,-1,[]],[[412,-1],3,23],[-1,-2,[],[]],[[],412],0,[-1,-2,[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[[412,-1],-2,29,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[48,48],[[413,48],48],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[413,48],48],[[414,48],48],[[415,96],96],[[416,48],48],[417,417],[418,418],[416,416],[413,413],[419,419],[414,414],[415,415],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[48,48],[[413,48],48],[[],417],[[],419],[[417,48],65],[[417,417],4],[[418,418],4],[[419,419],4],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[417,17],18],[[418,17],18],[[416,17],18],[[413,17],18],[[419,17],18],[[414,17],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[414,48],48],[[415,96],48],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[416,48],[415,96],[413,48],[414,48],[416,48],[415,96],[413,48],[414,48],[[48,48,418,417,[21,[65]]],416],[[48,48,418,417,4],413],[[48,48,418,419,4],414],[[96,96,[21,[26]]],415],[[413,48],48],[[413,48],48],[[-1,48],65,[]],[[416,48],65],[[413,48],65],[[414,48],65],[[415,48],65],[[414,48],48],[[415,48],96],[[418,48,48,48],48],[[416,48],48],[[-1,48],48,[]],[[415,48],48],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[416,418],[413,418],[414,418],[[418,48,48,48],48],[[416,48],48],0,0,[-1,60,[]],[-1,60,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[420,420],[421,421],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[420,420],4],[[421,421],4],[[-1,60],4,[]],[[-1,60],4,[]],[[420,17],18],[[421,17],18],[-1,-1,[]],[-1,-1,[]],[[-1,22],[],[]],[[-1,22],[],[]],[[-1,22],21,[]],[[-1,22],21,[]],[[420,-1],3,23],[[421,-1],3,23],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],420],[[],421],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[[420,374,-1],-2,29,[]],[[421,-1],-2,29,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[422,422],[423,423],[424,424],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[422,422],4],[[423,423],4],[[424,424],4],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[422,17],18],[[423,17],18],[[424,17],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,22],[],[]],[[-1,22],[],[]],[[-1,22],21,[]],[[-1,22],21,[]],[[422,-1],3,23],[[423,-1],3,23],[[424,-1],3,23],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],422],[[],423],[[],424],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[[422,397,-1],-2,29,[]],[[423,397,-1],-2,29,[]],[[424,-1],-2,29,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,60,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[425,425],[426,426],[427,427],[428,428],[429,429],[430,430],[431,431],[432,432],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[425,425],4],[[426,426],4],[[427,427],4],[[428,428],4],[[429,429],4],[[430,430],4],[[431,431],4],[[432,432],4],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[-1,60],4,[]],[[425,17],18],[[426,17],18],[[427,17],18],[[428,17],18],[[429,17],18],[[430,17],18],[[431,17],18],[[432,17],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[-1,22],[],[]],[[-1,22],[],[]],[[-1,22],[],[]],[[-1,22],[],[]],[[-1,22],[],[]],[[-1,22],[],[]],[[-1,22],21,[]],[[-1,22],21,[]],[[-1,22],21,[]],[[-1,22],21,[]],[[-1,22],21,[]],[[-1,22],21,[]],[[425,-1],3,23],[[426,-1],3,23],[[427,-1],3,23],[[428,-1],3,23],[[429,-1],3,23],[[430,-1],3,23],[[431,-1],3,23],[[432,-1],3,23],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],425],[[],426],[[],427],[[],428],[[],429],[[],430],[[],431],[[],432],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[-1,28,[]],[[425,356,-1],-2,29,[]],[[426,356,-1],-2,29,[]],[[427,356,-1],-2,29,[]],[[428,356,-1],-2,29,[]],[[429,356,-1],-2,29,[]],[[430,356,-1],-2,29,[]],[[431,356,-1],-2,29,[]],[[432,-1],-2,29,[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,4],-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[83,83],[433,433],[[-1,-2],3,[],[]],[[-1,-2],3,[],[]],[[-1,4],-1,[]],[[83,17],18],[[433,17],18],[265,83],[-1,-1,[]],[-1,-1,[]],[[-1,128,128,[46,[32]]],-1,[]],[[-1,-2],-1,[],[[80,[76]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[21,[-2]]],-1,[],[[80,[76]]]],[[-1,4],-1,[]],[[-1,[21,[-2]]],-1,[],[[80,[76]]]],[[-1,4],-1,[]],[[-1,-2],-1,[],[[80,[434]]]],[[-1,4],-1,[]],[[-1,-2],-1,[],41],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,4],-1,[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,[[27,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[[-1,4],-1,[]],[[-1,4],-1,[]],0,0],"c":[1334,1393,1550,1582,1754,2014,2020,2046,6189,6193,6204,6208,6272,6278,6458,6459,6460,6461,6493,6494,6495,6496,6563,6564,6565,6566,6594,6595,6596,6597,7111,7112,7116,7127,7128],"p":[[3,"AndLens",20],[8,"Lens",20],[15,"tuple"],[15,"bool"],[3,"Map",20],[3,"Then",20],[3,"Wrapper",20],[3,"OrLens",20],[3,"MapRef",20],[3,"Index",20],[3,"StaticLens",20],[8,"Clone",8773],[3,"UnwrapLens",20],[3,"IntoLens",20],[3,"RatioLens",20],[8,"Default",8774],[3,"Formatter",8775],[6,"Result",8775],[8,"Debug",8775],[8,"DataContext",254],[4,"Option",8776],[3,"Context",254],[8,"Hasher",8777],[8,"Hash",8777],[15,"usize"],[8,"Fn",8778],[4,"Result",8779],[3,"TypeId",8780],[8,"FnOnce",8778],[8,"TryInto",8781],[3,"AccessNode",254],[15,"u8"],[15,"slice"],[8,"AsRef",8781],[3,"EventContext",254],[3,"Error",8782],[8,"IntoCssStr",5248],[3,"Duration",8783],[3,"Timer",785],[3,"LanguageIdentifier",8784],[8,"ToString",8785],[3,"DrawContext",254],[4,"Filter",3854],[4,"Color",3854],[4,"ImageOrGradient",3854],[3,"Vec",8786],[4,"BackgroundSize",3854],[15,"f32"],[4,"BorderCornerShape",3854],[3,"AccessContext",254],[3,"BoundingBox",3440],[3,"BoxShadow",3854],[3,"Path",5265],[3,"TimedEventHandle",785],[4,"Units",3304],[3,"ContextProxy",254],[4,"FamilyOwned",8787],[4,"Display",3854],[6,"Canvas",7159],[8,"Any",8780],[8,"Send",8788],[4,"ProxyEmitError",254],[3,"Event",785],[3,"Environment",583],[3,"String",8785],[8,"Error",8789],[3,"Box",8790],[8,"View",7159],[15,"str"],[4,"DynamicImage",1150],[4,"ImageRetentionPolicy",3837],[3,"ResourceContext",254],[8,"EventProxy",254],[3,"Modifiers",2595],[3,"MouseState",2595],[3,"WindowSize",8791],[15,"f64"],[3,"NodeId",8792],[6,"Instant",8793],[8,"Into",8781],[4,"ClipPath",3854],[4,"DefaultActionVerb",8792],[4,"DropData",8684],[4,"Live",8792],[4,"Overflow",3854],[4,"PointerEvents",3854],[4,"Role",8792],[4,"Angle",3854],[3,"Scale",3854],[4,"TextDirection",8792],[3,"TextSelection",8792],[4,"ThemeMode",583],[4,"Transform",3854],[3,"Translate",3854],[4,"Visibility",3854],[15,"i32"],[4,"TextAlign",3854],[3,"Transform2D",5265],[4,"AppTheme",583],[3,"Theme",583],[3,"locale",656],[3,"theme",656],[3,"caret_timer",656],[3,"root",656],[3,"app_theme",731],[3,"sys_theme",731],[3,"root",731],[4,"Propagation",785],[4,"TimerAction",785],[3,"EventMeta",785],[8,"FnMut",8778],[3,"Rgb",1150],[8,"Primitive",1150],[8,"Enlargeable",8794],[3,"Luma",1150],[3,"Rgba",1150],[3,"LumaA",1150],[3,"ImageBuffer",1150],[3,"FlatSamples",1150],[8,"Pixel",1150],[8,"Deref",8795],[8,"AsMut",8781],[15,"u16"],[3,"View",2270],[4,"Error",2270],[3,"ViewMut",2270],[4,"ColorType",1150],[15,"u32"],[8,"DerefMut",8795],[3,"Frame",1150],[4,"ImageFormat",1150],[3,"SubImage",1150],[4,"ExtendedColorType",1150],[3,"Delay",1150],[4,"ImageOutputFormat",1150],[3,"Progress",1150],[3,"Pixels",1150],[8,"Sized",8788],[3,"Frames",1150],[4,"ImageError",1150],[8,"FromColor",8796],[8,"GenericImageView",1150],[3,"Rect",2575],[15,"u64"],[3,"EnumeratePixels",1883],[3,"EnumeratePixelsMut",1883],[3,"EnumerateRows",1883],[3,"EnumerateRowsMut",1883],[8,"PartialEq",8797],[3,"Error",8775],[15,"array"],[8,"ImageDecoder",1150],[3,"OsStr",8798],[3,"Path",8799],[8,"Index",8800],[8,"IndexMut",8800],[4,"NormalForm",2270],[8,"BufRead",8801],[8,"Seek",8801],[8,"Iterator",8802],[4,"Ordering",8797],[3,"Pixels",1883],[3,"PixelsMut",1883],[4,"FilterType",2409],[3,"Rows",1883],[3,"RowsMut",1883],[3,"SampleLayout",2270],[8,"PixelWithColorType",1150],[3,"Limits",2511],[8,"Write",8801],[8,"ImageEncoder",1150],[3,"PngDecoder",2006],[3,"ApngDecoder",2006],[8,"Read",8801],[4,"CompressionType",2006],[4,"FilterType",2006],[3,"PngEncoder",2006],[3,"PngReader",2006],[4,"UnsupportedErrorKind",2098],[4,"ParameterErrorKind",2098],[4,"LimitErrorKind",2098],[4,"ImageFormatHint",2098],[3,"UnsupportedError",2098],[3,"EncodingError",2098],[3,"ParameterError",2098],[3,"DecodingError",2098],[3,"LimitError",2098],[3,"BiLevel",2409],[8,"ColorMap",2409],[8,"GenericImage",1150],[15,"i64"],[3,"LimitSupport",2511],[3,"Reader",2511],[3,"File",8803],[3,"BufReader",8804],[3,"KeymapEntry",2595],[8,"Sync",8788],[4,"Code",2595],[4,"MouseButton",2595],[3,"MouseButtonData",2595],[8,"GenerationalId",8805],[4,"Key",2595],[3,"Keymap",2595],[3,"KeyChord",8806],[8,"IntoIterator",8807],[3,"GeoChanged",3304],[4,"LayoutType",3304],[4,"PositionType",3304],[3,"Stretch",8808],[3,"AutoKeyword",8809],[3,"Percentage",8810],[3,"LengthPixels",8811],[3,"Iter",8812],[3,"IterNames",8812],[3,"Parser",8813],[4,"CustomParseError",8814],[3,"ParseError",8813],[3,"Localized",3490],[4,"FluentValue",8815],[8,"Data",20],[3,"LinearGradientBuilder",3518],[4,"LengthOrPercentage",3854],[3,"ColorStop",8816],[8,"Res",20],[4,"Gradient",3854],[4,"BackgroundImage",3854],[3,"BoxShadowBuilder",3518],[4,"Length",3854],[3,"Rect",8817],[3,"BorderRadius",8818],[4,"CursorIcon",3854],[3,"TooltipModel",3518],[3,"FontSize",3854],[4,"FontStretch",3854],[4,"FontStyle",3854],[3,"FontWeight",3854],[8,"ToStringLocalized",3490],[3,"Opacity",3854],[3,"Position",3854],[4,"LineDirection",3854],[3,"tooltip_visible",3798],[3,"root",3798],[3,"RGBA",3854],[3,"Style",3854],[3,"SystemFlags",3854],[4,"GenericFontFamily",3854],[4,"FontFamily",3854],[4,"FontWeightKeyword",3854],[3,"LinearGradient",3854],[4,"HorizontalPositionKeyword",3854],[4,"LengthValue",3854],[3,"Matrix",3854],[3,"Transition",3854],[4,"VerticalPositionKeyword",3854],[4,"CssRule",3854],[4,"Calc",8819],[4,"Color",8820],[3,"RGBA",8820],[4,"FontSizeKeyword",8821],[4,"PositionComponent",8822],[3,"BorderWidthValue",8823],[4,"PercentageOrNumber",8824],[4,"EasingFunction",8825],[8,"Parse",8826],[3,"PathBuf",8799],[4,"CSS",5248],[3,"Canvas",5265],[3,"FontId",5265],[4,"ErrorKind",5265],[8,"Renderer",5265],[3,"TextContext",5265],[3,"Atlas",5265],[3,"ImageFlags",5265],[3,"ImageInfo",5265],[3,"Paint",5265],[4,"Solidity",5265],[3,"FontMetrics",5265],[3,"Color",5265],[3,"Range",8827],[4,"Baseline",5265],[4,"Align",5265],[4,"RenderMode",5265],[3,"TextMetrics",5265],[3,"DrawCommand",5265],[3,"Quad",5265],[3,"ImageId",5265],[4,"PixelFormat",5265],[4,"ImageSource",5265],[4,"ImageFilter",5265],[4,"RenderTarget",5265],[4,"FillRule",5265],[4,"BlendFactor",5265],[4,"CompositeOperation",5265],[3,"CompositeOperationState",5265],[4,"LineCap",5265],[4,"LineJoin",5265],[3,"Size",8828],[3,"GlyphDrawCommands",5265],[3,"NulError",8829],[3,"RGBA",6751],[3,"Img",6425],[3,"RGB",6751],[3,"Gray",6954],[3,"Bounds",8830],[3,"ImageStore",8828],[3,"Vertex",6600],[3,"Command",6600],[3,"NonZeroUsize",8831],[3,"PathIter",8832],[8,"Copy",8788],[3,"RowsIter",6425],[3,"RowsIterMut",6425],[3,"PixelsRefIter",6425],[3,"PixelsIterMut",6425],[4,"Cow",8833],[3,"PixelsIter",6425],[3,"Chunks",8834],[3,"ChunksMut",8834],[8,"ToOwned",8833],[3,"OpenGl",6600],[3,"Void",6600],[3,"Drawable",6600],[4,"ShaderType",6600],[4,"CommandType",6600],[3,"VoidImage",8835],[8,"Add",8836],[3,"BGR",6954],[3,"BGRA",6954],[3,"GrayAlpha",6954],[8,"Ord",8797],[8,"Div",8836],[8,"UpperHex",8775],[8,"Display",8775],[8,"LowerHex",8775],[15,"i16"],[3,"Iter",8834],[3,"Cloned",8837],[8,"From",8781],[8,"Mul",8836],[8,"PartialOrd",8797],[8,"Sub",8836],[15,"never"],[3,"ProgressBar",7248],[3,"Handle",7159],[3,"AnalogTimepicker",7248],[8,"Timelike",8838],[3,"Label",7248],[3,"NamedSlider",7248],[3,"Slider",7248],[3,"Popup",7248],[3,"MenuPopup",7248],[3,"Textbox",7248],[3,"DigitalTimepicker",7248],[3,"Timepicker",7248],[3,"Rating",7248],[3,"VirtualList",7248],[3,"Knob",7248],[3,"List",7248],[3,"Chip",7248],[3,"Spinbox",7248],[3,"ScrollView",7248],[3,"ComboBox",7248],[3,"RadioButton",7248],[3,"PickList",7248],[3,"Datepicker",7248],[3,"TabView",7248],[3,"Checkbox",7248],[3,"Switch",7248],[3,"Scrollbar",7248],[3,"ArcTrack",7248],[3,"TickKnob",7248],[4,"KnobMode",7248],[3,"Notification",7248],[3,"PopupData",7248],[3,"ScrollData",7248],[4,"SpinboxKind",7248],[4,"SpinboxIcons",7248],[4,"AMOrPM",7248],[3,"DayTime",7248],[4,"DigitalTimepickerEvent",7248],[4,"AnalogTimepickerPage",7248],[4,"AnalogTimepickerEvent",7248],[4,"Orientation",7248],[3,"Ticks",7248],[3,"Button",7248],[3,"ComboPopup",7248],[3,"Dropdown",7248],[3,"Element",7248],[3,"Image",7248],[3,"Icon",7248],[3,"MenuDivider",7248],[3,"VStack",7248],[3,"HStack",7248],[3,"ZStack",7248],[3,"Tooltip",7248],[3,"MenuBar",7248],[3,"Submenu",7248],[3,"MenuButton",7248],[4,"PopupEvent",7248],[3,"TabPair",7248],[3,"filter_text",8052],[3,"placeholder",8052],[3,"on_select",8052],[3,"list_lens",8052],[3,"selected",8052],[3,"is_open",8052],[3,"hovered",8052],[3,"p",8052],[3,"root",8052],[3,"is_open",8214],[3,"root",8214],[3,"root",8253],[3,"DecibelMap",8271],[3,"FrequencyMap",8271],[3,"IntMap",8271],[3,"GenericMap",8271],[4,"DisplayDecimals",8271],[4,"ValueScaling",8271],[4,"FrequencyDisplayMode",8271],[3,"is_open",8420],[3,"root",8420],[3,"is_open",8462],[3,"open_on_hover",8462],[3,"root",8462],[3,"offset",8522],[3,"num_items",8522],[3,"item_height",8522],[3,"visible_items",8522],[3,"scrolly",8522],[3,"scroll_to_cursor",8522],[3,"on_change",8522],[3,"root",8522],[4,"WindowEvent",8684],[3,"Position",8791],[8,"Setter",20],[8,"LensExt",20],[3,"MapState",20],[3,"MapRefState",20],[3,"Binding",20],[8,"EmitContext",254],[8,"TreeProps",254],[4,"EnvironmentEvent",583],[6,"ImageResult",1150],[8,"EncodableLayout",1150],[8,"AnimationDecoder",1150],[8,"ImageDecoderRect",1150],[8,"ConvertBuffer",1883],[13,"Unsupported",6314],[4,"KeymapEvent",2595],[8,"Model",3514],[4,"TooltipEvent",3518],[8,"StyleModifiers",3518],[8,"LayoutModifiers",3518],[8,"TextModifiers",3518],[8,"AbilityModifiers",3518],[8,"AccessibilityModifiers",3518],[8,"ActionModifiers",3518],[6,"HorizontalPosition",3854],[6,"VerticalPosition",3854],[13,"Explicit",5244],[13,"Corner",5246],[13,"GaussianBlur",6068],[8,"ImgExtMut",6425],[8,"ImgExt",6425],[6,"ImgVec",6425],[6,"ImgRef",6425],[6,"ImgRefMut",6425],[13,"ClearRect",6737],[13,"ConcaveFill",6737],[13,"RenderFilteredImage",6737],[13,"ConvexFill",6737],[13,"Stroke",6737],[13,"Triangles",6737],[13,"StencilStroke",6737],[6,"RGBA8",6751],[6,"RGBA16",6751],[8,"FromSlice",6751],[8,"ComponentBytes",6751],[8,"ComponentSlice",6751],[8,"AsPixels",6751],[6,"RGB8",6751],[6,"RGB16",6751],[8,"ComponentMap",6751],[8,"ColorComponentMap",6751],[8,"Zeroable",6751],[6,"BGRA8",6954],[6,"BGRA16",6954],[6,"BGR8",6954],[6,"BGR16",6954],[4,"TextEvent",7248],[4,"ScrollEvent",7248],[4,"ComboBoxEvent",7248],[4,"MenuEvent",7248],[4,"SpinboxEvent",7248],[4,"VirtualListEvent",7248],[8,"NormalizedMap",8271],[13,"HzThenKHz",8418],[8,"WindowModifiers",8684],[13,"Press",8771],[13,"PressDown",8771]],"b":[[369,"impl-Display-for-ProxyEmitError"],[370,"impl-Debug-for-ProxyEmitError"],[1456,"impl-GenericImageView-for-ImageBuffer%3CP,+Container%3E"],[1457,"impl-ImageBuffer%3CP,+Container%3E"],[1496,"impl-Display-for-ImageError"],[1497,"impl-Debug-for-ImageError"],[1513,"impl-From%3CError%3E-for-ImageError"],[1515,"impl-From%3CError%3E-for-ImageError"],[1531,"impl-From%3CImageBuffer%3CLumaA%3Cu16%3E,+Vec%3Cu16%3E%3E%3E-for-DynamicImage"],[1532,"impl-From%3CImageBuffer%3CLuma%3Cu8%3E,+Vec%3Cu8%3E%3E%3E-for-DynamicImage"],[1534,"impl-From%3CImageBuffer%3CRgb%3Cf32%3E,+Vec%3Cf32%3E%3E%3E-for-DynamicImage"],[1535,"impl-From%3CImageBuffer%3CLumaA%3Cu8%3E,+Vec%3Cu8%3E%3E%3E-for-DynamicImage"],[1536,"impl-From%3CImageBuffer%3CLuma%3Cf32%3E,+Vec%3Cf32%3E%3E%3E-for-DynamicImage"],[1537,"impl-From%3CImageBuffer%3CRgba%3Cu16%3E,+Vec%3Cu16%3E%3E%3E-for-DynamicImage"],[1538,"impl-From%3CImageBuffer%3CRgba%3Cf32%3E,+Vec%3Cf32%3E%3E%3E-for-DynamicImage"],[1539,"impl-From%3CImageBuffer%3CLuma%3Cu16%3E,+Vec%3Cu16%3E%3E%3E-for-DynamicImage"],[1540,"impl-From%3CImageBuffer%3CRgb%3Cu8%3E,+Vec%3Cu8%3E%3E%3E-for-DynamicImage"],[1541,"impl-From%3CImageBuffer%3CLumaA%3Cf32%3E,+Vec%3Cf32%3E%3E%3E-for-DynamicImage"],[1542,"impl-From%3CImageBuffer%3CRgb%3Cu16%3E,+Vec%3Cu16%3E%3E%3E-for-DynamicImage"],[1543,"impl-From%3CImageBuffer%3CRgba%3Cu8%3E,+Vec%3Cu8%3E%3E%3E-for-DynamicImage"],[1578,"impl-GenericImageView-for-ImageBuffer%3CP,+Container%3E"],[1579,"impl-ImageBuffer%3CP,+Container%3E"],[1583,"impl-ImageBuffer%3CP,+Container%3E"],[1584,"impl-GenericImage-for-ImageBuffer%3CP,+Container%3E"],[1613,"impl-FlatSamples%3CBuffer%3E"],[1614,"impl-Index%3C(u8,+u32,+u32)%3E-for-FlatSamples%3CBuffer%3E"],[1721,"impl-GenericImage-for-ImageBuffer%3CP,+Container%3E"],[1722,"impl-ImageBuffer%3CP,+Container%3E"],[2169,"impl-Debug-for-UnsupportedError"],[2170,"impl-Display-for-UnsupportedError"],[2172,"impl-Display-for-EncodingError"],[2173,"impl-Debug-for-EncodingError"],[2174,"impl-Debug-for-ParameterError"],[2175,"impl-Display-for-ParameterError"],[2177,"impl-Debug-for-DecodingError"],[2178,"impl-Display-for-DecodingError"],[2179,"impl-Debug-for-LimitError"],[2180,"impl-Display-for-LimitError"],[2182,"impl-Debug-for-ImageFormatHint"],[2183,"impl-Display-for-ImageFormatHint"],[2197,"impl-From%3CImageFormat%3E-for-ImageFormatHint"],[2198,"impl-From%3C%26Path%3E-for-ImageFormatHint"],[2331,"impl-Display-for-Error"],[2332,"impl-Debug-for-Error"],[3183,"impl-PartialEq-for-KeymapEntry%3CT%3E"],[3184,"impl-PartialEq%3CT%3E-for-KeymapEntry%3CT%3E"],[3195,"impl-LowerHex-for-Modifiers"],[3196,"impl-Binary-for-Modifiers"],[3197,"impl-Debug-for-Modifiers"],[3198,"impl-UpperHex-for-Modifiers"],[3199,"impl-Octal-for-Modifiers"],[3200,"impl-Display-for-Code"],[3201,"impl-Debug-for-Code"],[3205,"impl-Debug-for-Key"],[3206,"impl-Display-for-Key"],[3328,"impl-Flags-for-GeoChanged"],[3329,"impl-GeoChanged"],[3367,"impl-UpperHex-for-GeoChanged"],[3368,"impl-LowerHex-for-GeoChanged"],[3369,"impl-Octal-for-GeoChanged"],[3370,"impl-Binary-for-GeoChanged"],[3371,"impl-Debug-for-GeoChanged"],[3374,"impl-From%3CStretch%3E-for-Units"],[3376,"impl-From%3CAutoKeyword%3E-for-Units"],[3377,"impl-From%3CPercentage%3E-for-Units"],[3378,"impl-From%3CLengthPixels%3E-for-Units"],[3381,"impl-GeoChanged"],[3382,"impl-Flags-for-GeoChanged"],[3461,"impl-Display-for-BoundingBox"],[3462,"impl-Debug-for-BoundingBox"],[4273,"impl-Flags-for-SystemFlags"],[4274,"impl-SystemFlags"],[4518,"impl-PartialEq%3Cf32%3E-for-Angle"],[4519,"impl-PartialEq-for-Angle"],[4541,"impl-PartialEq-for-Length"],[4542,"impl-PartialEq%3Cf32%3E-for-Length"],[4543,"impl-PartialEq%3Cf32%3E-for-LengthValue"],[4544,"impl-PartialEq-for-LengthValue"],[4611,"impl-Display-for-CursorIcon"],[4612,"impl-Debug-for-CursorIcon"],[4642,"impl-Octal-for-SystemFlags"],[4643,"impl-Binary-for-SystemFlags"],[4644,"impl-LowerHex-for-SystemFlags"],[4645,"impl-UpperHex-for-SystemFlags"],[4655,"impl-From%3CBoxShadowBuilder%3E-for-BoxShadow"],[4656,"impl-From%3C%26str%3E-for-BoxShadow"],[4657,"impl-From%3CLength%3E-for-ClipPath"],[4658,"impl-From%3CLengthOrPercentage%3E-for-ClipPath"],[4660,"impl-From%3CRect%3CLengthOrPercentage%3E%3E-for-ClipPath"],[4661,"impl-From%3C%26str%3E-for-Color"],[4662,"impl-From%3CColor%3E-for-Color"],[4664,"impl-From%3CRGBA%3E-for-Color"],[4665,"impl-From%3CColor%3E-for-RGBA"],[4667,"impl-From%3CRGBA%3E-for-RGBA"],[4673,"impl-From%3CFontSizeKeyword%3E-for-FontSize"],[4674,"impl-From%3Cf32%3E-for-FontSize"],[4675,"impl-From%3C%26str%3E-for-FontSize"],[4676,"impl-From%3Cf64%3E-for-FontSize"],[4682,"impl-From%3C%26str%3E-for-FontWeight"],[4683,"impl-From%3Cu32%3E-for-FontWeight"],[4684,"impl-From%3Cu16%3E-for-FontWeight"],[4685,"impl-From%3CFontWeightKeyword%3E-for-FontWeight"],[4687,"impl-From%3CLinearGradient%3E-for-Gradient"],[4688,"impl-From%3CLinearGradientBuilder%3E-for-Gradient"],[4689,"impl-From%3C%26str%3E-for-Gradient"],[4692,"impl-From%3CHorizontalPositionKeyword%3E-for-LineDirection"],[4693,"impl-From%3C(HorizontalPositionKeyword,+VerticalPositionKeyword)%3E-for-LineDirection"],[4694,"impl-From%3CAngle%3E-for-LineDirection"],[4695,"impl-From%3CVerticalPositionKeyword%3E-for-LineDirection"],[4696,"impl-From%3C%26str%3E-for-LineDirection"],[4699,"impl-From%3C%26str%3E-for-BackgroundImage%3C\'i%3E"],[4701,"impl-From%3CGradient%3E-for-BackgroundImage%3C\'i%3E"],[4702,"impl-From%3Cf32%3E-for-Length"],[4703,"impl-From%3CUnits%3E-for-Length"],[4704,"impl-From%3CCalc%3CLength%3E%3E-for-Length"],[4707,"impl-From%3CPositionComponent%3CVerticalPositionKeyword%3E%3E-for-LengthOrPercentage"],[4708,"impl-From%3CPercentage%3E-for-LengthOrPercentage"],[4709,"impl-From%3CVerticalPositionKeyword%3E-for-LengthOrPercentage"],[4710,"impl-From%3CPositionComponent%3CHorizontalPositionKeyword%3E%3E-for-LengthOrPercentage"],[4711,"impl-From%3CBorderWidthValue%3E-for-LengthOrPercentage"],[4712,"impl-From%3CHorizontalPositionKeyword%3E-for-LengthOrPercentage"],[4713,"impl-From%3CLengthValue%3E-for-LengthOrPercentage"],[4714,"impl-From%3CUnits%3E-for-LengthOrPercentage"],[4716,"impl-From%3C%26str%3E-for-LengthOrPercentage"],[4717,"impl-From%3CLength%3E-for-LengthOrPercentage"],[4720,"impl-From%3Cf32%3E-for-Opacity"],[4721,"impl-From%3C%26str%3E-for-Opacity"],[4722,"impl-From%3Cf64%3E-for-Opacity"],[4723,"impl-From%3CPercentage%3E-for-Opacity"],[4730,"impl-From%3C%26str%3E-for-Scale"],[4732,"impl-From%3C(T1,+T2)%3E-for-Scale"],[4737,"impl-From%3CT%3E-for-Translate"],[4738,"impl-From%3C(T1,+T2)%3E-for-Translate"],[4747,"impl-Flags-for-SystemFlags"],[4748,"impl-SystemFlags"],[4961,"impl-PartialOrd%3Cf32%3E-for-Angle"],[4962,"impl-PartialOrd-for-Angle"],[4963,"impl-PartialOrd-for-Length"],[4964,"impl-PartialOrd%3Cf32%3E-for-Length"],[4965,"impl-PartialOrd%3Cf32%3E-for-LengthValue"],[4966,"impl-PartialOrd-for-LengthValue"],[5254,"impl-From%3CPathBuf%3E-for-CSS"],[5255,"impl-From%3C%26str%3E-for-CSS"],[5411,"impl-ImageFlags"],[5412,"impl-Flags-for-ImageFlags"],[5541,"impl-Path"],[5542,"impl-OutlineBuilder-for-Path"],[5633,"impl-Debug-for-ErrorKind"],[5634,"impl-Display-for-ErrorKind"],[5637,"impl-Debug-for-ImageFlags"],[5638,"impl-Octal-for-ImageFlags"],[5639,"impl-UpperHex-for-ImageFlags"],[5640,"impl-Binary-for-ImageFlags"],[5641,"impl-LowerHex-for-ImageFlags"],[5672,"impl-From%3CImageError%3E-for-ErrorKind"],[5673,"impl-From%3CNulError%3E-for-ErrorKind"],[5675,"impl-From%3CError%3E-for-ErrorKind"],[5679,"impl-From%3CImg%3C%26%5BRGBA%3Cu8%3E%5D%3E%3E-for-ImageSource%3C\'a%3E"],[5680,"impl-From%3CImg%3C%26%5BRGB%3Cu8%3E%5D%3E%3E-for-ImageSource%3C\'a%3E"],[5681,"impl-From%3CImg%3C%26%5BGray%3Cu8%3E%5D%3E%3E-for-ImageSource%3C\'a%3E"],[5686,"impl-From%3CColor%3E-for-Color"],[5687,"impl-From%3CRGBA%3E-for-Color"],[5700,"impl-Flags-for-ImageFlags"],[5701,"impl-ImageFlags"],[5787,"impl-OutlineBuilder-for-Path"],[5788,"impl-Path"],[5799,"impl-Path"],[5800,"impl-OutlineBuilder-for-Path"],[5826,"impl-OutlineBuilder-for-Path"],[5827,"impl-Path"],[6439,"impl-Img%3CVec%3CT%3E%3E"],[6440,"impl-ImgExtMut%3CPixel%3E-for-Img%3CContainer%3E"],[6442,"impl-Img%3C%26mut+%5BT%5D%3E"],[6443,"impl-Img%3CVec%3CT%3E%3E"],[6444,"impl-ImgExt%3CPixel%3E-for-Img%3CContainer%3E"],[6467,"impl-PartialEq%3CImg%3C%26%5BU%5D%3E%3E-for-Img%3C%26%5BT%5D%3E"],[6468,"impl-PartialEq%3CImg%3C%26%5BU%5D%3E%3E-for-Img%3CVec%3CT%3E%3E"],[6469,"impl-PartialEq%3CImg%3C%26mut+%5BU%5D%3E%3E-for-Img%3C%26mut+%5BT%5D%3E"],[6470,"impl-PartialEq%3CImg%3C%26mut+%5BU%5D%3E%3E-for-Img%3C%26%5BT%5D%3E"],[6471,"impl-PartialEq%3CImg%3CVec%3CU%3E%3E%3E-for-Img%3C%26%5BT%5D%3E"],[6472,"impl-PartialEq%3CImg%3CVec%3CU%3E%3E%3E-for-Img%3CVec%3CT%3E%3E"],[6473,"impl-PartialEq%3CImg%3C%26%5BU%5D%3E%3E-for-Img%3C%26mut+%5BT%5D%3E"],[6486,"impl-From%3CImg%3CVec%3CT%3E%3E%3E-for-Img%3CCow%3C\'static,+%5BT%5D%3E%3E"],[6487,"impl-From%3CImg%3CCow%3C\'_,+%5BT%5D%3E%3E%3E-for-Img%3CVec%3CT%3E%3E"],[6488,"impl-From%3CImg%3C%26%5BT%5D%3E%3E-for-Img%3CCow%3C\'a,+%5BT%5D%3E%3E"],[6489,"impl-Hash-for-Img%3C%26%5BT%5D%3E"],[6490,"impl-Hash-for-Img%3C%26mut+%5BT%5D%3E"],[6491,"impl-Hash-for-Img%3CVec%3CT%3E%3E"],[6499,"impl-Index%3Cusize%3E-for-Img%3C%26mut+%5BPixel%5D%3E"],[6500,"impl-Index%3C(usize,+usize)%3E-for-Img%3C%26mut+%5BPixel%5D%3E"],[6501,"impl-Index%3Cusize%3E-for-Img%3C%26%5BPixel%5D%3E"],[6502,"impl-Index%3C(u32,+u32)%3E-for-Img%3C%26%5BPixel%5D%3E"],[6503,"impl-Index%3C(u32,+u32)%3E-for-Img%3CVec%3CPixel%3E%3E"],[6504,"impl-Index%3C(u32,+u32)%3E-for-Img%3C%26mut+%5BPixel%5D%3E"],[6505,"impl-Index%3C(usize,+usize)%3E-for-Img%3C%26%5BPixel%5D%3E"],[6506,"impl-Index%3Cusize%3E-for-Img%3CVec%3CPixel%3E%3E"],[6507,"impl-Index%3C(usize,+usize)%3E-for-Img%3CVec%3CPixel%3E%3E"],[6508,"impl-IndexMut%3C(u32,+u32)%3E-for-Img%3C%26mut+%5BPixel%5D%3E"],[6509,"impl-IndexMut%3Cusize%3E-for-Img%3CVec%3CPixel%3E%3E"],[6510,"impl-IndexMut%3C(usize,+usize)%3E-for-Img%3C%26mut+%5BPixel%5D%3E"],[6511,"impl-IndexMut%3C(u32,+u32)%3E-for-Img%3CVec%3CPixel%3E%3E"],[6512,"impl-IndexMut%3Cusize%3E-for-Img%3C%26mut+%5BPixel%5D%3E"],[6513,"impl-IndexMut%3C(usize,+usize)%3E-for-Img%3CVec%3CPixel%3E%3E"],[6544,"impl-Img%3C%26mut+%5BT%5D%3E"],[6545,"impl-Img%3CVec%3CT%3E%3E"],[6546,"impl-Img%3C%26%5BT%5D%3E"],[6547,"impl-Img%3C%26mut+%5BT%5D%3E"],[6548,"impl-Img%3CVec%3CT%3E%3E"],[6550,"impl-Img%3CVec%3CT%3E%3E"],[6551,"impl-Img%3C%26mut+%5BT%5D%3E"],[6552,"impl-Img%3C%26%5BT%5D%3E"],[6553,"impl-Img%3CVec%3CT%3E%3E"],[6554,"impl-Img%3C%26mut+%5BT%5D%3E"],[6567,"impl-Img%3CVec%3CT%3E%3E"],[6568,"impl-Img%3C%26%5BT%5D%3E"],[6569,"impl-Img%3C%26mut+%5BT%5D%3E"],[6570,"impl-Img%3CVec%3CT%3E%3E"],[6571,"impl-Img%3C%26mut+%5BT%5D%3E"],[6768,"impl-Add%3CT%3E-for-RGB%3CT%3E"],[6769,"impl-Add-for-RGB%3CT%3E"],[6770,"impl-Add-for-RGBA%3CT,+A%3E"],[6771,"impl-Add%3CT%3E-for-RGBA%3CT%3E"],[6772,"impl-AddAssign%3CT%3E-for-RGB%3CT%3E"],[6773,"impl-AddAssign-for-RGB%3CT%3E"],[6774,"impl-AddAssign-for-RGBA%3CT,+A%3E"],[6775,"impl-AddAssign%3CT%3E-for-RGBA%3CT%3E"],[6834,"impl-UpperHex-for-RGB%3CT%3E"],[6835,"impl-Display-for-RGB%3CT%3E"],[6836,"impl-Debug-for-RGB%3CComponentType%3E"],[6837,"impl-LowerHex-for-RGB%3CT%3E"],[6838,"impl-Debug-for-RGBA%3CComponentType,+AlphaComponentType%3E"],[6839,"impl-Display-for-RGBA%3CT,+A%3E"],[6840,"impl-From%3CRGB%3Cu8%3E%3E-for-RGB%3Ci16%3E"],[6841,"impl-From%3CRGB%3Cu8%3E%3E-for-RGB%3Cf64%3E"],[6842,"impl-From%3CRGB%3Ci32%3E%3E-for-RGB%3Cf64%3E"],[6843,"impl-From%3CRGB%3Cu16%3E%3E-for-RGB%3Cf64%3E"],[6844,"impl-From%3CRGB%3Cu16%3E%3E-for-RGB%3Cu32%3E"],[6845,"impl-From%3CRGB%3Cu8%3E%3E-for-RGB%3Cf32%3E"],[6846,"impl-From%3CRGB%3Ci16%3E%3E-for-RGB%3Cf64%3E"],[6847,"impl-From%3C(T,+T,+T)%3E-for-RGB%3CT%3E"],[6849,"impl-From%3CRGB%3Cu16%3E%3E-for-RGB%3Cf32%3E"],[6850,"impl-From%3CRGB%3Cu8%3E%3E-for-RGB%3Cu16%3E"],[6851,"impl-From%3CRGB%3Cu16%3E%3E-for-RGB%3Ci32%3E"],[6852,"impl-From%3CRGB%3Ci16%3E%3E-for-RGB%3Cf32%3E"],[6853,"impl-From%3CRGB%3Cu8%3E%3E-for-RGB%3Cu32%3E"],[6854,"impl-From%3CBGR%3CT%3E%3E-for-RGB%3CT%3E"],[6855,"impl-From%3CGray%3CT%3E%3E-for-RGB%3CT%3E"],[6856,"impl-From%3C%5BT;+3%5D%3E-for-RGB%3CT%3E"],[6857,"impl-From%3CRGB%3Cf32%3E%3E-for-RGB%3Cf64%3E"],[6858,"impl-From%3CRGB%3Cu16%3E%3E-for-RGB%3Cu64%3E"],[6859,"impl-From%3CRGBA%3Ci32%3E%3E-for-RGBA%3Cf64%3E"],[6860,"impl-From%3CBGR%3CT%3E%3E-for-RGBA%3CT,+u8%3E"],[6862,"impl-From%3CBGRA%3CT%3E%3E-for-RGBA%3CT%3E"],[6863,"impl-From%3CRGBA%3Cu8%3E%3E-for-RGBA%3Ci16%3E"],[6864,"impl-From%3CRGBA%3Cu8%3E%3E-for-RGBA%3Cu32%3E"],[6865,"impl-From%3CRGBA%3Cu8%3E%3E-for-RGBA%3Cf32%3E"],[6866,"impl-From%3CRGBA%3Cu16%3E%3E-for-RGBA%3Cu64%3E"],[6867,"impl-From%3CRGB%3CT%3E%3E-for-RGBA%3CT,+u8%3E"],[6868,"impl-From%3CRGBA%3Cu16%3E%3E-for-RGBA%3Cu32%3E"],[6869,"impl-From%3CRGBA%3Cf32%3E%3E-for-RGBA%3Cf64%3E"],[6870,"impl-From%3CRGBA%3Ci16%3E%3E-for-RGBA%3Cf32%3E"],[6871,"impl-From%3CGray%3CT%3E%3E-for-RGBA%3CT,+u8%3E"],[6872,"impl-From%3CRGB%3CT%3E%3E-for-RGBA%3CT,+u16%3E"],[6873,"impl-From%3CGrayAlpha%3CT,+A%3E%3E-for-RGBA%3CT,+A%3E"],[6874,"impl-From%3CRGBA%3Cu8%3E%3E-for-RGBA%3Cf64%3E"],[6875,"impl-From%3CRGBA%3Cu8%3E%3E-for-RGBA%3Cu16%3E"],[6876,"impl-From%3C%5BT;+4%5D%3E-for-RGBA%3CT%3E"],[6877,"impl-From%3CBGR%3CT%3E%3E-for-RGBA%3CT,+u16%3E"],[6878,"impl-From%3C(T,+T,+T,+A)%3E-for-RGBA%3CT,+A%3E"],[6879,"impl-From%3CRGBA%3Cu16%3E%3E-for-RGBA%3Cf64%3E"],[6880,"impl-From%3CRGBA%3Ci16%3E%3E-for-RGBA%3Cf64%3E"],[6881,"impl-From%3CRGBA%3Cu16%3E%3E-for-RGBA%3Ci32%3E"],[6882,"impl-From%3CRGBA%3Cu16%3E%3E-for-RGBA%3Cf32%3E"],[6893,"impl-Into%3C%5BT;+3%5D%3E-for-RGB%3CT%3E"],[6895,"impl-Into%3C(T,+T,+T)%3E-for-RGB%3CT%3E"],[6897,"impl-Into%3C(T,+T,+T,+A)%3E-for-RGBA%3CT,+A%3E"],[6898,"impl-Into%3C%5BT;+4%5D%3E-for-RGBA%3CT%3E"],[6911,"impl-Mul-for-RGB%3CT%3E"],[6912,"impl-Mul%3CT%3E-for-RGB%3CT%3E"],[6914,"impl-MulAssign%3CT%3E-for-RGB%3CT%3E"],[6915,"impl-MulAssign-for-RGB%3CT%3E"],[6931,"impl-Sub-for-RGB%3CT%3E"],[6932,"impl-Sub%3CT%3E-for-RGB%3CT%3E"],[6933,"impl-Sub%3CT%3E-for-RGBA%3CT%3E"],[6934,"impl-Sub-for-RGBA%3CT,+A%3E"],[6935,"impl-SubAssign-for-RGB%3CT%3E"],[6936,"impl-SubAssign%3CT%3E-for-RGB%3CT%3E"],[6937,"impl-SubAssign-for-RGBA%3CT,+A%3E"],[6938,"impl-SubAssign%3CT%3E-for-RGBA%3CT%3E"],[6969,"impl-Add-for-Gray%3CT%3E"],[6970,"impl-Add%3CT%3E-for-Gray%3CT%3E"],[6971,"impl-Add%3CT%3E-for-GrayAlpha%3CT%3E"],[6972,"impl-Add-for-GrayAlpha%3CT,+A%3E"],[6973,"impl-AddAssign-for-Gray%3CT%3E"],[6974,"impl-AddAssign%3CT%3E-for-Gray%3CT%3E"],[6975,"impl-AddAssign-for-GrayAlpha%3CT,+A%3E"],[6976,"impl-AddAssign%3CT%3E-for-GrayAlpha%3CT%3E"],[7041,"impl-LowerHex-for-BGR%3CT%3E"],[7042,"impl-Display-for-BGR%3CT%3E"],[7043,"impl-Debug-for-BGR%3CComponentType%3E"],[7044,"impl-UpperHex-for-BGR%3CT%3E"],[7045,"impl-Debug-for-BGRA%3CComponentType,+AlphaComponentType%3E"],[7046,"impl-Display-for-BGRA%3CT,+A%3E"],[7050,"impl-From%3CRGB%3CT%3E%3E-for-BGR%3CT%3E"],[7051,"impl-From%3C%5BT;+3%5D%3E-for-BGR%3CT%3E"],[7052,"impl-From%3C(T,+T,+T)%3E-for-BGR%3CT%3E"],[7053,"impl-From%3CRGB%3CT%3E%3E-for-BGRA%3CT,+u8%3E"],[7054,"impl-From%3C(T,+T,+T,+A)%3E-for-BGRA%3CT,+A%3E"],[7055,"impl-From%3CRGB%3CT%3E%3E-for-BGRA%3CT,+u16%3E"],[7056,"impl-From%3C%5BT;+4%5D%3E-for-BGRA%3CT%3E"],[7057,"impl-From%3CBGR%3CT%3E%3E-for-BGRA%3CT,+u16%3E"],[7059,"impl-From%3CRGBA%3CT%3E%3E-for-BGRA%3CT%3E"],[7060,"impl-From%3CBGR%3CT%3E%3E-for-BGRA%3CT,+u8%3E"],[7064,"impl-From%3CGray%3CT%3E%3E-for-GrayAlpha%3CT,+u16%3E"],[7066,"impl-From%3CGray%3CT%3E%3E-for-GrayAlpha%3CT,+u8%3E"],[7079,"impl-Into%3C(T,+T,+T)%3E-for-BGR%3CT%3E"],[7081,"impl-Into%3C%5BT;+3%5D%3E-for-BGR%3CT%3E"],[7082,"impl-Into%3C%5BT;+4%5D%3E-for-BGRA%3CT%3E"],[7083,"impl-Into%3C(T,+T,+T,+A)%3E-for-BGRA%3CT,+A%3E"],[7105,"impl-Mul%3CT%3E-for-Gray%3CT%3E"],[7106,"impl-Mul-for-Gray%3CT%3E"],[7108,"impl-MulAssign-for-Gray%3CT%3E"],[7109,"impl-MulAssign%3CT%3E-for-Gray%3CT%3E"],[7129,"impl-Sub-for-Gray%3CT%3E"],[7130,"impl-Sub%3CT%3E-for-Gray%3CT%3E"],[7131,"impl-Sub%3CT%3E-for-GrayAlpha%3CT%3E"],[7132,"impl-Sub-for-GrayAlpha%3CT,+A%3E"],[7133,"impl-SubAssign-for-Gray%3CT%3E"],[7134,"impl-SubAssign%3CT%3E-for-Gray%3CT%3E"],[7135,"impl-SubAssign%3CT%3E-for-GrayAlpha%3CT%3E"],[7136,"impl-SubAssign-for-GrayAlpha%3CT,+A%3E"],[7179,"impl-Handle%3C\'_,+NamedSlider%3E"],[7180,"impl-Handle%3C\'_,+Slider%3CL%3E%3E"],[7186,"impl-Handle%3C\'a,+Popup%3CL%3E%3E"],[7187,"impl-Handle%3C\'a,+MenuPopup%3CL%3E%3E"],[7188,"impl-Handle%3C\'a,+Textbox%3CL%3E%3E"],[7191,"impl-Handle%3C\'v,+AnalogTimepicker%3CL,+T%3E%3E"],[7192,"impl-Handle%3C\'a,+DigitalTimepicker%3CL,+T%3E%3E"],[7193,"impl-Handle%3C\'a,+Timepicker%3E"],[7194,"impl-Handle%3C\'a,+Rating%3E"],[7195,"impl-Handle%3C\'a,+VirtualList%3E"],[7196,"impl-Handle%3C\'a,+Knob%3CL%3E%3E"],[7197,"impl-Handle%3C\'_,+Slider%3CL%3E%3E"],[7198,"impl-Handle%3C\'_,+NamedSlider%3E"],[7201,"impl-Handle%3C\'a,+Spinbox%3E"],[7202,"impl-Handle%3C\'_,+List%3CL,+T%3E%3E"],[7212,"impl-Handle%3C\'_,+List%3CL,+T%3E%3E"],[7213,"impl-Handle%3C\'a,+Spinbox%3E"],[7222,"impl-Handle%3C\'v,+ComboBox%3CL1,+L2,+T%3E%3E"],[7223,"impl-Handle%3C\'_,+RadioButton%3E"],[7224,"impl-Handle%3C\'v,+PickList%3E"],[7225,"impl-Handle%3C\'a,+Datepicker%3E"],[7226,"impl-Handle%3C\'a,+TabView%3E"],[7228,"impl-Handle%3C\'_,+Checkbox%3E"],[7229,"impl-Handle%3C\'_,+Switch%3E"],[7232,"impl-Handle%3C\'_,+Slider%3CL%3E%3E"],[7233,"impl-Handle%3C\'_,+NamedSlider%3E"],[7235,"impl-Handle%3C\'a,+VirtualList%3E"],[7236,"impl-Handle%3C\'a,+Scrollbar%3CL1%3E%3E"],[7237,"impl-Handle%3C\'a,+ScrollView%3CL%3E%3E"],[7245,"impl-Handle%3C\'_,+ArcTrack%3E"],[7246,"impl-Handle%3C\'_,+TickKnob%3E"]]},\
"vizia_derive":{"doc":"","t":"YYYY","n":["Data","Lens","Model","Setter"],"q":[[0,"vizia_derive"]],"d":["","","",""],"i":[0,0,0,0],"f":[0,0,0,0],"c":[],"p":[],"b":[]},\
"vizia_winit":{"doc":"","t":"IAKKANDNEDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDNDNDNNDDDNNDDNNDDNNDDEIIIINNNDDEENNDDNNDDNNDDNDNDDNDNNDDNNDDMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMKLKLMMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMKL","n":["GetRawWindowHandle","application","mutate_window","raw_window_handle","rwh","AccessKitActionRequest","Application","Event","UserEvent","WinitEventProxy","always_on_top","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","decorations","fmt","from","from","from","from","from","get_proxy","icon","ignore_default_theme","inner_size","into","into","into","make_clone","max_inner_size","maximized","min_inner_size","minimized","new","on_idle","position","resizable","run","send","set_text_config","should_poll","title","transparent","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","visible","vsync","vzip","vzip","vzip","Active","ActiveHandle","Android","AndroidDisplayHandle","AndroidNdk","AndroidNdkWindowHandle","AppKit","AppKit","AppKitDisplayHandle","AppKitWindowHandle","DisplayHandle","Drm","Drm","DrmDisplayHandle","DrmWindowHandle","Gbm","Gbm","GbmDisplayHandle","GbmWindowHandle","Haiku","Haiku","HaikuDisplayHandle","HaikuWindowHandle","HandleError","HasDisplayHandle","HasRawDisplayHandle","HasRawWindowHandle","HasWindowHandle","Inactive","Orbital","Orbital","OrbitalDisplayHandle","OrbitalWindowHandle","RawDisplayHandle","RawWindowHandle","UiKit","UiKit","UiKitDisplayHandle","UiKitWindowHandle","Wayland","Wayland","WaylandDisplayHandle","WaylandWindowHandle","Web","Web","WebDisplayHandle","WebWindowHandle","Win32","Win32WindowHandle","WinRt","WinRtWindowHandle","WindowHandle","Windows","WindowsDisplayHandle","Xcb","Xcb","XcbDisplayHandle","XcbWindowHandle","Xlib","Xlib","XlibDisplayHandle","XlibWindowHandle","a_native_window","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","b_direct_window","b_window","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_raw","borrow_raw","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connection","core_window","display","display","display_handle","display_handle","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","equals","fd","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","gbm_device","gbm_surface","handle","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hinstance","hwnd","id","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","new","new","new_unchecked","ns_view","ns_window","plane","raw_display_handle","raw_display_handle","raw_window_handle","raw_window_handle","screen","screen","set_active","set_inactive","surface","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string_local","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ui_view","ui_view_controller","ui_window","visual_id","visual_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","window","window","window","window_handle","window_handle"],"q":[[0,"vizia_winit"],[5,"vizia_winit::application"],[60,"vizia_winit::rwh"],[712,"core::ops::function"],[713,"core::fmt"],[714,"core::fmt"],[715,"vizia_core::events::event"],[716,"vizia_core::context::proxy"],[717,"alloc::vec"],[718,"vizia_window::window_description"],[719,"core::convert"],[720,"vizia_core::context::proxy"],[721,"core::option"],[722,"core::ops::function"],[723,"vizia_core::text::cosmic"],[724,"alloc::string"],[725,"core::any"],[726,"core::any"],[727,"alloc::string"]],"d":["","","","","","","Creating a new application creates a root <code>Window</code> and a …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns a <code>ContextProxy</code> which can be used to send events …","","Sets the default built-in theming to be ignored.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Takes a closure which will be called at the end of every …","","","Starts the application and enters the main event loop.","","","","","","","","","","","","","","","","","","","","Keeps track of whether the application is currently active.","Represents a live window handle.","A raw display handle for Android NDK.","Raw display handle for Android.","A raw window handle for Android NDK.","Raw window handle for Android NDK.","A raw window handle for AppKit.","A raw display handle for AppKit.","Raw display handle for AppKit.","Raw window handle for AppKit.","The handle to the display controller of the windowing …","A raw window handle for the Linux Kernel Mode Set/Direct …","A raw display handle for the Linux Kernel Mode Set/Direct …","Raw display handle for the Linux Kernel Mode Set/Direct …","Raw window handle for the Linux Kernel Mode Set/Direct …","A raw window handle for the Linux Generic Buffer Manager.","A raw display handle for the Linux Generic Buffer Manager.","Raw display handle for the Linux Generic Buffer Manager.","Raw window handle for the Linux Generic Buffer Manager.","A raw window handle for Haiku.","A raw display handle for Haiku.","Raw display handle for Haiku.","Raw window handle for Haiku.","The error type returned when a handle cannot be obtained.","A display that acts as a wrapper around a display handle.","Display that wraps around a raw display handle.","Window that wraps around a raw window handle.","A handle to a window.","The handle is not currently active.","A raw window handle for the Redox operating system.","A raw display handle for the Redox operating system.","Raw display handle for the Redox operating system.","Raw window handle for the Redox operating system.","A display server handle for a particular windowing system.","A window handle for a particular windowing system.","A raw window handle for UIKit (Apple’s non-macOS …","A raw display handle for UIKit (Apple’s non-macOS …","Raw display handle for UIKit.","Raw window handle for UIKit.","A raw window handle for Wayland.","A raw display handle for Wayland.","Raw display handle for Wayland.","Raw window handle for Wayland.","A raw window handle for the Web.","A raw display handle for the Web.","Raw display handle for the Web.","Raw window handle for the Web.","A raw window handle for Win32.","Raw window handle for Win32.","A raw window handle for WinRT.","Raw window handle for WinRT.","The handle to a window.","A raw display handle for Win32.","Raw display handle for Windows.","A raw window handle for Xcb.","A raw display handle for Xcb.","Raw display handle for Xcb.","Raw window handle for Xcb.","A raw window handle for Xlib.","A raw display handle for Xlib.","Raw display handle for Xlib.","Raw window handle for Xlib.","A pointer to an <code>ANativeWindow</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A pointer to a BDirectWindow object that might be null","A pointer to a BWindow object","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a <code>DisplayHandle</code> from a <code>RawDisplayHandle</code>.","Borrow a <code>WindowHandle</code> from a <code>RawWindowHandle</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A pointer to an X server <code>xcb_connection_t</code>.","A WinRT <code>CoreWindow</code> handle.","A pointer to an Xlib <code>Display</code>.","A pointer to a <code>wl_display</code>.","Get a handle to the display controller of the windowing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The drm file descriptor.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","The gbm device.","The gbm surface.","Get a live window handle.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>HINSTANCE</code> associated with this type’s <code>HWND</code>.","A Win32 <code>HWND</code> handle.","An ID value inserted into the data attributes of the …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Create a new <code>Active</code> tracker.","Create a new <code>ActiveHandle</code>.","Create a new freestanding active handle.","A pointer to an <code>NSView</code> object.","A pointer to an <code>NSWindow</code> object.","The primary drm plane handle.","","","","","An X11 screen to use with this display handle.","An X11 screen to use with this display handle.","Set the application to be active.","Set the application to be inactive.","A pointer to a <code>wl_surface</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A pointer to an <code>UIView</code> object.","A pointer to an <code>UIViewController</code> object.","A pointer to an <code>UIWindow</code> object.","An Xlib visual ID, or 0 if unknown.","An X11 <code>xcb_visualid_t</code>, or 0 if unknown.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A pointer to an orbclient window.","An Xlib <code>Window</code>.","An X11 <code>xcb_window_t</code>.","Get a handle to the window.",""],"i":[0,0,63,63,0,6,0,6,0,0,4,4,17,6,4,17,6,4,6,4,17,6,6,6,4,4,4,4,4,17,6,17,4,4,4,4,4,4,4,4,4,17,4,4,4,4,4,17,6,4,17,6,4,17,6,4,4,4,17,6,0,0,28,0,3,0,3,28,0,0,0,3,28,0,0,3,28,0,0,3,28,0,0,0,0,0,0,0,57,3,28,0,0,0,0,3,28,0,0,3,28,0,0,3,28,0,0,3,0,3,0,0,28,0,3,28,0,0,3,28,0,0,33,32,33,34,35,29,31,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,3,28,37,37,58,32,33,34,35,30,29,31,57,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,3,28,58,32,33,34,35,30,29,31,57,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,3,28,29,31,32,33,34,35,30,29,31,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,3,28,32,33,34,35,30,29,31,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,3,28,44,56,42,46,64,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,32,33,34,35,29,31,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,3,28,32,33,34,35,29,31,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,3,28,48,58,32,33,34,35,30,29,31,57,57,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,3,28,58,32,33,34,35,30,29,31,57,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,3,3,3,3,3,3,3,3,3,3,3,3,3,3,28,28,28,28,28,28,28,28,28,28,28,28,28,50,51,58,32,33,34,35,29,31,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,3,28,55,55,53,58,32,33,34,35,30,29,31,57,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,3,28,58,30,30,35,35,49,65,29,66,31,42,44,58,58,47,32,33,34,35,30,29,31,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,3,28,57,57,58,32,33,34,35,30,29,31,57,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,3,28,58,32,33,34,35,30,29,31,57,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,3,28,58,32,33,34,35,30,29,31,57,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,3,28,41,41,41,43,45,58,32,33,34,35,30,29,31,57,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,3,28,39,43,45,67,31],"f":[0,0,[[-1,-2],1,[],2],[-1,3,[]],0,0,0,0,0,0,[[4,5],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[4,5],4],[[6,7],8],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[9,6],[10,6],[4,11],[[4,12,12,[14,[13]]],4],[4,4],[[4,-1],4,[[16,[15]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[17,[[19,[18]]]],[[4,[20,[-1]]],4,[[16,[15]]]],[[4,5],4],[[4,[20,[-1]]],4,[[16,[15]]]],[[4,5],4],[-1,4,2],[[4,-1],4,21],[[4,-1],4,[[16,[22]]]],[[4,5],4],[4,1],[[17,10],[[23,[1,1]]]],[[4,24],4],[4,4],[[4,-1],4,25],[[4,5],4],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[[4,5],4],[[4,5],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],[-1,27,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[28,29],[[3,30],31],[32,32],[33,33],[34,34],[35,35],[30,30],[29,29],[31,31],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[42,42],[43,43],[44,44],[45,45],[46,46],[47,47],[48,48],[49,49],[50,50],[51,51],[52,52],[53,53],[54,54],[55,55],[56,56],[3,3],[28,28],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],[[-1,-2],1,[],[]],0,0,0,0,[-1,[[23,[29,57]]],[]],[29,[[23,[29,57]]]],[[],32],[[],33],[[],34],[[],35],[[],36],[[],37],[[],38],[[],39],[[],40],[[],41],[[],42],[[],43],[[],44],[[],45],[[],46],[[],47],[[],48],[[],49],[[],50],[[],51],[[],52],[[],53],[[],54],[[],55],[[],56],[[32,32],5],[[33,33],5],[[34,34],5],[[35,35],5],[[29,29],5],[[31,31],5],[[36,36],5],[[37,37],5],[[38,38],5],[[39,39],5],[[40,40],5],[[41,41],5],[[42,42],5],[[43,43],5],[[44,44],5],[[45,45],5],[[46,46],5],[[47,47],5],[[48,48],5],[[49,49],5],[[50,50],5],[[51,51],5],[[52,52],5],[[53,53],5],[[54,54],5],[[55,55],5],[[56,56],5],[[3,3],5],[[28,28],5],[[-1,27],5,[]],[[-1,27],5,[]],[[-1,27],5,[]],[[-1,27],5,[]],[[-1,27],5,[]],[[-1,27],5,[]],[[-1,27],5,[]],[[-1,27],5,[]],[[-1,27],5,[]],[[-1,27],5,[]],[[-1,27],5,[]],[[-1,27],5,[]],[[-1,27],5,[]],[[-1,27],5,[]],[[-1,27],5,[]],[[-1,27],5,[]],[[-1,27],5,[]],[[-1,27],5,[]],[[-1,27],5,[]],[[-1,27],5,[]],[[-1,27],5,[]],[[-1,27],5,[]],[[-1,27],5,[]],[[-1,27],5,[]],[[-1,27],5,[]],[[-1,27],5,[]],[[-1,27],5,[]],[[-1,27],5,[]],[[-1,27],5,[]],0,[[58,7],[[23,[1,59]]]],[[32,7],[[23,[1,59]]]],[[33,7],[[23,[1,59]]]],[[34,7],[[23,[1,59]]]],[[35,7],[[23,[1,59]]]],[[30,7],[[23,[1,59]]]],[[29,7],[[23,[1,59]]]],[[31,7],[[23,[1,59]]]],[[57,7],[[23,[1,59]]]],[[57,7],[[23,[1,59]]]],[[36,7],[[23,[1,59]]]],[[37,7],[[23,[1,59]]]],[[38,7],[[23,[1,59]]]],[[39,7],[[23,[1,59]]]],[[40,7],[[23,[1,59]]]],[[41,7],[[23,[1,59]]]],[[42,7],[[23,[1,59]]]],[[43,7],[[23,[1,59]]]],[[44,7],[[23,[1,59]]]],[[45,7],[[23,[1,59]]]],[[46,7],[[23,[1,59]]]],[[47,7],[[23,[1,59]]]],[[48,7],[[23,[1,59]]]],[[49,7],[[23,[1,59]]]],[[50,7],[[23,[1,59]]]],[[51,7],[[23,[1,59]]]],[[52,7],[[23,[1,59]]]],[[53,7],[[23,[1,59]]]],[[54,7],[[23,[1,59]]]],[[55,7],[[23,[1,59]]]],[[56,7],[[23,[1,59]]]],[[3,7],[[23,[1,59]]]],[[28,7],[[23,[1,59]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[47,3],[45,3],[-1,-1,[]],[43,3],[51,3],[33,3],[53,3],[35,3],[39,3],[37,3],[41,3],[56,3],[55,3],[49,3],[52,28],[50,28],[46,28],[36,28],[54,28],[44,28],[40,28],[42,28],[38,28],[34,28],[32,28],[48,28],[-1,-1,[]],0,0,[58,[[20,[30]]]],[[32,-1],1,60],[[33,-1],1,60],[[34,-1],1,60],[[35,-1],1,60],[[29,-1],1,60],[[31,-1],1,60],[[36,-1],1,60],[[37,-1],1,60],[[38,-1],1,60],[[39,-1],1,60],[[40,-1],1,60],[[41,-1],1,60],[[42,-1],1,60],[[43,-1],1,60],[[44,-1],1,60],[[45,-1],1,60],[[46,-1],1,60],[[47,-1],1,60],[[48,-1],1,60],[[49,-1],1,60],[[50,-1],1,60],[[51,-1],1,60],[[52,-1],1,60],[[53,-1],1,60],[[54,-1],1,60],[[55,-1],1,60],[[56,-1],1,60],[[3,-1],1,60],[[28,-1],1,60],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[],58],[[],30],[[],30],0,0,0,[-1,28,[]],[29,28],[-1,3,[]],[31,3],0,0,[58,1],[58,1],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,61,[]],[[-1,62],61,[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],[-1,26,[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[-1,[[23,[31,57]]],[]],[31,[[23,[31,57]]]]],"c":[],"p":[[15,"tuple"],[8,"FnOnce",712],[4,"RawWindowHandle",60],[3,"Application",5],[15,"bool"],[4,"UserEvent",5],[3,"Formatter",713],[6,"Result",713],[3,"ActionRequestEvent",714],[3,"Event",715],[3,"ContextProxy",716],[15,"u32"],[15,"u8"],[3,"Vec",717],[3,"WindowSize",718],[8,"Into",719],[3,"WinitEventProxy",5],[8,"EventProxy",716],[3,"Box",720],[4,"Option",721],[8,"Fn",712],[3,"Position",718],[4,"Result",722],[3,"TextConfig",723],[8,"ToString",724],[3,"TypeId",725],[8,"Any",725],[4,"RawDisplayHandle",60],[3,"DisplayHandle",60],[3,"ActiveHandle",60],[3,"WindowHandle",60],[3,"AndroidDisplayHandle",60],[3,"AndroidNdkWindowHandle",60],[3,"AppKitDisplayHandle",60],[3,"AppKitWindowHandle",60],[3,"HaikuDisplayHandle",60],[3,"HaikuWindowHandle",60],[3,"OrbitalDisplayHandle",60],[3,"OrbitalWindowHandle",60],[3,"UiKitDisplayHandle",60],[3,"UiKitWindowHandle",60],[3,"XlibDisplayHandle",60],[3,"XlibWindowHandle",60],[3,"XcbDisplayHandle",60],[3,"XcbWindowHandle",60],[3,"WaylandDisplayHandle",60],[3,"WaylandWindowHandle",60],[3,"DrmDisplayHandle",60],[3,"DrmWindowHandle",60],[3,"GbmDisplayHandle",60],[3,"GbmWindowHandle",60],[3,"WebDisplayHandle",60],[3,"WebWindowHandle",60],[3,"WindowsDisplayHandle",60],[3,"Win32WindowHandle",60],[3,"WinRtWindowHandle",60],[4,"HandleError",60],[3,"Active",60],[3,"Error",713],[8,"Hasher",726],[3,"String",724],[3,"EventContext",727],[8,"GetRawWindowHandle",0],[8,"HasDisplayHandle",60],[8,"HasRawDisplayHandle",60],[8,"HasRawWindowHandle",60],[8,"HasWindowHandle",60]],"b":[[22,"impl-From%3CActionRequestEvent%3E-for-UserEvent"],[23,"impl-From%3CEvent%3E-for-UserEvent"],[378,"impl-Debug-for-HandleError"],[379,"impl-Display-for-HandleError"],[433,"impl-From%3CWaylandWindowHandle%3E-for-RawWindowHandle"],[434,"impl-From%3CXcbWindowHandle%3E-for-RawWindowHandle"],[436,"impl-From%3CXlibWindowHandle%3E-for-RawWindowHandle"],[437,"impl-From%3CGbmWindowHandle%3E-for-RawWindowHandle"],[438,"impl-From%3CAndroidNdkWindowHandle%3E-for-RawWindowHandle"],[439,"impl-From%3CWebWindowHandle%3E-for-RawWindowHandle"],[440,"impl-From%3CAppKitWindowHandle%3E-for-RawWindowHandle"],[441,"impl-From%3COrbitalWindowHandle%3E-for-RawWindowHandle"],[442,"impl-From%3CHaikuWindowHandle%3E-for-RawWindowHandle"],[443,"impl-From%3CUiKitWindowHandle%3E-for-RawWindowHandle"],[444,"impl-From%3CWinRtWindowHandle%3E-for-RawWindowHandle"],[445,"impl-From%3CWin32WindowHandle%3E-for-RawWindowHandle"],[446,"impl-From%3CDrmWindowHandle%3E-for-RawWindowHandle"],[447,"impl-From%3CWebDisplayHandle%3E-for-RawDisplayHandle"],[448,"impl-From%3CGbmDisplayHandle%3E-for-RawDisplayHandle"],[449,"impl-From%3CWaylandDisplayHandle%3E-for-RawDisplayHandle"],[450,"impl-From%3CHaikuDisplayHandle%3E-for-RawDisplayHandle"],[451,"impl-From%3CWindowsDisplayHandle%3E-for-RawDisplayHandle"],[452,"impl-From%3CXcbDisplayHandle%3E-for-RawDisplayHandle"],[453,"impl-From%3CUiKitDisplayHandle%3E-for-RawDisplayHandle"],[454,"impl-From%3CXlibDisplayHandle%3E-for-RawDisplayHandle"],[455,"impl-From%3COrbitalDisplayHandle%3E-for-RawDisplayHandle"],[456,"impl-From%3CAppKitDisplayHandle%3E-for-RawDisplayHandle"],[457,"impl-From%3CAndroidDisplayHandle%3E-for-RawDisplayHandle"],[458,"impl-From%3CDrmDisplayHandle%3E-for-RawDisplayHandle"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
