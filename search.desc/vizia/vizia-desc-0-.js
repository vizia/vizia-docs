searchState.loadedDescShard("vizia", 0, "Vizia\nCreating a new application creates a root <code>Window</code> and a …\nData binding provides a way to link views to model data so …\nContext types for retained state, used during view …\nA model for system specific state which can be accessed by …\nEvents for communicating state change to views and models.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a <code>ContextProxy</code> which can be used to send events …\nA collection of codepoints for built-in icons.\nSets the default built-in theming to be ignored.\nContains types and functions used for loading and …\nTypes used for handling input events such as mouse and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nVizia uses morphorm for layout.\nProvides types for adapting an application to a particular …\nModels are used to store application data and can be bound …\nMethods on views for changing their properties or for …\nTakes a closure which will be called at the end of every …\nResource management for fonts, themes, images, and …\nStarts the application and enters the main event loop.\nStyling determines the appearance of a view.\nContains types and functions used for custom drawing …\nViews are used to visually present model data and to act …\nBuilt-in views provided by vizia.\nWindow management and system events.\nA view with a binding which rebuilds its contents when the …\nA reference to model or local data\nA trait for fast comparisons of data. Implemented by any …\nA Lens allows the construction of a reference to a piece …\nHelpers for constructing more complex <code>Lens</code>es.\nA type returned by <code>Lens::view()</code> which contains either a …\nOwned data\nA trait which allows passing a value or a lens to a view …\n<code>Lens</code> composed of two lenses joined together\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUsed to construct a lens to some data contained within …\nA context used for configuring the accessibility features …\nWrapper around an accesskit node builder, a node id, and a …\nThe main storage and control object for a Vizia …\nA bundle of data representing a snapshot of the context …\nA trait for any Context-like object that lets you access …\nA context used when drawing a view.\nA context used when handling events.\nThe event loop has been closed; the application is exiting.\nErrors that might occur when emitting an event via a …\nA context used when loading images.\nTrait for querying properties of the tree from a context.\nThe current runtime does not support proxying events.\nAdds a child accessibility node.\nAdds a global listener to the application.\nAdd a listener to an entity.\nAdd a listener to an entity.\nAdds a timer to the application.\nAdds a timer to the application.\nReturns the background color of the view.\nReturns the border radius for the bottom-left corner of …\nReturns the border corner shape for the top-left corner of …\nReturns the border radius for the bottom-right corner of …\nReturns the border corner shape for the top-left corner of …\nReturns the border radius for the top-left corner of the …\nReturns the border corner shape for the top-left corner of …\nReturns the border radius for the top-right corner of the …\nReturns the border corner shape for the top-left corner of …\nReturns the border width of the current view in physical …\nReturns the border width of the current view in physical …\nReturns the bounds of the current view.\nReturns the bounds of the current view.\nReturns the bounds of the current view.\nGet the vector path of the current view.\nCancel a scheduled event before it is sent.\nCapture mouse input for the current view.\nReturns the child-bottom space of the current view.\nReturns the child-left space of the current view.\nReturns the child-right space of the current view.\nReturns the child-top space of the current view.\nReturns the bounding box of the clip region of the current …\nReturns the clip bounds of the current view.\nReturns the Entity id of the current view.\nThe “current” entity, generally the entity which is …\nGet model/view data from the context. Returns <code>None</code> if the …\nReturns the lookup pattern to pick the default font.\nReturns the display of the current view.\nDraw backdrop filters for the current view.\nDraw background color or background image (including …\nDraw the border of the current view.\nDraw inset box shadows for the current view.\nDraw the outline of the current view.\nDraw non-inset box shadows for the current view.\nDraw any text for the current view.\nDraw text caret for the current view.\nDraw the selection box for the text of the current view.\nSend an event containing the provided message up the tree …\nSend a custom event with custom origin and propagation …\nSend an event containing the provided message directly to …\nReturns a reference to the Environment model.\nReturns a reference to the Environment model.\nReturns the id of the first_child of the current view.\nSets application focus to the current view using the …\nSets application focus to the current entity using the …\nMoves the keyboard focus to the next navigable view.\nSets application focus to the current view with the …\nSets application focus to the current entity with the …\nReturns the currently focused view.\nReturns the font-size of the current view in physical …\nReturns the font-size of the current view in physical …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the contents of the system clipboard.\nReturns a ContextProxy which can be moved between threads …\nReturns the currently hovered view.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the current view is active.\nReturns true if the current view is currently animating …\nReturns true if the current view is checked.\nReturns true if the cursor icon is locked.\nReturns true if the current view is disabled.\nReturns true if the current view is focused.\nReturns true if the current view is being hovered.\nReturns true if the mouse cursor is over the current view.\nReturns true if the view is in a read-only state.\nSets the view, by id name, which labels the current view …\nPrevents the cursor icon from changing until the lock is …\nFunction to convert logical points to physical pixels.\nConverts logical points to physical pixels.\nReturns a reference to the keyboard modifiers state.\nReturns a reference to the keyboard modifiers state.\nModifies the state of an existing timer with the provided …\nModifies the state of an existing timer with the provided …\nReturns a reference to the mouse state.\nReturns a reference to the mouse state.\nMarks the current view as needing to be redrawn.\nMark the application as needing to rerun the draw method\nMarks the current view as needing a layout computation.\nMark the application as needing to rerun layout …\nMark the application as needing to recompute view styles\nCreates a new context.\nSets a numeric value used for accessibility for the …\nReturns the opacity of the current view.\nReturns the outline color of the current view.\nReturns the outline offset of the current view in physcial …\nReturns the outline width of the current view in physical …\nReturns the id of the parent of the current view.\nFunction to convert physical pixels to logical points.\nConvert physical pixels to logical points.\nTrigger an animation with the given id to play on the …\nTrigger an animation with the given id to play on a target …\nRelease mouse input capture for the current view.\nReloads the stylesheets linked to the application.\nRemove all user themes from the application.\nReturns the Entity id associated with the given identifier.\nFinds the entity that identifier identifies\nReturns the scale factor.\nReturns the scale factor.\nReturns the scale factor of the display.\nSend an event containing the provided message up the tree …\nSend a custom event with custom origin and propagation …\nSend an event containing the provided message directly to …\nSet the active state for the current view.\nSets the backdrop filter of the current view.\nSets the accessibility bounds of the node. This is not the …\nSets the checked state of the current view.\nSets the clip path of the current view.\nSet the contents of the system clipboard.\nSets the accessibility default action verb of the view.\nSets the global default font for the application.\nSets the display type of the current view.\nSets whether the view should be explicitely hidden from …\nSets the hover state of the current view.\nSets the language used by the application for localization.\nSets the language used by the application for localization.\nSets the view to be an accessibility live region.\nSets the accessibility name of the view.\nSets the opacity of the current view.\nSets the overflow type on the horizontal axis of the …\nSets the overflow type on the vertical axis of the current …\nSets the accessibility role of the view.\nSets the role of the node.\nSets the rotation of the current view.\nSets the scale of the current view.\nSets the text of the current view.\nSets the direction of any text within the node.\nSets the specified selection of any text within the node.\nSets the current theme mode.\nSets the transform of the current view.\nSets the transform origin of the current view.\nSets the translation of the current view.\nChange the user scale factor size. A …\nSets the valid state of the current view.\nSets the value of a node.\nSets the visibility of the current view.\nChange the window size. A <code>WindowEvent::GeometryChanged</code> …\nSets the z-index of the current view.\nSpawns a thread and provides a ContextProxy for sending …\nStarts a timer with the provided timer id.\nStarts a timer with the provided timer id.\nStops the timer with the given timer id.\nStops the timer with the given timer id.\nSets a text value used for accessbility for the current …\nReturns whether the current view should have its text …\nReturns true if the timer with the provided timer id is …\nReturns true if the timer with the provided timer id is …\nToggles the addition/removal of a class name for the …\nToggles the addition/removal of a class name for the …\nReturns the 2D transform of the current view.\nReturns the transform of the current view.\nReleases any cursor icon lock, allowing the cursor icon to …\nA scale factor used for uniformly scaling the window …\nA scale factor used for uniformly scaling the window …\nReturns the visibility of the current view.\nReturns the window’s size in logical pixels, before …\nThe window’s size in logical pixels, before …\nMakes the above black magic more explicit\nbuiltin vizia themes\nA model for system specific state which can be accessed by …\nEvents for setting the state in the Environment.\nSet the locale used for the whole application.\nSet the default theme mode.\nSystem theme, if we choose this as our theme vizia will …\nAlternate between dark and light theme modes.\nReset the locale to use the system provided locale.\nThe current application theme\nDerived lenses for <code>Environment</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe locale used for localization.\nThe current system theme\nCurrent application and system theme.\nDerived lenses for <code>Theme</code>.\nLens for the field <code>caret_timer</code> on <code>Environment</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLens for the field <code>locale</code> on <code>Environment</code>.\nCreates a new lens for the field <code>locale</code> on <code>Environment</code>. …\nCreates a new lens for the field <code>theme</code> on <code>Environment</code>. Use …\nCreates a new lens for the field <code>caret_timer</code> on <code>Environment</code>…\nLens for the whole <code>Environment</code> struct.\nLens for the field <code>theme</code> on <code>Environment</code>.\nLens for the field <code>app_theme</code> on <code>Theme</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new lens for the field <code>app_theme</code> on <code>Theme</code>. Use …\nCreates a new lens for the field <code>sys_theme</code> on <code>Theme</code>. Use …\nLens for the whole <code>Theme</code> struct.\nLens for the field <code>sys_theme</code> on <code>Theme</code>.\nEmitted when a character is typed.\nPrints the debug message to the console.\nEvents propagate directly to the target entity and to no …\nEmitted when a file is dragged and then dropped onto the …\nA wrapper around a message, providing metadata on how the …\nThe metadata of an <code>Event</code>.\nMove keyboard focus to the next navigable view.\nMove keyboard focus to the previous navigable view.\nEmitted when an entity changes position or size.\nGrabs the mouse cursor, preventing it from leaving the …\nEmitted when a keyboard key is pressed.\nEmitted when a keyboard key is released.\nEmitted when mouse events have been captured.\nEmitted when mouse events have been released.\nEmitted when a mouse button is double clicked.\nEmitted when a mouse button is pressed\nEmitted when the mouse cursor enters an entity.\nEmitted when the mouse cursor leaves an entity.\nEmitted when the mouse cursor is moved\nEmitted when the mouse cursor leaves the bounding box of …\nEmitted when the mouse cursor enters the bounding box of …\nEmitted when the mouse scroll wheel is scrolled.\nEmitted when a mouse button is triple clicked\nEmitted when a mouse button is released.\nEmitted when the primary mouse button or trigger key is …\nEmitted when the primary mouse button or trigger key is …\nDetermines how an event propagates through the tree.\nRequests a redraw of the window contents.\nRequests a relayout.\nReloads all application stylesheets.\nRequest a restyle.\nSets whether the window remains on top of other windows.\nSets the mouse cursor icon.\nSets the (x,y) position of the mouse cursor in window …\nSets whether the window has decorations.\nSets the maximum size of the window.\nSets whether the window is maximized.\nSets the minimum size of the window.\nSets whether the window is minimized.\nSets the position of the window.\nSets whether the window is resizable.\nSets the size of the window.\nSets the title of the window.\nSets whether the window is visible.\nEvents propagate starting at the target entity and …\nEmited when the system window theme has changed.\nA handle used to cancel a scheduled event before it is …\nA handle used to start, stop, and check the running status …\nEnum which can be used to determine the reason a timer …\nEvents propagate up the tree from the target entity from …\nEmitted when a window is closed. Can also be emitted by a …\nEvents generated by the application in response to OS …\nConsumes the event to prevent it from continuing on its …\nConsumes the event to prevent it from continuing on its …\nSets the propagation to directly target the <code>entity</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTries to downcast the event message to the specified type. …\nCreates a new event with a specified message.\nSets the origin of the event.\nThe entity that produced the event. Entity::null() for OS …\nSets the propagation of the event.\nHow the event propagates through the tree.\nTries to downcast the event message to the specified type. …\nSets the target of the event.\nThe entity the event should be sent to (or from in the …\nPixel is 8-bit alpha\nAnimationDecoder trait\nAn Image in AVIF format.\nPixel contains 8-bit B, G and R channels\nPixel is 8-bit BGR with an alpha channel\nAn Image in BMP Format\nThe number of channels of this pixel type.\nA string that can help to interpret the meaning each …\nThis pixel has the format of one of the predefined …\nPixel is 8-bit CMYK\nAn enumeration over supported color types and bit depths\nThe maximum value for this type of primitive within the …\nThe minimum value for this type of primitive within the …\nAn Image in DDS Format\nAn error was encountered while decoding.\nThe delay of a frame relative to the previous one.\nA Dynamic Image\nTypes which are safe to treat as an immutable byte slice …\nAn error was encountered while encoding.\nContains the error value\nAn enumeration of color types encountered in image formats.\nAn Image in farbfeld Format\nA flat buffer over a (multi channel) image.\nA single animation frame\nAn implementation dependent iterator, reading the frames …\nA trait for manipulating images.\nTrait to inspect an image.\nAn Image in GIF Format\nSendable grayscale + alpha channel image buffer\nSendable grayscale image buffer\nAn Image in Radiance HDR Format\nAn Image in ICO Format\nGeneric image buffer\nThe trait that all decoders implement\nSpecialized image decoding not be supported by all formats\nThe trait all encoders implement\nThe generic error type for image operations.\nAn enumeration of supported image formats. Not all formats …\nEach pixel in this image is 16-bit Luma\nEach pixel in this image is 8-bit Luma\nEach pixel in this image is 16-bit Luma with alpha\nEach pixel in this image is 8-bit Luma with alpha\nResult of an image decoding/encoding process\nEach pixel in this image is 16-bit Rgb\nEach pixel in this image is 32-bit float Rgb\nEach pixel in this image is 8-bit Rgb\nEach pixel in this image is 16-bit Rgb with alpha\nEach pixel in this image is 32-bit float Rgb with alpha\nEach pixel in this image is 8-bit Rgb with alpha\nAn error occurred while interacting with the environment.\nAn Image in JPEG Format\nPixel is 1-bit luminance\nPixel is 16-bit luminance\nPixel is 16-bit luminance\nPixel is 2-bit luminance\nPixel is 4-bit luminance\nPixel is 8-bit luminance\nPixel is 8-bit luminance\nPixel is 1-bit luminance with an alpha channel\nPixel is 16-bit luminance with an alpha channel\nPixel is 16-bit luminance with an alpha channel\nPixel is 2-bit luminance with an alpha channel\nPixel is 4-bit luminance with an alpha channel\nPixel is 8-bit luminance with an alpha channel\nPixel is 8-bit luminance with an alpha channel\nCompleting the operation would have required more …\nGrayscale colors.\nGrayscale colors + alpha channel\nContains the success value\nAn Image in OpenEXR Format\nAn error was encountered in input arguments.\nA generalized pixel.\nThe type of pixel.\nThe pixel with an associated <code>ColorType</code>. Not all possible …\nImmutable pixel iterator\nAn Image in PNG Format\nAn Image in general PNM Format\nThe type of each channel in a pixel. For example, this can …\nAn Image in QOI format.\nRGB colors.\nPixel contains 1-bit R, G and B channels\nPixel is 16-bit RGB\nPixel contains 16-bit R, G and B channels\nPixel contains 2-bit R, G and B channels\nPixel is 32-bit float RGB\nPixel is 32-bit float RGB\nAn image buffer for 32-bit float RGB pixels, where the …\nPixel contains 4-bit R, G and B channels\nPixel contains 8-bit R, G and B channels\nPixel contains 8-bit R, G and B channels\nSendable Rgb image buffer\nRGB colors + alpha channel\nPixel is 1-bit RGB with an alpha channel\nPixel is 16-bit RGBA\nPixel is 16-bit RGB with an alpha channel\nPixel is 2-bit RGB with an alpha channel\nPixel is 32-bit float RGBA\nPixel is 32-bit float RGBA\nAn image buffer for 32-bit float RGBA pixels, where the …\nPixel is 4-bit RGB with an alpha channel\nPixel is 8-bit RGB with an alpha channel\nPixel is 8-bit RGB with an alpha channel\nSendable Rgb + alpha channel image buffer\nA View into another image\nThe scalar type that is used to store each channel in this …\nAn Image in TGA Format\nAn Image in TIFF Format\nPixel is of unknown color type with the specified bits per …\nAn operation can not be completed by the chosen …\nAn Image in WEBP Format\nAdjust the contrast of this image. <code>contrast</code> is the amount …\nReturn all ImageFormats\nApply the function <code>f</code> to each channel of this pixel.\nApply the function <code>f</code> to each channel of this pixel and …\nApply the function <code>f</code> to each channel except the alpha …\nApply the function <code>f</code> to each channel except the alpha …\nGet the bytes of this value.\nReturn this image’s pixels as a native endian byte slice.\nReturn a view on the raw sample buffer.\nReturn a view on the raw sample buffer for 32bit per …\nReturn a mutable view on the raw sample buffer.\nReturn a view on the raw sample buffer for 16 bit per …\nReturn a view on the raw sample buffer for 8 bit per …\nReturn a reference to an 16bit Grayscale image\nReturn a reference to an 8bit Grayscale image\nReturn a reference to an 16bit Grayscale image with an …\nReturn a reference to an 8bit Grayscale image with an …\nGet a mutable reference based version.\nReturn a mutable reference to an 16bit Grayscale image\nReturn a mutable reference to an 8bit Grayscale image\nReturn a mutable reference to an 16bit Grayscale image …\nReturn a mutable reference to an 8bit Grayscale image with …\nReturn a mutable reference to an 16bit RGB image\nReturn a mutable reference to an 32bit RGB image\nReturn a mutable reference to an 8bit RGB image\nReturn a mutable reference to an 16bit RGBA image\nReturn a mutable reference to an 16bit RGBA image\nReturn a mutable reference to an 8bit RGBA image\nView the samples as a slice.\nReturns the underlying raw buffer\nGet a reference based version.\nReturn a reference to an 16bit RGB image\nReturn a reference to an 32bit RGB image\nReturn a reference to an 8bit RGB image\nReturn a reference to an 16bit RGBA image\nReturn a reference to an 32bit RGBA image\nReturn a reference to an 8bit RGBA image\nView the samples as a slice.\nView this buffer as an image over some type of pixel.\nInterpret this buffer as a mutable image.\nView this buffer but keep mutability at a sample level.\nReturns the number of bits contained in a pixel of …\nReturns the number of bits per pixel for this color type.\nBlend the color of a given pixel into ourself, taking into …\nPut a pixel at location (x, y), taking into account alpha …\nPut a pixel at location (x, y), taking into account alpha …\nPerforms a Gaussian blur on this image. <code>sigma</code> is a measure …\nTuple of bounds in the order of coordinate inputs.\nBrighten the pixels of this image. <code>value</code> is the amount to …\nReturns the image buffer\nReturns a mutable image buffer\nReturns the number of bytes contained in a pixel of …\nReturn if the ImageFormat can be decoded by the lib.\nReturn if the ImageFormat can be encoded by the lib.\nChange the coordinates of this subimage.\nReturns the number of color channels that make up this …\nGet the number of channels for colors of this type.\nReturns the components as a slice.\nReturns the channels of this pixel as a 4 tuple. If the …\nReturns the components as a mutable slice\nSteps through the iterator from the current frame until …\nReturn this image’s color type.\nSupplementary color information.\nReturns the color type of the image data produced by this …\nExamples\nCopies all of the pixels from another image into this …\nCopies all of the pixels from one part of this image to …\nReturn a cut-out of this image delimited by the bounding …\nReturn a cut-out of this image delimited by the bounding …\nDelay of this frame\nReturns a tuple containing the width and height of the …\nThe width and height of this image.\nThe width and height of this image.\nEnumerates over the pixels of the image. The iterator …\nEnumerates over the pixels of the image. The iterator …\nEnumerates over the rows of the image. The iterator yields …\nEnumerates over the rows of the image. The iterator yields …\nExpands a color palette by re-using the existing buffer. …\nReturn a list of applicable extensions for this format.\nGet the dimensions <code>(channels, width, height)</code>.\nFilters this image with the specified 3x3 kernel.\nCheck if a buffer of length <code>len</code> is large enough.\nFlip this image horizontally\nFlip this image vertically\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct a pixel from the 4 channels a, b, c and d. If …\nDecodes an encoded image into a dynamic image.\nReturn the image format specified by a path’s file …\nConstructs a new ImageBuffer by repeated application of …\nReturn the image format specified by a MIME type.\nCreate a delay from a ratio of milliseconds.\nConstructs a new frame\nReturn the image format specified by the path’s file …\nConstructs a new ImageBuffer by copying a pixel\nConstructs a buffer from a generic container (for example …\nConvert from a duration, clamped between 0 and an …\nReturns a view into a slice.\nReturns mutable view into a mutable slice.\nCreates an image buffer out of an existing buffer. Returns …\nGet a mutable reference to a single sample.\nReturns the pixel located at (x, y). Indexed from top left.\nGets a reference to the pixel at location <code>(x, y)</code>\nGets a reference to the pixel at location <code>(x, y)</code> or …\nGets a reference to the mutable pixel at location <code>(x, y)</code>. …\nGets a reference to the mutable pixel at location <code>(x, y)</code>\nDo not use is function: It is unimplemented!\nGets a reference to the mutable pixel at location <code>(x, y)</code> …\nGet a reference to a single sample.\nReturn a grayscale version of this image. Returns <code>Luma</code> …\nGuess image format from memory block\nIf there are any samples aliasing each other.\nReturns if there is an alpha channel.\nReturns false if the color scheme is grayscale, true …\nThe height of this image.\nThe height of this image.\nReturns the height of the underlying image\nHue rotate the supplied image. <code>value</code> is the degrees to …\nReturns the ICC color profile embedded in the image, or …\nRead a tuple containing the (width, height) of the image …\nMutable portion of the buffer that holds sample values.\nReturn the portion of the buffer that holds sample values.\nReturns true if this x, y coordinate is contained inside …\nCheck that the pixel and the channel index are in bounds.\nGet an index provided it is inbouds.\nResolve the index of a particular sample.\nReturn a reference to a single sample at specified …\nGet the theoretical position of sample (x, y, channel).\nReturn a mutable reference to a single sample at specified …\nGet a reference to the underlying image.\nGet a mutable reference to the underlying image.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the image buffer\nReturn this image’s pixels as a byte vector. If the …\nReturn the raw sample buffer with its stride an dimension …\nConsume the decoder producing a series of frames.\nConsume the image and returns a Luma image.\nConsume the image and returns a Luma image.\nConsume the image and returns a LumaA image.\nConsume the image and returns a LumaA image.\nReturns the underlying raw buffer\nConsume the image and returns a RGB image.\nConsume the image and returns a RGB image.\nConsume the image and returns a RGB image.\nConsume the image and returns a RGBA image.\nConsume the image and returns a RGBA image.\nConsume the image and returns a RGBA image.\nConsumes the image buffer and returns the underlying data …\nInvert this pixel\nInvert the colors of this image. This method operates …\nCheck if a buffer fulfills the requirements of a normal …\nA <code>repr(C)</code> description of the layout of buffer samples.\nReturns the x offset\nCreate a new image from a Reader.\nCreate a new image from a byte slice\nCreate a new image from a byte slice\nApply the function <code>f</code> to each channel of this pixel.\nApply the function <code>f</code> to each channel of this pixel and …\nApply the function <code>f</code> to each channel except the alpha …\nApply the function <code>f</code> to each channel except the alpha …\nGet the minimum length of a buffer such that all in-bounds …\nCreates a new <code>Frames</code> from an implementation specific …\nConstructs a new frame without any delay.\nCreates a new image buffer based on a <code>Vec&lt;P::Subpixel&gt;</code>.\nCreates a dynamic image backed by a buffer depending on …\nConstruct a new subimage The coordinates set the position …\nCreates a dynamic image backed by a buffer of gray pixels.\nCreates a dynamic image backed by a buffer of gray pixels.\nCreates a dynamic image backed by a buffer of gray pixels …\nCreates a dynamic image backed by a buffer of gray pixels …\nCreates a dynamic image backed by a buffer of RGB pixels.\nCreates a dynamic image backed by a buffer of RGB pixels.\nCreates a dynamic image backed by a buffer of RGB pixels.\nCreates a dynamic image backed by a buffer of RGBA pixels.\nCreates a dynamic image backed by a buffer of RGBA pixels.\nCreates a dynamic image backed by a buffer of RGBA pixels.\nThe numerator and denominator of the delay in milliseconds.\nThe offsets of this subimage relative to the underlying …\nOpen the image located at the path specified. The image’…\nReturns the color type of the image file before decoding\nReturns an Iterator over the pixels of this image. The …\nReturns an iterator over the pixels of this image. The …\nReturns an iterator over the mutable pixels of this image.\nPut a pixel at location (x, y). Indexed from top left.\nPuts a pixel at location <code>(x, y)</code>\nReturns all the bytes in the image.\nUse <code>read_image</code> instead; this method is an implementation …\nDecode a rectangular section of the image.\nReturn the ImageFormats which are enabled for reading.\nResize this image using the specified filter algorithm. …\nResize this image using the specified filter algorithm. …\nResize this image using the specified filter algorithm. …\nRotate this image 180 degrees clockwise.\nRotate this image 270 degrees clockwise.\nRotate this image 90 degrees clockwise.\nReturns an iterator over the rows of this image.\nReturns an iterator over the mutable rows of this image.\nGet the format of the buffer when viewed as a matrix of …\nUnderlying linear container holding sample values.\nSaves the buffer to a file at the path specified.\nSaves the buffer to a file at the path specified.\nSaves the supplied buffer to a file at the path specified.\nSaves the supplied buffer to a file at the path specified …\nSaves the buffer to a file at the specified path in the …\nSaves the buffer to a file at the specified path in the …\nSet the decoder to have the specified limits. See <code>Limits</code> …\nShrink the image to the minimum of current and given …\nGet the strides for indexing matrix-like <code>[(c, w, h)]</code>.\nReturns a mutable subimage that is a view into this image. …\nCreate a mutable sub-view of the image.\nScale this image down to fit within a specific size. …\nScale this image down to a specific size. Returns a new …\nConvert this subimage to an ImageBuffer\nConvert this pixel to luma\nReturns a copy of this image as a Luma image.\nReturns a copy of this image as a Luma image.\nReturns a copy of this image as a Luma image.\nConvert this pixel to luma with an alpha channel\nReturns a copy of this image as a LumaA image.\nReturns a copy of this image as a LumaA image.\nReturns a copy of this image as a LumaA image.\nReturn the MIME type for this image format or “…\nConvert this pixel to RGB\nReturns a copy of this image as an RGB image.\nReturns a copy of this image as an RGB image.\nReturns a copy of this image as an RGB image.\nConvert this pixel to RGB with an alpha channel\nReturns a copy of this image as an RGBA image.\nReturns a copy of this image as an RGBA image.\nReturns a copy of this image as an RGBA image.\nCopy the data into an owned vector.\nReturns the y offset\nReturns the total number of bytes in the decoded image.\nMove the data into an image buffer.\nReturns the pixel located at (x, y). Indexed from top left.\nReturns the pixel located at (x, y), ignoring bounds …\nPuts a pixel at location (x, y). Indexed from top left.\nPuts a pixel at location (x, y), ignoring bounds checking.\nPerforms an unsharpen mask on this image. <code>sigma</code> is the …\nReturns a subimage that is an immutable view into this …\nCreate a sub-view of the image.\nThe width of this image.\nThe width of this image.\nReturns the width of the underlying image\nCreate a monocolor image from a single pixel.\nWrites the supplied buffer to a writer in the specified …\nWrites all the bytes in an image to the encoder.\nWrites the buffer to a writer in the specified format.\nEncode this image and write it to <code>w</code>.\nWrites the buffer with the given encoder.\nEncode this image with the provided encoder.\nReturn the ImageFormats which are enabled for writing.\nSwitch the input mode on an external AVR (audio/video …\nToggle the power on an external AVR (audio/video …\nThe Accept (Commit, OK) key. Accept current option or …\nFound on Sun’s USB keyboard.\nThe Again key, to redo or repeat an action.\nThe All Candidates key, to initate the multi-candidate …\nThe Alphanumeric key.\nThe Alt (Alternative) key. This key enables the alternate …\nThe Alternate Graphics (AltGr or AltGraph) key. This key …\nAlt, Option or ⌥.\nAlt, Option or ⌥. This is labelled AltGr key on many …\nThe Application switch key, which provides a list of …\n↓\nThe down arrow key, to navigate or traverse downward. (…\n←\nThe left arrow key, to navigate or traverse leftward. (…\n→\nThe right arrow key, to navigate or traverse rightward. (…\n↑\nThe up arrow key, to navigate or traverse upward. (…\nThe Attention (Attn) key.\nAdjust audio balance leftward. (VK_AUDIO_BALANCE_LEFT)\nAdjust audio balance rightward. (VK_AUDIO_BALANCE_RIGHT)\nDecrease audio bass boost or cycle down through bass boost …\nToggle bass boost on/off. (APPCOMMAND_BASS_BOOST)\nIncrease audio bass boost or cycle up through bass boost …\nAdjust audio fader towards front. (VK_FADER_FRONT)\nAdjust audio fader towards rear. (VK_FADER_REAR)\nAdvance surround audio mode to next available mode. (…\nDecrease treble. (APPCOMMAND_TREBLE_DOWN)\nIncrease treble. (APPCOMMAND_TREBLE_UP)\nDecrease audio volume. (APPCOMMAND_VOLUME_DOWN, …\nToggle between muted state and prior volume level. (…\nIncrease audio volume. (APPCOMMAND_VOLUME_UP, …\n`~ on a US keyboard. This is the 半角/全角/漢字 (…\nUsed for both the US | (on the 101-key layout) and also …\nBackspace or ⌫. Labelled Delete on Apple keyboards.\nThe Backspace key. This key value is also used for the key …\n[{ on a US keyboard.\n]} on a US keyboard.\nNon-standard code value supported by Chromium.\nThe Brightness Down key. Typically controls the display …\nNon-standard code value supported by Chromium.\nThe Brightness Up key. Typically controls the display …\nSome laptops place this key to the left of the ↑ key.\nNavigate to previous content or page in current history. (…\nOpen the list of browser favorites. (…\nSome laptops place this key to the right of the ↑ key.\nNavigate to next content or page in current history. (…\nGo to the user’s preferred home page. (…\nRefresh the current page or content. (…\nCall up the user’s preferred search page. (…\nStop loading the current page or content. (…\nThe Call key. (KEYCODE_CALL)\nThe Camera key. (KEYCODE_CAMERA)\nThe Camera focus key. (KEYCODE_FOCUS)\nThe Cancel key.\nCapsLock or ⇪\nThe Caps Lock (Capital) key. Toggle capital character lock …\nSelect next (numerically or logically) lower channel. (…\nSelect next (numerically or logically) higher channel. (…\nA key string that corresponds to the character typed by …\nRemove the currently selected input.\nClose the current document or message (Note: This …\nToggle the display of Closed Captions. (VK_CC, …\nCode is the physical position of a key.\nThe Code Input key, to initiate the Code Input mode to …\nGeneral purpose color-coded media function key, as index 0 …\nGeneral purpose color-coded media function key, as index 1 …\nGeneral purpose color-coded media function key, as index 2 …\nGeneral purpose color-coded media function key, as index 3 …\nGeneral purpose color-coded media function key, as index 4 …\nGeneral purpose color-coded media function key, as index 5 …\n,&lt; on a US keyboard.\nThe Compose key, also known as Multi_key on the X Window …\nThe application context menu key, which is typically found …\nShow the application’s context menu. This key is …\nThe Control or Ctrl key, to enable control modifier …\nControl or ⌃\nControl or ⌃\nJapanese: 変換 (henkan)\nThe Convert key, to convert the current input method …\nFound on Sun’s USB keyboard.\nCopy the current selection. (APPCOMMAND_COPY)\nThe Cursor Select (Crsel) key.\nFound on Sun’s USB keyboard.\nCut the current selection. (APPCOMMAND_CUT)\nSelect Digital Video Rrecorder. (KEYCODE_DVR)\nA dead key combining key. It may be any combining key from …\n⌦. The forward delete key. Note that on Apple keyboards, …\nThe Delete (Del) Key. This key value is also used for the …\n0) on a US keyboard.\n1! on a US keyboard.\n2@ on a US keyboard.\n3# on a US keyboard.\n4$ on a US keyboard.\n5% on a US keyboard.\n6^ on a US keyboard.\n7&amp; on a US keyboard.\n8* on a US keyboard.\n9( on a US keyboard.\nAdjust brightness of device, by toggling between or …\nSwap video sources. (VK_DISPLAY_SWAP)\nNon-standard code value supported by Chromium.\nThe Eisu key. This key may close the IME, but its purpose …\nEject or ⏏. This key is placed in the function section …\nToggle removable media to eject (open) and insert (close) …\nPage Down, End or ↘\nThe End key, used with keyboard entry to go to the end of …\nThe End Call key. (KEYCODE_ENDCALL)\nEnter or ↵. Labelled Return on Apple keyboards.\nThe Enter or ↵ key, to activate current selection or …\n=+ on a US keyboard.\nThe Erase to End of Field key. This key deletes all …\nEsc or ⎋\nThe Esc key. This key was originally used to initiate an …\nThe Extend Selection (Exsel) key.\nThe Execute key.\nExit the current application. (VK_EXIT)\nF1\nThe F1 key, a general purpose function key, as index 1.\nF10\nThe F10 key, a general purpose function key, as index 10.\nF11\nThe F11 key, a general purpose function key, as index 11.\nF12\nThe F12 key, a general purpose function key, as index 12.\nF13\nThe F13 key, a general purpose function key, as index 13.\nF14\nThe F14 key, a general purpose function key, as index 14.\nF15\nThe F15 key, a general purpose function key, as index 15.\nF16\nThe F16 key, a general purpose function key, as index 16.\nF17\nThe F17 key, a general purpose function key, as index 17.\nF18\nThe F18 key, a general purpose function key, as index 18.\nF19\nThe F19 key, a general purpose function key, as index 19.\nF2\nThe F2 key, a general purpose function key, as index 2.\nF20\nThe F20 key, a general purpose function key, as index 20.\nF21\nThe F21 key, a general purpose function key, as index 21.\nF22\nThe F22 key, a general purpose function key, as index 22.\nF23\nThe F23 key, a general purpose function key, as index 23.\nF24\nThe F24 key, a general purpose function key, as index 24.\nF3\nThe F3 key, a general purpose function key, as index 3.\nF4\nThe F4 key, a general purpose function key, as index 4.\nF5\nThe F5 key, a general purpose function key, as index 5.\nF6\nThe F6 key, a general purpose function key, as index 6.\nF7\nThe F7 key, a general purpose function key, as index 7.\nF8\nThe F8 key, a general purpose function key, as index 8.\nF9\nThe F9 key, a general purpose function key, as index 9.\nClear program or content stored as favorite 0. (…\nClear program or content stored as favorite 1. (…\nClear program or content stored as favorite 2. (…\nClear program or content stored as favorite 3. (…\nSelect (recall) program or content stored as favorite 0. (…\nSelect (recall) program or content stored as favorite 1. (…\nSelect (recall) program or content stored as favorite 2. (…\nSelect (recall) program or content stored as favorite 3. (…\nStore current program or content as favorite 0. (…\nStore current program or content as favorite 1. (…\nStore current program or content as favorite 2. (…\nStore current program or content as favorite 3. (…\nThe Final Mode Final key used on some Asian keyboards, to …\nFound on Sun’s USB keyboard.\nOpen the Find dialog. (APPCOMMAND_FIND)\nFn This is typically a hardware key that does not generate …\nThe Function switch Fn key. Activating this key …\nFLock or FnLock. Function Lock key. Found on the Microsoft …\nThe Function-Lock (FnLock or F-Lock) key. Activating this …\nThe Back key. (KEYCODE_BACK)\nThe Home key, which goes to the phone’s main screen. (…\nSwitch to the first character group. (ISO/IEC 9995)\nSwitch to the last character group. (ISO/IEC 9995)\nSwitch to the next character group. (ISO/IEC 9995)\nSwitch to the previous character group. (ISO/IEC 9995)\nToggle display of program or content guide. (VK_GUIDE, …\nIf guide is active and displayed, then display next …\nIf guide is active and displayed, then display previous …\nThe Hangul (Korean characters) Mode key, to toggle between …\nThe Hanja (Korean characters) Mode key.\nThe (Half-Width) Characters key.\nThe Headset Hook key. (KEYCODE_HEADSETHOOK)\nHelp. Not present on standard PC keyboards.\nOpen a help dialog or toggle display of help information. (…\nThe Hibernate key. This key saves the current state of the …\nUse for dedicated ひらがな key found on some Japanese …\nThe Hiragana (Japanese Kana characters) key.\nThe Hiragana/Katakana toggle key. (…\nHome or ↖\nThe Home key, used with keyboard entry, to go to start of …\nThe Hyper key.\nToggle display of information about currently selected …\nInsert or Ins. Not present on Apple keyboards.\nThe Insert (Ins) key, to toggle between text modes for …\nInserts an entry into the <code>Keymap</code>.\nToggle instant replay. (VK_INSTANT_REPLAY)\nLocated between the left Shift and Z keys. Labelled | on a …\nLocated between the / and right Shift keys. Labelled \\ろ (…\nLocated between the = and Backspace keys. Labelled ¥ (yen…\nThe Junja (Korean characters) Mode key.\nJapanese: カタカナ/ひらがな/ローマ字 (…\nThe Kana Mode (Kana Lock) key. This key is used to enter …\nThe Kanji (Japanese name for ideographic characters of …\nUse for dedicated カタカナ key found on some Japanese …\nThe Katakana (Japanese Kana characters) key.\nKey represents the meaning of a keypress.\nThe 11 key found on media numpads that have buttons from 1 …\nThe 12 key found on media numpads that have buttons from 1 …\na on a US keyboard. Labelled q on an AZERTY (e.g., French) …\nb on a US keyboard.\nc on a US keyboard.\nd on a US keyboard.\ne on a US keyboard.\nf on a US keyboard.\ng on a US keyboard.\nh on a US keyboard.\ni on a US keyboard.\nj on a US keyboard.\nk on a US keyboard.\nl on a US keyboard.\nm on a US keyboard.\nn on a US keyboard.\no on a US keyboard.\np on a US keyboard.\nq on a US keyboard. Labelled a on an AZERTY (e.g., French) …\nr on a US keyboard.\ns on a US keyboard.\nt on a US keyboard.\nu on a US keyboard.\nv on a US keyboard.\nw on a US keyboard. Labelled z on an AZERTY (e.g., French) …\nx on a US keyboard.\ny on a US keyboard. Labelled z on a QWERTZ (e.g., German) …\nz on a US keyboard. Labelled w on an AZERTY (e.g., French) …\nNon-standard code value supported by Chromium.\nA keymap that associates key chords with actions.\nAn entry inside of a <code>Keymap</code>.\nAn event used to interact with a <code>Keymap</code> at runtime.\nKorean: HangulMode 한/영 (han/yeong)Japanese (Mac …\nKorean: Hanja 한자 (hanja)Japanese (Mac keyboard): 英数…\nJapanese (word-processing keyboard): Katakana\nJapanese (word-processing keyboard): Hiragana\nJapanese (word-processing keyboard): Zenkaku/Hankaku\nThe Last Number Redial key.\nSometimes labelled My Computer on the keyboard\nSometimes labelled Calculator on the keyboard\nThe first generic “LaunchApplication” key. This is …\nThe second generic “LaunchApplication” key. This is …\nNon-standard code value supported by Chromium.\nThe “Calendar” key. (KEYCODE_CALENDAR)\nThe “Contacts” key. (KEYCODE_CONTACTS)\nNon-standard code value supported by Chromium.\nThe “Mail” key. (APPCOMMAND_LAUNCH_MAIL)\nThe “Media Player” key. (APPCOMMAND_LAUNCH_MEDIA_SELECT…\nThe “Music Player” key.\nThe “Phone” key.\nNon-standard code value supported by Chromium.\nThe “Screen Saver” key.\nThe “Spreadsheet” key.\nThe “Web Browser” key.\nThe “WebCam” key.\nThe “Word Processor” key.\nThe left mouse button.\nLaunch linked content, if available and appropriate. (…\nList the current program. (VK_LIST)\nToggle display listing of currently available live content …\nLock or unlock current content or program. (VK_LOCK)\nThe LogOff key.\nNon-standard code value supported by Chromium.\nOpen an editor to forward the current message. (…\nNon-standard code value supported by Chromium.\nOpen an editor to reply to the current message. (…\nNon-standard code value supported by Chromium.\nSend the current message. (APPCOMMAND_SEND_MAIL)\nToggle between manner mode state: silent, vibrate, ring, …\nShow a list of media applications: audio/video players and …\nAudio track key. (KEYCODE_MEDIA_AUDIO_TRACK)\nClose the current media, for example to close a CD or DVD …\nNon-standard code value supported by Chromium.\nInitiate or continue forward playback at faster than …\nSelect previously selected channel or media. (VK_LAST, …\nNon-standard code value supported by Chromium.\nPause the currently playing media. (APPCOMMAND_MEDIA_PAUSE…\nNon-standard code value supported by Chromium.\nInitiate or continue media playback at normal speed, if …\nToggle media between play and pause states. (…\nNon-standard code value supported by Chromium.\nInitiate or resume recording of currently selected media. (…\nNon-standard code value supported by Chromium.\nInitiate or continue reverse playback at faster than …\nSkip backward to next content or program. (…\nSkip forward to next content or program. (VK_SKIP, …\nStep backward to next content or program. (…\nStep forward to next content or program. (…\nStop media playing, pausing, forwarding, rewinding, or …\nMedia top menu. (KEYCODE_MEDIA_TOP_MENU)\nSeek to next media or program track. (…\nSeek to previous media or program track. (…\nThe Meta key, to enable meta modifier function for …\nThe Windows, ⌘, Command or other OS symbol key.\nThe Windows, ⌘, Command or other OS symbol key.\nNon-standard code value supported by Chromium.\nToggle the microphone on/off. (APPCOMMAND_MIC_ON_OFF_TOGGLE…\nDecrease microphone volume. (…\nMute the microphone. (APPCOMMAND_MICROPHONE_VOLUME_MUTE, …\nIncrease microphone volume. (…\nThe middle mouse button.\n-_ on a US keyboard.\nThe Mode Change key, to toggle between or cycle through …\nThe state of the modifier keys.\nA mouse button.\nData which describes the current state of a mouse button.\nThe current state of the mouse cursor and buttons.\nNavigate in. (KEYCODE_NAVIGATE_IN)\nNavigate to next key. (KEYCODE_NAVIGATE_NEXT)\nNavigate out. (KEYCODE_NAVIGATE_OUT)\nNavigate to previous key. (KEYCODE_NAVIGATE_PREVIOUS)\nOpen a new document or message. (APPCOMMAND_NEW)\nThe Next Candidate function key.\nCycle to next favorite channel (in favorites list). (…\nCycle to next user profile (if there are multiple user …\nJapanese: 無変換 (muhenkan)\nThe NonConvert (“Don’t Convert”) key, to accept …\nThe Notification key. (KEYCODE_NOTIFICATION)\nOn the Mac, the “NumLock” code should be used for the …\nThe NumLock or Number Lock key, to toggle numpad mode …\n0 Ins on a keyboard0 on a phone or remote control\n1 End on a keyboard1 or 1 QZ on a phone or remote control\n2 ↓ on a keyboard2 ABC on a phone or remote control\n3 PgDn on a keyboard3 DEF on a phone or remote control\n4 ← on a keyboard4 GHI on a phone or remote control\n5 on a keyboard5 JKL on a phone or remote control\n6 → on a keyboard6 MNO on a phone or remote control\n7 Home on a keyboard7 PQRS or 7 PRS on a phone or remote …\n8 ↑ on a keyboard8 TUV on a phone or remote control\n9 PgUp on a keyboard9 WXYZ or 9 WXY on a phone or remote …\n+\nFound on the Microsoft Natural Keyboard.\nC or AC (All Clear). Also for use with numpads that have a …\nCE (Clear Entry)\n, (thousands separator). For locales where the thousands …\n. Del. For locales where the decimal separator is “,” …\n/\n=\n# on a phone or remote control device. This key is …\nM+ Add current entry to the value stored in memory.\nMC Clear the value stored in memory.\nMR Replace the current entry with the value stored in …\nMS Replace the value stored in memory with the current …\nM- Subtract current entry from the value stored in memory.\n<em> on a keyboard. For use with numpads that provide </em>…\n( Found on the Microsoft Natural Keyboard.\n) Found on the Microsoft Natural Keyboard.\n<em> on a phone or remote control device. This key is </em>…\n-\nAccess on-demand content or programs. (VK_ON_DEMAND)\nFound on Sun’s USB keyboard.\nOpen an existing document or message. (APPCOMMAND_OPEN)\nAnother mouse button with the associated button number.\nPage Down, PgDn or ⇟\nThe Page Down key, to scroll down or display next page of …\nPage Up, PgUp or ⇞\nThe Page Up key, to scroll up or display previous page of …\nPairing key to pair devices. (KEYCODE_PAIRING)\nFound on Sun’s USB keyboard.\nThe Paste key. (APPCOMMAND_PASTE)\nPause Break\nPause the current state or application (as appropriate).\n.&gt; on a US keyboard.\nMove picture-in-picture window down. (VK_PINP_DOWN)\nMove picture-in-picture window. (VK_PINP_MOVE)\nToggle display of picture-in-picture window. (…\nMove picture-in-picture window up. (VK_PINP_UP)\nPlay or resume the current state or application (as …\nDecrease media playback speed. (VK_PLAY_SPEED_DOWN)\nReset playback to normal speed. (VK_PLAY_SPEED_RESET)\nIncrease media playback speed. (VK_PLAY_SPEED_UP)\nThis key is placed in the function section on some Apple …\nToggle power state. (KEYCODE_POWER)\nThe PowerOff key. Sometime called PowerDown.\nThe Previous Candidate function key.\nPrint the current document or message. (APPCOMMAND_PRINT)\nPrtScr SysRq or Print Screen\nThe Print Screen or SnapShot key, to initiate print-screen …\nNon-standard code value supported by Chromium.\nThe Process key.\nFound on Sun’s USB keyboard.\nThe properties (Props) key.\n’“ on a US keyboard.\nToggle random media or content shuffle mode. (…\nNot a physical key, but this key code is sent when the …\nToggle or cycle between media recording speeds. (…\nRedo the last action. (APPCOMMAND_REDO)\nRemoves an entry from the <code>Keymap</code>.\nToggle RF (radio frequency) input bypass mode (pass RF …\nThe right mouse button.\nThe Roman characters function key.\nSwitch the input mode on an external STB (set top box). (…\nToggle the power on an external STB (set top box). (…\nSave the current document or message. (APPCOMMAND_SAVE)\nToggle scan channels mode. (VK_SCAN_CHANNELS_TOGGLE)\nAdvance display screen mode to next available mode. (…\nScroll Lock\nThe Scroll Lock key, to toggle between scrolling and …\nFound on Sun’s USB keyboard.\nThe Select key.\nNon-standard code value supported by Chromium.\n;: on a US keyboard.\nToggle display of device settings screen. (VK_SETTINGS, …\nThe Shift key, to enable shift modifier function for …\nShift or ⇧\nShift or ⇧\nNon-standard code value supported by Chromium.\nThe Single Candidate function key.\n/? on a US keyboard.\nGeneral purpose virtual function key, as index 1.\nGeneral purpose virtual function key, as index 2.\nGeneral purpose virtual function key, as index 3.\nGeneral purpose virtual function key, as index 4.\n  (space)\nShow correction list when a word is incorrectly …\nToggle between dictation mode and command/control mode. (…\nSpellcheck the current document or selection. (…\nToggle split screen mode. (VK_SPLIT_SCREEN_TOGGLE)\nThe Standby key. This key turns off the display and places …\nToggle display of subtitles, if available. (VK_SUBTITLE)\nThe Super key.\nThe Symbol modifier key (used on some virtual keyboards).\nThe Symbol Lock key.\nSwitch to viewing TV. (KEYCODE_TV)\nTV 3D Mode. (KEYCODE_3D_MODE)\nToggle between antenna and cable input. (…\nAudio description. (KEYCODE_TV_AUDIO_DESCRIPTION)\nAudio description mixing volume down. (…\nAudio description mixing volume up. (…\nContents menu. (KEYCODE_TV_CONTENTS_MENU)\nContents menu. (KEYCODE_TV_DATA_SERVICE)\nSwitch the input mode on an external TV. (KEYCODE_TV_INPUT)\nSwitch to component input #1. (KEYCODE_TV_INPUT_COMPONENT_1…\nSwitch to component input #2. (KEYCODE_TV_INPUT_COMPONENT_2…\nSwitch to composite input #1. (KEYCODE_TV_INPUT_COMPOSITE_1…\nSwitch to composite input #2. (KEYCODE_TV_INPUT_COMPOSITE_2…\nSwitch to HDMI input #1. (KEYCODE_TV_INPUT_HDMI_1)\nSwitch to HDMI input #2. (KEYCODE_TV_INPUT_HDMI_2)\nSwitch to HDMI input #3. (KEYCODE_TV_INPUT_HDMI_3)\nSwitch to HDMI input #4. (KEYCODE_TV_INPUT_HDMI_4)\nSwitch to VGA input #1. (KEYCODE_TV_INPUT_VGA_1)\nMedia context menu. (KEYCODE_TV_MEDIA_CONTEXT_MENU)\nToggle network. (KEYCODE_TV_NETWORK)\nNumber entry. (KEYCODE_TV_NUMBER_ENTRY)\nToggle the power on an external TV. (KEYCODE_TV_POWER)\nRadio. (KEYCODE_TV_RADIO_SERVICE)\nSatellite. (KEYCODE_TV_SATELLITE)\nBroadcast Satellite. (KEYCODE_TV_SATELLITE_BS)\nCommunication Satellite. (KEYCODE_TV_SATELLITE_CS)\nToggle between available satellites. (…\nAnalog Terrestrial. (KEYCODE_TV_TERRESTRIAL_ANALOG)\nDigital Terrestrial. (KEYCODE_TV_TERRESTRIAL_DIGITAL)\nTimer programming. (KEYCODE_TV_TIMER_PROGRAMMING)\nTab or ⇥\nThe Horizontal Tabulation Tab key.\nToggle display of teletext, if available (VK_TELETEXT, …\nFound on Sun’s USB keyboard.\nUndo the last action. (APPCOMMAND_UNDO)\nThis value code should be used when no other value given …\nThis key value is used when an implementation is unable to …\nAdvance video mode to next available mode. (…\nThe Voice Dial key.\nThe WakeUp key. (KEYCODE_WAKEUP)\nCause device to identify itself in some manner, e.g., …\nThe Zenkaku (Full-Width) Characters key.\nThe Zenkaku/Hankaku (full-width/half-width) toggle key. (…\nThe ZoomIn key. (KEYCODE_ZOOM_IN)\nThe ZoomOut key. (KEYCODE_ZOOM_OUT)\nNon-standard code value supported by Chromium.\nToggle between full-screen and scaled content, or alter …\nReturns the action of the keymap entry.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe horizontal mouse cursor position of the frame.\nThe vertical mouse cursor position of the frame.\nReturns the delta of the mouse cursor position of the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nExports all keymap entries and their associated key chords.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the delta of the mouse cursor position of the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe state of the left mouse button.\nDetermine a <em>charCode</em> value for a key with a character …\nDetermine a <em>keyCode</em> value for a key.\nThe state of the middle mouse button.\nCreates a new keymap.\nCreates a new keymap entry.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nReturns the <code>on_action</code> callback function of the keymap …\nThe position of the mouse cursor when the mouse button was …\nThe position of the mouse cursor when the mouse button was …\nThe hovered entity when the mouse button was last pressed.\nReturns an iterator over every pressed keymap entry.\nThe horizontal mouse cursor position of the previous frame.\nThe vertical mouse cursor position of the previous frame.\nThe hovered entity when the mouse button was last released.\nThe intersection of a source flags value with the …\nThe state of the right mouse button.\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe state of the mouse button (pressed/released).\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nAutomatically determine the value.\nRepresents the axis-aligned bounding box of a view.\nStack child elements vertically.\nDescribes the capabilities of a view with respect to user …\nThe layout type determines how the nodes will position its …\nNode is positioned relative to parent and in-line with …\nA percentage of the parent dimension.\nA number of logical pixels.\nThe position type determines whether a node will be …\nStack child elements horizontally.\nNode is positioned relative to parent but ignores its …\nA factor of the remaining free space.\nUnits which describe spacing and size.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nBottom side of bounds.\nBottom left point of bounds.\nBottom right point of bounds.\nHorizontal and vertical center of bounds.\nBottom center of bounds.\nLeft center of bounds.\nRight center of bounds.\nTop center of bounds.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nExpands by some <code>amount</code> in both directions and returns a …\nExpands by some <code>amount</code> horizontally and returns a new …\nExpands by some <code>amount</code> vertically and returns a new …\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nConstruct a <code>BoundingBox</code> from checked minimum and maximum …\nGet a flags value with the bits of a flag with the given …\nBounds height equivalent to <code>h</code>.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nReturns true if the value is auto.\nWhether all bits in this flags value are unset.\nReturns true if the value is a percentage.\nReturns true if the value is in pixels.\nReturns true if the value is a stretch factor.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nLeft side of bounds equivalent to <code>x</code>.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nRight side of bounds.\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nShrinks by some <code>amount</code> in both directions and returns a …\nShrinks by some <code>amount</code> horizontally and returns a new …\nShrinks each side by the given separate amounts and …\nShrinks by some <code>amount</code> vertically and returns a new …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReturns the units converted to pixels or a provided …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nTop of bounds equivalent to <code>y</code>.\nTop left point of bounds.\nTop right point of bounds.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nBounds width equivalent to <code>w</code>.\nRepresents the axis-aligned bounding box of a view.\nA type which formats a localized message with any number …\nAdd a variable argument binding to the Localized type.\nAdd a constant argument to the Localized type.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSets a mapping function to apply to the translated text.\nCreates a new Localized type with a given key.\nA trait implemented by application data in order to …\nBuild the model data into the application tree.\nRespond to events in order to mutate the model data.\nModifiers for changing the abilities of a view.\nModifiers for changing the accessibility properties of a …\nModifiers which add an action callback to a view.\nModifiers for changing the layout properties of a view.\nModifiers for changing the style properties of a view.\nModifiers for changing the text properties of a view.\nModifiers for setting the properties of a window.\nSets whether the window should be on top of other windows. …\nSets the backdrop filter for the view.\nSets the background color of the view.\nSets the border radius for the bottom-left corner of the …\nSets the border corner shape for the bottom-left corner of …\nSets the border radius for the bottom-right corner of the …\nSets the border corner shape for the bottom-right corner …\nSets the border color of the view.\nSets the border corner shape for all four corners of the …\nSets the border radius for all four corners of the view.\nSets the border radius for the top-left corner of the view.\nSets the border corner shape for the top-left corner of …\nSets the border radius for the top-right corner of the …\nSets the border corner shape for the top-right corner of …\nSets the border width of the view.\nSets the space on the bottom side of the view.\nAdd a box-shadow to the view.\nSets the ext caret color of the view.\nSets whether the view can be checked.\nSets the checked state of the view.\nSets the space between the bottom side of the view and the …\nSets the space between the left side of the view and the …\nSets the space between the right side of the view and the …\nSets the space between the vew and its children.\nSets the space between the top side of the view and the …\nAdds a class name to the view.\nSets the clip path for the the view.\nSets the space between the views children in a horizontal …\nSets the text color of the view.\nSets the mouse cursor used when the view is hovered.\nSets whether the window has decorations. Accepts a boolean …\nSets the accessibility default action for the view.\nSets the view to be disabled.\nSets whether the view should be positioned and rendered.\nSets whether the view can be focused to receive keyboard …\nSets the focused state of the view.\nSets the font that should be used by the view.\nSets the font size of the view.\nSets the font stretch that should be used by the view if …\nSets the font style that should be used by the view.\nSets the font weight that should be used by the view.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSets the height of the view.\nSets whether the view should be hidden from accessibility.\nSets whether the view can be hovered by the mouse and …\nSets the icon used for the window.\nSets the ID name of the view.\nSets the inner size of the window to the given value. …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the layout type of the view.\nSets the space on the left side of the view.\nSets whether the view should act as an accessibility live …\nSets the maximum bottom space of the view.\nSets the maximum height of the view.\nSets the maximum inner size of the window to the given …\nSets the maximum left space of the view.\nSets the maximum right space of the view.\nSets the maximum width and maximum height of the view.\nSets the maximum space for all sides of the view.\nSets the maximum top space of the view.\nSets the maximum width of the view.\nSets whether the window is maximized. Accepts a boolean …\nSets the minimum bottom space of the view.\nSets the minimum height of the view.\nSets the minimum inner size of the window to the given …\nSets the minimum left space of the view.\nSets the minimum right space of the view.\nSets the minimum width and minimum height of the view.\nSets the minimum space for all sides of the view.\nSets the minimum top space of the view.\nSets the minimum width of the view.\nSets whether the window is minimized. Accepts a boolean …\nDerived lenses for <code>ModalModel</code>.\nSets the accessibility name of the view.\nSets whether the view can be navigated to, i.e. focused, …\nSets the accessibility numeric value for the view.\nAdds a callback which is performed when the the view …\nAdds a callback which is performed when the view gains …\nAdds a callback which is performed when the view loses …\nAdds a callback which is performed when the the view …\nAdds a callback which is performed when the mouse pointer …\nAdds a callback which is performed when the mouse pointer …\nAdds a callback which is performed when a mouse button is …\nAdds a callback which is performed when the mouse pointer …\nAdds a callback which is performed when a mouse button is …\nAdds a callback which is performed when the mouse pointer …\nAdds a callback which is performed when the mouse pointer …\nAdds a callback which is performed when the the view …\nAdds a callback which is performed when the the view …\nSets the opacity of the view.\nSets the outline color of the view.\nSets the outline offset of the view.\nSets the outline width of the view.\nSets the overflow behavior of the view in the horizontal …\nSets the overflow behavior of the view in the vertical …\nSets whether the view can be become the target of pointer …\nSets the position of the window to the given value. …\nSets the position type of the view.\nSets whether the window can be resized. Accepts a boolean …\nSets the space on the right side of the view.\nSets the accessibility role of the view.\nSets the angle of rotation for the view.\nSets the space between the views children in a vertical …\nSets the scale of the view.\nSets the color used to highlight selected text within the …\nSets the width and height of the view.\nSets the space for all sides of the view.\nSets the text content of the view.\nSets the horizontal alignment of text within the view.\nSets the accessibility text value for the view.\nSets whether the text of the view should be allowed to …\nSets the title of the window to the given value. Accepts a …\nSets whether a view should have the given class name.\nSets the space on the top side of the view.\nSets the transform of the view with a list of transform …\nSets the transform origin of the the view.\nSets the translation offset of the view.\nSets whether the window is transparent. Accepts a boolean …\nSets whether the view should be rendered.\nSets whether the window is visible. Accepts a boolean …\nSets whether the window has vsync enabled.\nSets the width of the view.\nSets the z-index of the view.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLens for the field <code>menu_visible</code> on <code>ModalModel</code>.\nCreates a new lens for the field <code>tooltip_visible</code> on …\nCreates a new lens for the field <code>menu_visible</code> on <code>ModalModel</code>…\nLens for the whole <code>ModalModel</code> struct.\nLens for the field <code>tooltip_visible</code> on <code>ModalModel</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nIndicates an alias or shortcut is to be created.\nIndicates something can be scrolled/panned in any …\nA value representing an angle expressed in degrees, …\nAn arrow which is usually also the default cursor icon.\nThe entity will receive pointer events unless its parent …\nThe bevel border corner shape.\n900\n700,\nThe shape the default view drawing algorithm should use …\nThe ‘bottom’ horizontal position keyword.\nA box shadow adding a shadow effect around an element’s …\nIndicates the table cell or set of cells can be selected.\n<code>center</code>\n<code>center</code>\nThe inline contents are centered within the line box.\nCharacter unit.\nCentimeters.\nIndicates a column can be resized horizontally.\nA color value.\nIndicates a context menu is available.\nIndicates something is to be copied.\nIndicates selection.\nThe ‘currentcolor’ keyword.\nAn icon of a cursor.\nThe platform-dependent default cursor. Typically an arrow.\nAn angle expressed in degrees.\nDetermines whether an entity will be rendered and acted on …\nIndicates something can be resized or moved east.\nem.\nThe same as right if direction is left-to-right and left …\nIndicates something can be resized or moved horizontally.\nex.\n950\n800\n200\nThe entity will be rendered and acted on by the layout …\nA font size value.\nA font stretch value.\nA font style.\nA font weight value.\nA font weight keyword corresponding to a specific font …\nIndicates something can be grabbed and moved around.\nIndicates something is being grabbed and moved around.\nAn angle expressed in gradians.\nIndicates something clickable like a link.\nIndicates help information is available.\nThe overflow is clipped and the content can only be …\nThe entity will not rendered, but will still be acted upon …\nA horizontal position keyword.\nInches.\nThe inline contents are justified. Text should be spaced …\nThe ‘left’ horizontal position keyword.\nThe inline contents are aligned to the left edge of the …\n<code>&lt;length-percentage&gt;</code>\n<code>&lt;length-percentage&gt;</code>\nA length or a percentage value.\nA length value.\n300\nA 2D matrix.\nA 2D matrix transform.\n500\nMillimeters.\nIndicates something is to be moved.\nIndicates something can be resized or moved north.\nIndicates something can be resized or moved north-east.\nIndicates something can be resized or moved diagonally …\nIndicates an item may not be dropped at the current …\nNo cursor is rendered.\nThe entity will not be rendered and acted on by the layout …\nThe entity will not receive pointer events.\nIndicates the requested action will not be carried out.\nIndicates something can be resized or moved vertically.\nIndicates something can be resized or moved north-west.\nIndicates something can be resized or moved diagonally …\nAn opacity value in the range of 0 to 1.\nDetermines how to deal with content that overflows the …\nThe amount of pixels per centimeter.\nThe amount of pixels per inch.\nThe amount of pixels per millimeter.\nThe amount of pixels per pica.\nThe amount of pixels per point.\nThe amount of pixels per quarter-millimeter.\nPicas.\nDetermines whether an entity will receive pointer events.\nIndicates the program is busy in the background, but the …\nPoints.\nPixels.\nQuarter.\nDraw system flag.\nText constraints system flag.\nLayout system flag.\nStyle system flag.\nA color with red, green, blue, and alpha components, in a …\nA RGBA color value.\nAn angle expressed in radians.\nRoot em.\nThe ‘right’ horizontal position keyword.\nThe inline contents are aligned to the right edge of the …\nA 2D rotation.\nThe round border corner shape.\nIndicates a row can be resized vertically.\nIndicates something can be resized or moved south.\nA scale defining a scale value on the x and the y axis.\nA 2D scale.\nA scale in the X direction.\nA scale in the Y direction.\nIndicates something can be resized or moved south-east.\n600\n<code>&lt;side&gt; &lt;length-percentage&gt;?</code>\n<code>&lt;side&gt; &lt;length-percentage&gt;?</code>\nA 2D skew.\nA skew along the X axis.\nA skew along the Y axis.\nThe same as left if direction is left-to-right and right …\nStores the style properties of all entities in the …\nIndicates something can be resized or moved south-west.\nIndicates the text can be selected.\nDetermines how overflowed content that is not displayed …\n100\nThe ‘top’ horizontal position keyword.\nAn individual transform function.\nDefines a transition that allows to change property values …\nA translate defining a translate value on the x and the y …\nA 2D translation.\nA translation in the X direction.\nA translation in the Y direction.\nAn angle expressed in turns.\nA vertical position keyword.\nIndicates the vertical text can be selected.\nView height.\nDetermines whether an entity will be rendered.\nThe overflow is not clipped and renders outside of the …\nThe entity will be rendered.\nViewport maximum.\nViewport minimum.\nView width.\nIndicates something can be resized or moved west.\nIndicates the program is busy in the background and the …\nIndicates something can be zoomed in.\nIndicates something can be zoomed out.\nGet a flags value with all known bits set.\nThe alpha component.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe blue component.\nThe blur radius used for making the box shadow bigger and …\nThe color of the box shadow.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe delay of the transition.\nThe intersection of a source flags value with the …\nThe duration of the transition.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nReturn a new RGBA from the Color\nThe green component.\nCreates a new RGBA from HSL values.\nCreates a new RGBA from HSLA values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nDetermines if the box shadow should be an outer shadow …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nFunction to convert logical points to physical pixels.\nCreates a new box shadow.\nCreates a new 2D matrix.\nCreates a new scale.\nCreates a new transition.\nCreates a new translation.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nFunction to convert physical pixels to logical points.\nA list of properties affected by transition.\nThe red component.\nThe intersection of a source flags value with the …\nCreates a new RGBA from RGB values\nCreates a new RGBA from RGB values\nCreates a new RGBA from RGBA values\nCreates a new RGBA from RGBA values\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe spread radius used for expanding and growing the box …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReturns the amount of pixels of the length if …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe scale value on the x axis.\nThe translate value on the x axis.\nThe horizontal offset of the box shadow.\nThe scale value on the y axis.\nThe translate value on the y axis.\nThe vertical offset of the box shadow.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nText horizontal alignment: <code>Left</code> (default), <code>Center</code>, <code>Right</code>.\nThe text baseline is the normal alphabetic baseline. …\nDisplays the source on top of the destination. The part of …\nText baseline vertical alignment: <code>Top</code>, <code>Middle</code>, <code>Alphabetic</code> …\nFills an additional triangular area between the common …\nDescribes that the contour of the path should continue as …\nBlend factors.\nThe ends of lines are squared off at the endpoints. …\nMain 2D drawing context.\nThe text is centered.\nCloses the current sub-path.\nStruct for representing colors.\nPredefined composite oprations.\nDetermines how a new (“source”) data is displayed …\nIgnores the destination and just displays the source.\nDisplays the destination on top of the source. The part of …\nOnly displays the part of the destination that is inside …\nOnly displays the part of the destination that is outside …\nDisplays the destination over the source.\nUsing the target alpha\nUsing the target color\nEnum with all possible canvas errors that could occur.\nThe fill rule used when filling paths: <code>EvenOdd</code>, <code>NonZero</code> …\nA font handle.\nInformation about a font.\nThe filter shall be a gaussian blur with given sigma as …\nSets the current sub-path winding to be hole.\nImageFilter allows specifying the type of filter to apply …\nImage flags (eg. repeat, flip, mipmaps, etc.)\nAn image handle.\nInformation about an image.\nImage source\nThe text is left-aligned.\nDisplays the source together with the destination, the …\nDetermines the shape used to draw the end points of lines: …\nDetermines the shape used to join two line segments where …\nDescribes that the contour of the path should continue as …\nThe text baseline is the middle of the em square.\nConnected segments are joined by extending their outside …\nTerminates the current sub-path and defines the new …\nAll use\nMinus the target alpha\nMinus the target color\nMinus the source alpha\nMinus the source color\nStruct controlling how graphical shapes are rendered.\nA collection of verbs (<code>move_to()</code>, <code>line_to()</code>, <code>bezier_to()</code>, …\nImage format: <code>Rgb8</code>, <code>Rgba8</code>, <code>Gray8</code>.\nThis is the main renderer trait that the Canvas draws to.\nThe text is right-aligned.\nThe ends of lines are rounded.\nRounds off the corners of a shape by filling an additional …\nSets the current sub-path winding to be solid.\nUsed to specify Solid/Hole when adding shapes to a path.\nDisplays the source in the destination, i.e. only the part …\nOnly displays the part of the source that is outside the …\nDisplays the source over the destination.\nThe ends of lines are squared off by adding a box with an …\nUsing the source alpha\nScale color by minimum of source alpha and destination …\nUsing the source color\nTextContext provides functionality for text processing in …\nResult of a shaping run.\nThe text baseline is the top of the em square.\n2×3 matrix (2 rows, 3 columns) used for 2D linear …\nA verb describes how to interpret one or more points to …\nOnly the areas that exclusively belong either to the …\nNot all\nAdds a font file to the canvas\nAdds all .ttf files from a directory\nRegisters all .ttf files from a directory with this text …\nRegisters the .ttf file from the specified path with this …\nAdds a font to the canvas by reading it from the specified …\nRegisters the in-memory representation of a TrueType font …\nRegisters the in-memory representation of a TrueType font …\nGet a flags value with all known bits set.\nReturns boolean if the shapes drawn with this paint will …\nCreates new circle arc shaped sub-path. The arc center is …\nAdds an arc segment at the corner defined by the last path …\nThe distance from the baseline to the top of the highest …\nAdds cubic bezier segment from last point in the path via …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReturns a black color\nCreates and returns a box gradient.\nReturns the maximum index-th byte of text that will fit …\nReturns the maximum index-th byte of text that will fit …\nReturnes a list of ranges representing each line of text …\nReturnes a list of ranges representing each line of text …\nCreates new circle shaped sub-path.\nClears the rectangle area defined by left upper corner …\nCloses current sub-path with a line segment.\nCreates a new solid color paint\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nReturns true if the specified point (x,y) is in the …\nCreates image from specified image data.\nAllocates an empty image with the provided domensions and …\nAllocates an image that wraps the given backend-specific …\nDeletes created image.\nThe distance from the baseline to the bottom of the lowest …\nThe intersection of a source flags value with the …\nSource dimensions\nDispatch an explicit set of GlyphDrawCommands to the …\nCreates new ellipse shaped sub-path.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nFills the provided Path with the specified Paint.\nRetrieves the current fill rule setting for this paint\nFills the provided string with the specified Paint.\nRenders the given source_image into target_image while …\nImage flags\nTells the renderer to execute all drawing commands and …\nReturns the current font size\nSource format\nImage format\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nReturns the native texture of an image given its ID.\nSets the composite operation with custom pixel arithmetic.\nSets the composite operation with custom pixel arithmetic …\nSets the composite operation.\nReturns the height of the current render target.\nheight of the glyphs as drawn\nImage height in pixels\nReturns color value for a 6-digit (<code>RRGGBB</code>) or 8-digit (…\nReturns color value specified by hue, saturation and …\nReturns color value specified by hue, saturation, …\nCreates an identity transformation with no translation, …\nCreates a new image pattern paint.\nReturns image info\nReturns the size in pixels of the image for the specified …\nLike <code>image</code>, but allows for adding a tint, or a color which …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nIntersects current scissor rectangle with the specified …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nReturns the current letter spacing\nReturns the current start line cap for this paint.\nReturns the current start line cap for this paint.\nReturns the current line join for this paint.\nAdds line segment from the last point in the path to the …\nReturns the current line width.\nCreates and returns a linear gradient paint.\nCreates and returns a linear gradient paint with two or …\nDecode an image from file\nDecode an image from memory\nReturns font metrics for a particular Paint.\nReturns font metrics for a particular Paint.\nReturns information on how the provided text will be drawn …\nReturns information on how the provided text will be drawn …\nGetter for the miter limit\nStarts new sub-path with specified point as first point.\nCreates a new canvas.\nCreates a new transformation matrix.\nCreates a new CompositeOperationState from the provided …\nCreates a new canvas with the specified renderer and using …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nReturn the bounding box for a Path\nAdds quadratic bezier segment from last point in the path …\nCreates and returns a radial gradient.\nCreates and returns a multi-stop radial gradient.\nResizes an image to the new provided dimensions.\nCreates new rectangle shaped sub-path.\nThe intersection of a source flags value with the …\nModule containing renderer implementations.\nResets current state to default values. Does not affect …\nReset and disables scissoring.\nResets current transform to a identity matrix.\nAdjusts the capacity of the shaped words cache. This is a …\nAdjusts the capacity of the shaping run cache. This is a …\nRestores the previous render state\nReturns a color value from red, green, blue char values. …\nReturns a color value from red, green, blue and alpha char …\nReturns a color value from red, green, blue and alpha char …\nReturns a color value from red, green, blue float values. …\nRotates the current coordinate system. Angle is specified …\nCreates new rounded rectangle shaped sub-path.\nCreates new rounded rectangle shaped sub-path with varying …\nPushes and saves the current render state into a state …\nSaves the current state before calling the callback and …\nScales the current coordinate system.\nSets the current scissor rectangle.\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nSets transparency of a color value.\nSets transparency of a color value.\nSets whether shapes drawn with this paint will be anti …\nCreates a new solid color paint\nSets the current rule to be used when filling a path\nSets the font size.\nSets the transparency applied to all rendered shapes.\nSets the letter spacing for this paint\nSets how the start and end of the line (cap) is drawn\nSets how the end cap of the line is drawn\nSets how the beggining cap of the line is drawn\nSets how sharp path corners are drawn.\nSets the line width for shapes stroked with this paint.\nSets the limit at which a sharp corner is drawn beveled.\nSets a new render target. All drawing operations after …\nSets the size of the default framebuffer (screen size)\nSets whether to use higher quality stencil strokes.\nSets the text horizontal alignment for this paint\nSets the text vertical alignment for this paint\nPremultiplies current coordinate system by specified …\nImage size (height and width) in pixels\nMemory usage in bytes\nSkews the current coordinate system along X axis. Angle is …\nSkews the current coordinate system along Y axis. Angle is …\nSets the current sub-path winding, see <code>Solidity</code>.\nTrue if this paint uses higher quality stencil strokes.\nStrokes the provided Path with the specified Paint.\nStrokes the provided string with the specified Paint.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReturns the current horizontal align\nReturns the current vertical align\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReturns the current transformation matrix\nTranslates the current coordinate system.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nUpdates image data specified by image handle.\nReturns a white color\nReturns the width of the current render target.\nwidth of the glyphs as drawn\nImage width in pixels\nReturns the paint with anti alias set to the specified …\nCreates a new CompositeOperationState with source and …\nReturns the paint with a new solid color set to the …\nReturns the paint with the rule for filling a path set to …\nReturns the paint with the font set to the specified value.\nReturns the paint with the font size set to the specified …\nReturns the paint with the letter spacing set to the …\nReturns the paint with line cap set to the specified value.\nReturns the paint with the beginning cap of the line set …\nReturns the paint with the beginning cap of the line set …\nReturns the paint with the line join set to the specified …\nReturns the paint with line width set to the specified …\nReturns the paint with the miter limit set to the …\nReturns the paint with stencil strokes set to the …\nReturns the paint with the text horizontal alignment set …\nReturns the paint with the text vertical alignment set to …\nPixel is 8-bit alpha\nAnimationDecoder trait\nAn Image in AVIF format.\nPixel contains 8-bit B, G and R channels\nPixel is 8-bit BGR with an alpha channel\nAn Image in BMP Format\nThe number of channels of this pixel type.\nA string that can help to interpret the meaning each …\nThis pixel has the format of one of the predefined …\nPixel is 8-bit CMYK\nAn enumeration over supported color types and bit depths\nThe maximum value for this type of primitive within the …\nThe minimum value for this type of primitive within the …\nAn Image in DDS Format\nAn error was encountered while decoding.\nThe delay of a frame relative to the previous one.\nA Dynamic Image\nTypes which are safe to treat as an immutable byte slice …\nAn error was encountered while encoding.\nContains the error value\nAn enumeration of color types encountered in image formats.\nAn Image in farbfeld Format\nA flat buffer over a (multi channel) image.\nA single animation frame\nAn implementation dependent iterator, reading the frames …\nA trait for manipulating images.\nTrait to inspect an image.\nAn Image in GIF Format\nSendable grayscale + alpha channel image buffer\nSendable grayscale image buffer\nAn Image in Radiance HDR Format\nAn Image in ICO Format\nGeneric image buffer\nThe trait that all decoders implement\nSpecialized image decoding not be supported by all formats\nThe trait all encoders implement\nThe generic error type for image operations.\nAn enumeration of supported image formats. Not all formats …\nEach pixel in this image is 16-bit Luma\nEach pixel in this image is 8-bit Luma\nEach pixel in this image is 16-bit Luma with alpha\nEach pixel in this image is 8-bit Luma with alpha\nResult of an image decoding/encoding process\nEach pixel in this image is 16-bit Rgb\nEach pixel in this image is 32-bit float Rgb\nEach pixel in this image is 8-bit Rgb\nEach pixel in this image is 16-bit Rgb with alpha\nEach pixel in this image is 32-bit float Rgb with alpha\nEach pixel in this image is 8-bit Rgb with alpha\nAn error occurred while interacting with the environment.\nAn Image in JPEG Format\nPixel is 1-bit luminance\nPixel is 16-bit luminance\nPixel is 16-bit luminance\nPixel is 2-bit luminance\nPixel is 4-bit luminance\nPixel is 8-bit luminance\nPixel is 8-bit luminance\nPixel is 1-bit luminance with an alpha channel\nPixel is 16-bit luminance with an alpha channel\nPixel is 16-bit luminance with an alpha channel\nPixel is 2-bit luminance with an alpha channel\nPixel is 4-bit luminance with an alpha channel\nPixel is 8-bit luminance with an alpha channel\nPixel is 8-bit luminance with an alpha channel\nCompleting the operation would have required more …\nGrayscale colors.\nGrayscale colors + alpha channel\nContains the success value\nAn Image in OpenEXR Format\nAn error was encountered in input arguments.\nA generalized pixel.\nThe type of pixel.\nThe pixel with an associated <code>ColorType</code>. Not all possible …\nImmutable pixel iterator\nAn Image in PNG Format\nAn Image in general PNM Format\nThe type of each channel in a pixel. For example, this can …\nAn Image in QOI format.\nRGB colors.\nPixel contains 1-bit R, G and B channels\nPixel is 16-bit RGB\nPixel contains 16-bit R, G and B channels\nPixel contains 2-bit R, G and B channels\nPixel is 32-bit float RGB\nPixel is 32-bit float RGB\nAn image buffer for 32-bit float RGB pixels, where the …\nPixel contains 4-bit R, G and B channels\nPixel contains 8-bit R, G and B channels\nPixel contains 8-bit R, G and B channels\nSendable Rgb image buffer\nRGB colors + alpha channel\nPixel is 1-bit RGB with an alpha channel\nPixel is 16-bit RGBA\nPixel is 16-bit RGB with an alpha channel\nPixel is 2-bit RGB with an alpha channel\nPixel is 32-bit float RGBA\nPixel is 32-bit float RGBA\nAn image buffer for 32-bit float RGBA pixels, where the …\nPixel is 4-bit RGB with an alpha channel\nPixel is 8-bit RGB with an alpha channel\nPixel is 8-bit RGB with an alpha channel\nSendable Rgb + alpha channel image buffer\nA View into another image\nThe scalar type that is used to store each channel in this …\nAn Image in TGA Format\nAn Image in TIFF Format\nPixel is of unknown color type with the specified bits per …\nAn operation can not be completed by the chosen …\nAn Image in WEBP Format\nApply the function <code>f</code> to each channel of this pixel.\nApply the function <code>f</code> to each channel of this pixel and …\nApply the function <code>f</code> to each channel except the alpha …\nApply the function <code>f</code> to each channel except the alpha …\nGet the bytes of this value.\nBlend the color of a given pixel into ourself, taking into …\nPut a pixel at location (x, y), taking into account alpha …\nIterators and other auxiliary structure for the <code>ImageBuffer</code>…\nReturns the components as a slice.\nReturns the channels of this pixel as a 4 tuple. If the …\nReturns the components as a mutable slice\nEncoding and decoding for various image file formats.\nSupplementary color information.\nReturns the color type of the image data produced by this …\nCopies all of the pixels from another image into this …\nCopies all of the pixels from one part of this image to …\nReturns a tuple containing the width and height of the …\nThe width and height of this image.\nContains detailed error representation.\nImage representations for ffi.\nConstruct a pixel from the 4 channels a, b, c and d. If …\nReturns a view into a slice.\nReturns mutable view into a mutable slice.\nReturns the pixel located at (x, y). Indexed from top left.\nGets a reference to the mutable pixel at location <code>(x, y)</code>. …\nGuess image format from memory block\nThe height of this image.\nReturns the ICC color profile embedded in the image, or …\nRead a tuple containing the (width, height) of the image …\nImage Processing Functions\nReturns true if this x, y coordinate is contained inside …\nConsume the decoder producing a series of frames.\nInvert this pixel\nInput and output of images.\nA <code>repr(C)</code> description of the layout of buffer samples.\nCreate a new image from a Reader.\nCreate a new image from a byte slice\nCreate a new image from a byte slice\nApply the function <code>f</code> to each channel of this pixel.\nApply the function <code>f</code> to each channel of this pixel and …\nApply the function <code>f</code> to each channel except the alpha …\nApply the function <code>f</code> to each channel except the alpha …\nMathematical helper functions and types.\nOpen the image located at the path specified. The image’…\nReturns the color type of the image file before decoding\nReturns an Iterator over the pixels of this image. The …\nPut a pixel at location (x, y). Indexed from top left.\nReturns all the bytes in the image.\nUse <code>read_image</code> instead; this method is an implementation …\nDecode a rectangular section of the image.\nUnderlying linear container holding sample values.\nSaves the supplied buffer to a file at the path specified.\nSaves the supplied buffer to a file at the path specified …\nSet the decoder to have the specified limits. See <code>Limits</code> …\nReturns a mutable subimage that is a view into this image. …\nConvert this pixel to luma\nConvert this pixel to luma with an alpha channel\nConvert this pixel to RGB\nConvert this pixel to RGB with an alpha channel\nReturns the total number of bytes in the decoded image.\nReturns the pixel located at (x, y). Indexed from top left.\nPuts a pixel at location (x, y). Indexed from top left.\nReturns a subimage that is an immutable view into this …\nThe width of this image.\nWrites the supplied buffer to a writer in the specified …\nWrites all the bytes in an image to the encoder.\nProvides color conversions for whole image buffers.\nEnumerate the pixels of an image.\nEnumerate the pixels of an image.\nEnumerate the rows of an image.\nEnumerate the rows of an image.\nIterate over pixel refs.\nIterate over mutable pixel refs.\nIterate over rows of an image\nIterate over mutable rows of an image\nConverts <code>self</code> to a buffer of type T\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecoding and Encoding of PNG Images\nUses a heuristic to select one of the preceding filters …\nAn <code>AnimationDecoder</code> adapter of <code>PngDecoder</code>.\nFilters based on the average of left and right neighbor …\nHigh compression level\nCompression level of a PNG encoder. The default setting is …\nDefault compression level\nFast, minimal compression\nFilter algorithms used to process image data to improve …\nNo processing done, best used for low bit depth grayscale …\nAlgorithm that takes into account the left, upper left, …\nPNG decoder\nPNG encoder\nFilters based on previous pixel in the same scanline\nFilters based on the scanline above\nTurn this into an iterator over the animation frames.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the gamma value of the image or None if no gamma …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns if the image contains an animation.\nCreates a new decoder that decodes from the stream <code>r</code>\nCreate a new encoder that writes its output to <code>w</code>\nCreate a new encoder that writes its output to <code>w</code> with …\nCreates a new decoder that decodes from the stream <code>r</code> with …\nWrite a PNG image with the specified width, height, and …\nThe required color type can not be handled.\nAn error was encountered while decoding.\nAn error was encountered while decoding an image.\nThe resulting image exceed dimension limits in either …\nThe dimensions passed are wrong.\nAn error was encountered while encoding.\nAn error was encountered while encoding an image.\nContains the error value\nThe format is known exactly.\nRepeated an operation for which error that could not be …\nAn image format is not supported.\nA string describing the parameter. This is discouraged and …\nSome feature specified by string. This is discouraged and …\nThe generic error type for image operations.\nA best effort representation for image formats.\nResult of an image decoding/encoding process\nThe operation would have performed an allocation larger …\nAn error occurred while interacting with the environment.\nCompleting the operation would have required more …\nIndicates the limit that prevented an operation from …\nCompleting the operation would have required more …\nThe format can be identified by a name.\nThe end of the image has been reached.\nContains the success value\nAn error was encountered in input arguments.\nAn error was encountered in inputs arguments.\nDetails how a parameter is malformed.\nA common path extension for the format is known.\nThe format is not known or could not be determined.\nAn operation can not be completed by the chosen …\nThe specified strict limits are not supported for this …\nThe implementation for an operation was not provided.\nDetails what feature is not supported.\nReturns the image format associated with this error.\nReturn the image format associated with this error.\nReturns the image format associated with this error.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate an <code>UnsupportedError</code> for an image with details on …\nCreate an <code>EncodingError</code> for an image format.\nCreate a <code>DecodingError</code> for an image format.\nConstruct a <code>ParameterError</code> directly from a corresponding …\nConstruct a generic <code>LimitError</code> directly from a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the corresponding <code>UnsupportedErrorKind</code> of the …\nReturns the corresponding <code>ParameterErrorKind</code> of the error.\nReturns the corresponding <code>LimitErrorKind</code> of the error.\nCreate an <code>EncodingError</code> that stems from an arbitrary error …\nCreate a <code>DecodingError</code> that stems from an arbitrary error …\nThe given limits\nThe supported strict limits\nThe color format did not match the channel count.\nThe samples are in column-major form and all samples are …\nDenotes invalid flat sample buffers when trying to convert …\nA flat buffer over a (multi channel) image.\nAll samples are packed.\nDifferent normal forms of buffers.\nThe represented image can not use this representation.\nAt least pixels are packed.\nThe samples are in row-major form and all samples are …\nA ffi compatible description of a sample buffer.\nThe represented image was too large.\nNo pixel aliases another.\nA flat buffer that can be used as an image view.\nA mutable owning version of a flat buffer.\nDeprecated - ChannelCountMismatch is used instead\nTuple of bounds in the order of coordinate inputs.\nAdd this to an index to get to the sample in the next …\nThe number of channels in the color representation of the …\nSupplementary color information.\nDescribe a column-major image packed in all directions.\nGet the dimensions <code>(channels, width, height)</code>.\nCheck if a buffer of length <code>len</code> is large enough.\nGet a reference on the inner sample descriptor.\nGet a reference on the sample buffer descriptor.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to a selected subpixel if it is …\nGet a mutable reference to a selected sample.\nGet a reference to a selected subpixel if it is in-bounds.\nGet a reference to a selected subpixel.\nIf there are any samples aliasing each other.\nThe height of the represented image.\nAdd this to an index to get to the next sample in …\nReturn the mutable portion of the buffer that holds sample …\nReturn the mutable buffer that holds sample values.\nReturn the portion of the buffer that holds sample values.\nReturn the portion of the buffer that holds sample values.\nCheck that the pixel and the channel index are in bounds.\nGet an index provided it is inbouds.\nResolve the index of a particular sample.\nGet the theoretical position of sample (channel, x, y).\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTake out the sample buffer.\nTake out the sample buffer.\nCheck if a buffer fulfills the requirements of a normal …\nA <code>repr(C)</code> description of the layout of buffer samples.\nGet the minimum length of a buffer such that all in-bounds …\nGet the minimum length of a buffer such that all in-bounds …\nGet the minimum length of a buffer such that all in-bounds …\nCompares the logical preconditions.\nDescribe a row-major image packed in all directions.\nGet a reference on the inner buffer.\nGet a reference on the inner buffer.\nUnderlying linear container holding sample values.\nShrink the image to the minimum of current and given …\nShrink the inner image.\nShrink the inner image.\nGet the strides for indexing matrix-like <code>[(c, w, h)]</code>.\nTry to convert this into an image with mutable pixels.\nThe width of the represented image.\nAdd this to an index to get to the next sample in …\nA bi-level color map\nCubic Filter\nThe color type on which the map operates on\nA color map\nAvailable Sampling Filters.\nGaussian Filter\nLanczos with window 3\nNearest Neighbor\nLinear Filter\nPerforms a Gaussian blur on the supplied image. <code>sigma</code> is a …\nBrighten the supplied image. <code>value</code> is the amount to …\nFunctions for altering and converting the color of …\nAdjust the contrast of the supplied image. <code>contrast</code> is the …\nReturn a mutable view into an image The coordinates set …\nReturn an immutable view into an image The coordinates set …\nReduces the colors of the image using the supplied …\nPerform a 3x3 box filter on the supplied image. <code>kernel</code> is …\nFlip an image horizontally\nFlip an image horizontally and put the result into the …\nFlip an image horizontally in place.\nFlip an image vertically\nFlip an image vertically and put the result into the …\nFlip an image vertically in place.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert the supplied image to grayscale. Alpha channel is …\nConvert the supplied image to grayscale. Alpha channel is …\nConvert the supplied image to a grayscale image with the …\nConvert the supplied image to a grayscale image with the …\nDetermine if this implementation of ColorMap overrides the …\nIndicate NeuQuant implements <code>lookup</code>.\nFill the image with a linear horizontal gradient\nHue rotate the supplied image. <code>value</code> is the degrees to …\nReduces the colors using the supplied <code>color_map</code> and …\nReturns the index of the closest match of <code>color</code> in the …\nLinearly sample from an image using coordinates in [0, w-1]…\nSample from an image using coordinates in [0, w-1] and [0, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInvert each pixel within the supplied image. This function …\nLooks up color by index in the color map.  If <code>idx</code> is out …\nMaps <code>color</code> to the closest color in the color map.\nOverlay an image at a given coordinate (x, y)\nCalculate the region that can be copied from top to bottom.\nReplace the contents of an image at a given coordinate (x, …\nResize the supplied image to the specified dimensions. …\nRotate an image 180 degrees clockwise.\nRotate an image 180 degrees clockwise and put the result …\nRotate an image 180 degrees clockwise in place.\nRotate an image 270 degrees clockwise.\nRotate an image 270 degrees clockwise and put the result …\nRotate an image 90 degrees clockwise.\nRotate an image 90 degrees clockwise and put the result …\nLinearly sample from an image using coordinates in [0, 1].\nSample from an image using coordinates in [0, 1], taking …\nResize the supplied image to the specific dimensions.\nTile an image by repeating it multiple times\nPerforms an unsharpen mask on the supplied image. <code>sigma</code> is …\nFill the image with a linear vertical gradient\nA bi-level color map\nThe color type on which the map operates on\nA color map\nBrighten the supplied image. <code>value</code> is the amount to …\nBrighten the supplied image in place. <code>value</code> is the amount …\nAdjust the contrast of the supplied image. <code>contrast</code> is the …\nAdjust the contrast of the supplied image in place. …\nReduces the colors of the image using the supplied …\nConvert the supplied image to grayscale. Alpha channel is …\nConvert the supplied image to grayscale. Alpha channel is …\nConvert the supplied image to a grayscale image with the …\nConvert the supplied image to a grayscale image with the …\nDetermine if this implementation of ColorMap overrides the …\nHue rotate the supplied image. <code>value</code> is the degrees to …\nHue rotate the supplied image in place. <code>value</code> is the …\nReduces the colors using the supplied <code>color_map</code> and …\nReturns the index of the closest match of <code>color</code> in the …\nInvert each pixel within the supplied image. This function …\nLooks up color by index in the color map.  If <code>idx</code> is out …\nMaps <code>color</code> to the closest color in the color map.\nSet of supported strict limits for a decoder.\nResource limits for decoding.\nA multi-format image reader.\nThis function checks the <code>max_image_width</code> and …\nThis function checks that all currently set strict limits …\nRemove the current information on the image format.\nRead the image (replaces <code>load</code>).\nGet the currently determined format.\nThis function increases the <code>max_alloc</code> limit with amount. …\nThis function acts identically to [<code>free</code>], but takes a <code>usize</code>…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert the reader into a decoder.\nRead the image dimensions.\nUnwrap the reader.\nSet a custom set of decoding limits.\nThe maximum allowed sum of allocations allocated by the …\nThe maximum allowed image height. This limit is strict. …\nThe maximum allowed image width. This limit is strict. The …\nCreate a new image reader without a preset format.\nDisable all decoding limits.\nDisable all limits.\nOpen a file to read, format will be guessed from path.\nThis function checks that the current limit allows for …\nThis function acts identically to [<code>reserve</code>], but accepts …\nThis function acts identically to [<code>reserve</code>], but takes a …\nSupply the format as which to interpret the read image.\nConstruct a reader with specified format.\nMake a format guess based on the content, replacing it on …\nA Rectangle defined by its top left corner, width and …\nReturns the argument unchanged.\nThe rectangle’s height.\nCalls <code>U::from(self)</code>.\nThe rectangle’s width.\nThe x coordinate of the top left corner.\nThe y coordinate of the top left corner.\nBasic struct used for both owned (alias <code>ImgVec</code>) and …\nAdditional methods that depend on buffer size\nAdditional methods that depend on buffer size\nReference to pixels inside another image. Pass this …\nSame as <code>ImgRef</code>, but mutable Pass this structure by value …\nImage owning its pixels.\nIterates over pixels in the (sub)image. Call <code>Img.pixels()</code> …\nIterates over pixels in the (sub)image. Call …\nIterates over pixels in the (sub)image. Call …\nRows of the image. Call <code>Img.rows()</code> to create it.\nRows of the image. Call <code>Img.rows_mut()</code> to create it.\nReturns a reference to the buffer, width, height. …\nBorrow the container mutably\nMake a mutable reference to the entire image\nBorrow the container\nMake a reference to this image to pass it to functions …\nMake mutable reference immutable\nImmutable reference to the pixel storage. Warning: exposes …\nStorage for the pixels. Usually <code>Vec&lt;Pixel&gt;</code> or <code>&amp;[Pixel]</code>. …\nStorage for the pixels. Usually <code>Vec&lt;Pixel&gt;</code> or <code>&amp;[Pixel]</code>. …\nStorage for the pixels. Usually <code>Vec&lt;Pixel&gt;</code> or <code>&amp;[Pixel]</code>. …\nStorage for the pixels. Usually <code>Vec&lt;Pixel&gt;</code> or <code>&amp;[Pixel]</code>. …\nMutable reference to the pixel storage. Warning: exposes …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHeight of the image in pixels.\nHeight of the image in pixels.\nHeight of the image in pixels.\nHeight of the image in pixels.\nHeight of the image in pixels.\nHeight in number of full strides. If the underlying buffer …\nRead a pixel at <code>(x,y)</code> location (e.g. px = <code>img[(x,y)]</code>)\nTake n-th row as a slice. Same as .rows().nth(n).unwrap()\nRead a pixel at <code>(x,y)</code> location (e.g. px = <code>img[(x,y)]</code>)\nRead a pixel at <code>(x,y)</code> location (e.g. px = <code>img[(x,y)]</code>)\nRead a pixel at <code>(x,y)</code> location (e.g. px = <code>img[(x,y)]</code>)\nTake n-th row as a slice. Same as .rows().nth(n).unwrap()\nRead a pixel at <code>(x,y)</code> location (e.g. px = <code>img[(x,y)]</code>)\nTake n-th row as a slice. Same as .rows().nth(n).unwrap()\nRead a pixel at <code>(x,y)</code> location (e.g. px = <code>img[(x,y)]</code>)\nTake n-th row as a mutable slice. Same as …\nWrite a pixel at <code>(x,y)</code> location (e.g. <code>img[(x,y)] = px</code>)\nWrite a pixel at <code>(x,y)</code> location (e.g. <code>img[(x,y)] = px</code>)\nWrite a pixel at <code>(x,y)</code> location (e.g. <code>img[(x,y)] = px</code>)\nTake n-th row as a mutable slice. Same as …\nWrite a pixel at <code>(x,y)</code> location (e.g. <code>img[(x,y)] = px</code>)\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the pixel storage by consuming the image. Be careful …\nReturns the buffer, width, height. Guarantees that the …\nDeprecated. Use .rows() or .pixels() iterators which are …\nConvert underlying buffer to owned (e.g. slice to vec)\nA convenience method for creating an image of the same …\nCreate new image with <code>Container</code> (which can be <code>Vec</code>, <code>&amp;[]</code> or …\nA convenience method for creating an image of the same …\nSame as <code>new()</code>, except each row is located <code>stride</code> number of …\nIterate <code>width*height</code> pixels in the <code>Img</code>, ignoring padding …\nPanics\nIf you want to iterate in parallel, parallelize <code>rows()</code> …\nIf you want to iterate in parallel, parallelize <code>rows()</code> …\nIf you want to iterate in parallel, parallelize <code>rows()</code> …\nIterate <code>width*height</code> pixels in the <code>Img</code>, by reference, …\nIterate over whole rows of pixels as slices\nIterate over rows of the image as slices\nIterate over whole rows as slices\nIterate over whole rows as slices\nIterate over rows of the image as mutable slices\nIterate over the entire buffer as rows, including all …\nIterate over the entire buffer as rows, including all …\nIterate over the entire buffer as rows, including all …\nIterate over the entire buffer as rows, including all …\nNumber of <em>pixels</em> to skip in the container to advance to …\nNumber of pixels to skip in the container to advance to …\nNumber of pixels to skip in the container to advance to …\nNumber of pixels to skip in the container to advance to …\nNumber of pixels to skip in the container to advance to …\nMake a reference for a part of the image, without copying …\nMake a reference for a part of the image, without copying …\nTurn this into immutable reference, and slice a subregion …\nTrim this image without copying. Note that mutable borrows …\nCreate a mutable view into a region within the image. See …\nReturns a reference to the buffer, width, height. …\nConvert underlying buffer to owned (e.g. slice to vec)\nWidth of the image in pixels.\nWidth of the image in pixels.\nWidth of the image in pixels.\nWidth of the image in pixels.\nWidth of the image in pixels.\nMaximum possible width of the data, including the stride.\nThis is the main renderer trait that the Canvas draws to.\nVertex struct for specifying triangle geometry\nVoid renderer used for testing\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMake the “Screen” RenderTarget actually render to a …\nCasts a slice of bytes into a slice of pixels, e.g. <code>[u8]</code> …\nSame as <code>ComponentMap</code>, but doesn’t change the alpha …\nCasting a slice of <code>RGB/A</code> values to a slice of <code>u8</code>\nApplying operation to every component\nCasting the struct to slices of its components\nCast a slice of component values (bytes) as a slice of …\nMarker trait for “plain old data”.\nDerive the <code>Pod</code> trait for a struct\nAn <code>Red + Green + Blue</code> pixel.\n16-bit RGB in machine’s native endian\n8-bit RGB\nAn <code>Red + Green + Blue + Alpha</code> pixel.\n16-bit RGB in machine’s native endian. 0 = transparent, …\n8-bit RGBA, alpha is last. 0 = transparent, 255 = opaque.\nTrait for types that can be safely created with <code>zeroed</code>.\nDerive the <code>Zeroable</code> trait for a struct\nAlpha Component\nAlpha Component\nAlpha Component\nConvenience function for converting to RGBA\nCreate a new RGBA with the new alpha value, but same RGB …\nBGR/BGRA alernative layouts &amp; grayscale\nReinterpert slice as reverse-order BGR pixels\nReinterpert ntable slice as reverse-order BGR pixels\nReinterpert slice as reverse-order BGRA pixels\nReinterpert mutable slice as reverse-order alpha-last BGRA …\nThe components interpreted as raw bytes, in machine’s …\nThe components interpreted as raw bytes, in machine’s …\nReinterpert mutable slice as grayscale pixels\nReinterpert mutable slice as grayscale pixels with alpha\nReinterpert mutable slice as grayscale pixels with alpha\nReinterpert mutable slice as grayscale pixels\nThe components interpreted as a mutable array, e.g. one <code>RGB</code>…\nReinterpret the slice as a read-only/shared slice of …\nReinterpret the slice as a mutable/exclusive slice of …\nReinterpert slice as RGB pixels\nReinterpert mutable slice as RGB pixels\nReinterpert slice as RGBA pixels\nReinterpert mutable slice as RGBA pixels\nThe components interpreted as an array, e.g. one <code>RGB</code> …\nBlue Component\nBlue Component\nBlue Component\nBlue Component\nBlue Component\nBlue Component\nCopy RGB components out of the RGBA struct\nReturns the argument unchanged.\nReturns the argument unchanged.\nTakes exactly 3 elements from the iterator and creates a …\nTakes exactly 4 elements from the iterator and creates a …\nGreen Component\nGreen Component\nGreen Component\nGreen Component\nGreen Component\nGreen Component\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIterate over color components (R, G, and B)\nIterate over all components (length=4)\nConvenience function (equivalent of …\nCreate a new RGBA with a new alpha value created by the …\nConvenience function for applying the same formula to …\nCreate new RGBA with the same alpha value, but different …\nConvenience function for creating a new pixel The order of …\nConvenience function for creating a new pixel The order of …\nConvenience function for converting to RGBA with alpha …\nConvenience function for creating a new pixel The order of …\nRed Component\nRed Component\nRed Component\nRed Component\nRed Component\nRed Component\nCopy RGB components out of the RGBA struct\nProvide a mutable view of only RGB components (leaving out …\nCalls <code>zeroed</code>.\nA <code>Blue + Green + Red</code> pixel.\n16-bit BGR in machine’s native endian\n8-bit BGR\nA <code>Blue + Green + Red + Alpha</code> pixel.\n16-bit BGR in machine’s native endian\n8-bit BGRA\n16-bit gray in machine’s native endian\n8-bit gray\n16-bit gray with alpha in machine’s native endian\n8-bit gray with alpha in machine’s native endian\nA <code>Grayscale</code> pixel.\nA pixel for grayscale value + alpha components.\nAlpha Component\nAlpha Component\nAlpha Component\nConvenience function for converting to RGBA\nCreate a new RGBA with the new alpha value, but same RGB …\nCreate a new <code>GrayAlpha</code> with the new alpha value, but same …\nBlue Component\nBlue Component\nBlue Component\nBlue Component\nBlue Component\nBlue Component\nCopy RGB components out of the RGBA struct\nProvide a mutable view of only RGB components (leaving out …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGreen Component\nGreen Component\nGreen Component\nGreen Component\nGreen Component\nGreen Component\nCopy <code>Gray</code> component out of the <code>GrayAlpha</code> struct\nProvide a mutable view of only <code>Gray</code> component (leaving out …")