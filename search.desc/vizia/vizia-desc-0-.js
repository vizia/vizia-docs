searchState.loadedDescShard("vizia", 0, "Vizia\nCreating a new application creates a root <code>Window</code> and a …\nData binding provides a way to link views to model data so …\nContext types for retained state, used during view …\nA model for system specific state which can be accessed by …\nEvents for communicating state change to views and models.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a <code>ContextProxy</code> which can be used to send events …\nA collection of built-in SVG icons.\nSets the default built-in theming to be ignored.\nTypes used for handling input events such as mouse and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nVizia uses morphorm for layout.\nProvides types for adapting an application to a particular …\nModels are used to store application data and can be bound …\nMethods on views for changing their properties or for …\nTakes a closure which will be called at the end of every …\nResource management for fonts, themes, images, and …\nStyling determines the appearance of a view.\nContains types and functions used for custom drawing …\nViews are used to visually present model data and to act …\nBuilt-in views provided by vizia.\nWindow management and system events.\nAn ID used to reference style animations stored in the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA view with a binding which rebuilds its contents when the …\nA reference to model or local data\nA trait for fast comparisons of data. Implemented by any …\nA Lens allows the construction of a reference to a piece …\nHelpers for constructing more complex <code>Lens</code>es.\nA type returned by <code>Lens::view()</code> which contains either a …\nOwned data\nA trait which allows passing a value or a lens to a view …\n<code>Lens</code> composed of two lenses joined together\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUsed to construct a lens to some data contained within …\nA context used for configuring the accessibility features …\nWrapper around an accesskit node builder, a node id, and a …\nThe main storage and control object for a Vizia …\nA bundle of data representing a snapshot of the context …\nA trait for any Context-like object that lets you access …\nA context used when drawing a view.\nA context used when handling events.\nThe event loop has been closed; the application is exiting.\nErrors that might occur when emitting an event via a …\nA context used when loading images.\nTrait for querying properties of the tree from a context.\nThe current runtime does not support proxying events.\nAdds a child accessibility node.\nAdds a global listener to the application.\nAdd a listener to an entity.\nAdd a listener to an entity.\nAdds a timer to the application.\nAdds a timer to the application.\nReturns the background color of the view.\nReturns the border style of the current view.\nReturns the border width of the current view in physical …\nReturns the border width of the current view in physical …\nReturns the bounds of the current view.\nReturns the bounds of the current view.\nReturns the bounds of the current view.\nGet the vector path of the current view.\nCancel a scheduled event before it is sent.\nCapture mouse input for the current view.\nReturns the child-bottom space of the current view.\nReturns the child-left space of the current view.\nReturns the child-right space of the current view.\nReturns the child-top space of the current view.\nReturns the clip path of the current view.\nReturns the clip bounds of the current view.\nReturns the corner radius for the bottom-left corner of …\nReturns the corner shape for the top-left corner of the …\nReturns the corner shape for the top-left corner of the …\nReturns the corner radius for the bottom-right corner of …\nReturns the corner shape for the top-left corner of the …\nReturns the corner shape for the top-left corner of the …\nReturns the corner radius for the top-left corner of the …\nReturns the corner shape for the top-left corner of the …\nReturns the corner smoothing for the top-left corner of …\nReturns the corner radius for the top-right corner of the …\nReturns the corner shape for the top-left corner of the …\nReturns the corner shape for the top-left corner of the …\nReturns the Entity id of the current view.\nThe “current” entity, generally the entity which is …\nGet model/view data from the context. Returns <code>None</code> if the …\nReturns the lookup pattern to pick the default font.\nReturns the display of the current view.\nDraw background color or background image (including …\nDraw the border of the current view.\nDraw the outline of the current view.\nDraw shadows for the current view.\nDraw any text for the current view.\nSend an event containing the provided message up the tree …\nSend a custom event with custom origin and propagation …\nSend an event containing the provided message directly to …\nReturns a reference to the Environment model.\nReturns a reference to the Environment model.\nReturns the id of the first_child of the current view.\nSets application focus to the current view using the …\nSets application focus to the current entity using the …\nMoves the keyboard focus to the next navigable view.\nSets application focus to the current view with the …\nSets application focus to the current entity with the …\nReturns the currently focused view.\nReturns the font-size of the current view in physical …\nReturns the font-size of the current view in physical …\nReturns the font-slant of the current view.\nReturns the font variation settings of the current view.\nReturns the font-weight of the current view.\nReturns the font-width of the current view.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the contents of the system clipboard.\nReturns a ContextProxy which can be moved between threads …\nReturns the currently hovered view.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if the current view is active.\nReturns true if the current view is currently animating …\nReturns true if the current view is checked.\nReturns true if the cursor icon is locked.\nReturns true if the current view is disabled.\nReturns true if the current view is focused.\nReturns true if the current view is being hovered.\nReturns true if the mouse cursor is over the current view.\nReturns true if the view is in a read-only state.\nSets the view, by id name, which labels the current view …\nReturns the line clamp Of the current view.\nPrevents the cursor icon from changing until the lock is …\nFunction to convert logical points to physical pixels.\nConverts logical points to physical pixels.\nReturns a reference to the keyboard modifiers state.\nReturns a reference to the keyboard modifiers state.\nModifies the state of an existing timer with the provided …\nModifies the state of an existing timer with the provided …\nReturns a reference to the mouse state.\nReturns a reference to the mouse state.\nMarks the current view as needing to be redrawn.\nMark the application as needing to rerun the draw method\nMarks the current view as needing a layout computation.\nMark the application as needing to rerun layout …\nMarks the current view as needing to be restyled.\nMark the application as needing to recompute view styles\nCreates a new context.\nSets a numeric value used for accessibility for the …\nReturns the opacity of the current view.\nReturns the outline color of the current view.\nReturns the outline offset of the current view in physcial …\nReturns the outline width of the current view in physical …\nReturns the id of the parent of the current view.\nFunction to convert physical pixels to logical points.\nConvert physical pixels to logical points.\nTrigger an animation with the given id to play on the …\nTrigger an animation with the given id to play on a target …\nRelease mouse input capture for the current view.\nReloads the stylesheets linked to the application.\nRemoves the provided entity from the application.\nRemove all user themes from the application.\nReturns the Entity id associated with the given identifier.\nFinds the entity that identifier identifies\nReturns the scale factor.\nReturns the scale factor.\nReturns the scale factor of the display.\nSend an event containing the provided message up the tree …\nSend a custom event with custom origin and propagation …\nSend an event containing the provided message directly to …\nSet the active state for the current view.\nSets the backdrop filter of the current view.\nSets the accessibility bounds of the node. This is not the …\nSets the checked state of the current view.\nSets the clip path of the current view.\nSet the contents of the system clipboard.\nSets the accessibility default action verb of the view.\nSets the global default font for the application.\nSets the display type of the current view.\nSets whether the view should be explicitely hidden from …\nSets the hover state of the current view.\nSets the language used by the application for localization.\nSets the language used by the application for localization.\nSets the view to be an accessibility live region.\nSets the accessibility name of the view.\nSets the opacity of the current view.\nSets the overflow type on the horizontal axis of the …\nSets the overflow type on the vertical axis of the current …\nSets the accessibility role of the view.\nSets the role of the node.\nSets the rotation of the current view.\nSets the scale of the current view.\nSets the text of the current view.\nSets the direction of any text within the node.\nSets the specified selection of any text within the node.\nSets the current theme mode.\nSets the transform of the current view.\nSets the transform origin of the current view.\nSets the translation of the current view.\nSets the valid state of the current view.\nSets the value of a node.\nSets the visibility of the current view.\nSets the z-index of the current view.\nReturns a reference to the shadows of the current view.\nSpawns a thread and provides a ContextProxy for sending …\nStarts a timer with the provided timer id.\nStarts a timer with the provided timer id.\nStops the timer with the given timer id.\nStops the timer with the given timer id.\nReturns the text alignment of the current view.\nReturns the text overflow preference of the current view.\nSets a text value used for accessbility for the current …\nReturns whether the current view should have its text …\nReturns true if the timer with the provided timer id is …\nReturns true if the timer with the provided timer id is …\nToggles the addition/removal of a class name for the …\nToggles the addition/removal of a class name for the …\nReturns the 2D transform of the current view.\nReturns the 2D transform of the current view.\nReleases any cursor icon lock, allowing the cursor icon to …\nReturns the visibility of the current view.\nMakes the above black magic more explicit\nReturns the z-index of the current view.\nbuiltin vizia themes\nA model for system specific state which can be accessed by …\nEvents for setting the state in the Environment.\nSet the locale used for the whole application.\nSet the default theme mode.\nSystem theme, if we choose this as our theme vizia will …\nAlternate between dark and light theme modes.\nReset the locale to use the system provided locale.\nThe current application theme\nDerived lenses for <code>Environment</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe locale used for localization.\nThe current system theme\nCurrent application and system theme.\nDerived lenses for <code>Theme</code>.\nLens for the field <code>caret_timer</code> on <code>Environment</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLens for the field <code>locale</code> on <code>Environment</code>.\nCreates a new lens for the field <code>locale</code> on <code>Environment</code>. …\nCreates a new lens for the field <code>theme</code> on <code>Environment</code>. Use …\nCreates a new lens for the field <code>caret_timer</code> on <code>Environment</code>…\nLens for the whole <code>Environment</code> struct.\nLens for the field <code>theme</code> on <code>Environment</code>.\nLens for the field <code>app_theme</code> on <code>Theme</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new lens for the field <code>app_theme</code> on <code>Theme</code>. Use …\nCreates a new lens for the field <code>sys_theme</code> on <code>Theme</code>. Use …\nLens for the whole <code>Theme</code> struct.\nLens for the field <code>sys_theme</code> on <code>Theme</code>.\nEmitted when a character is typed.\nPrints the debug message to the console.\nEvents propagate directly to the target entity and to no …\nEmitted when a file is dragged and then dropped onto the …\nA wrapper around a message, providing metadata on how the …\nThe metadata of an <code>Event</code>.\nMove keyboard focus to the next navigable view.\nMove keyboard focus to the previous navigable view.\nEmitted when an entity changes position or size.\nGrabs the mouse cursor, preventing it from leaving the …\nEmitted when a keyboard key is pressed.\nEmitted when a keyboard key is released.\nEmitted when mouse events have been captured.\nEmitted when mouse events have been released.\nEmitted when a mouse button is double clicked.\nEmitted when a mouse button is pressed\nEmitted when the mouse cursor enters an entity.\nEmitted when the mouse cursor leaves an entity.\nEmitted when the mouse cursor is moved\nEmitted when the mouse cursor leaves the bounding box of …\nEmitted when the mouse cursor enters the bounding box of …\nEmitted when the mouse scroll wheel is scrolled.\nEmitted when a mouse button is triple clicked\nEmitted when a mouse button is released.\nEmitted when the primary mouse button or trigger key is …\nEmitted when the primary mouse button or trigger key is …\nDetermines how an event propagates through the tree.\nRequests a redraw of the window contents.\nRequests a relayout.\nReloads all application stylesheets.\nRequest a restyle.\nSets whether the window remains on top of other windows.\nSets the mouse cursor icon.\nSets the (x,y) position of the mouse cursor in window …\nSets whether the window has decorations.\nSets the maximum size of the window.\nSets whether the window is maximized.\nSets the minimum size of the window.\nSets whether the window is minimized.\nSets the position of the window.\nSets whether the window is resizable.\nSets the size of the window.\nSets the title of the window.\nSets whether the window is visible.\nEvents propagate starting at the target entity and …\nEmited when the system window theme has changed.\nA handle used to cancel a scheduled event before it is …\nA handle used to start, stop, and check the running status …\nEnum which can be used to determine the reason a timer …\nEvents propagate up the tree from the target entity from …\nEmitted when a window is closed. Can also be emitted by a …\nEvents generated by the application in response to OS …\nConsumes the event to prevent it from continuing on its …\nConsumes the event to prevent it from continuing on its …\nSets the propagation to directly target the <code>entity</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTries to downcast the event message to the specified type. …\nCreates a new event with a specified message.\nSets the origin of the event.\nThe entity that produced the event.\nSets the propagation of the event.\nHow the event propagates through the tree.\nTries to downcast the event message to the specified type. …\nSets the target of the event.\nThe entity the event should be sent to (or from in the …\nSwitch the input mode on an external AVR (audio/video …\nToggle the power on an external AVR (audio/video …\nThe Accept (Commit, OK) key. Accept current option or …\nFound on Sun’s USB keyboard.\nThe Again key, to redo or repeat an action.\nThe All Candidates key, to initate the multi-candidate …\nThe Alphanumeric key.\nThe Alt (Alternative) key. This key enables the alternate …\nThe Alternate Graphics (AltGr or AltGraph) key. This key …\nAlt, Option or ⌥.\nAlt, Option or ⌥. This is labelled AltGr key on many …\nThe Application switch key, which provides a list of …\n↓\nThe down arrow key, to navigate or traverse downward. (…\n←\nThe left arrow key, to navigate or traverse leftward. (…\n→\nThe right arrow key, to navigate or traverse rightward. (…\n↑\nThe up arrow key, to navigate or traverse upward. (…\nThe Attention (Attn) key.\nAdjust audio balance leftward. (VK_AUDIO_BALANCE_LEFT)\nAdjust audio balance rightward. (VK_AUDIO_BALANCE_RIGHT)\nDecrease audio bass boost or cycle down through bass boost …\nToggle bass boost on/off. (APPCOMMAND_BASS_BOOST)\nIncrease audio bass boost or cycle up through bass boost …\nAdjust audio fader towards front. (VK_FADER_FRONT)\nAdjust audio fader towards rear. (VK_FADER_REAR)\nAdvance surround audio mode to next available mode. (…\nDecrease treble. (APPCOMMAND_TREBLE_DOWN)\nIncrease treble. (APPCOMMAND_TREBLE_UP)\nDecrease audio volume. (APPCOMMAND_VOLUME_DOWN, …\nToggle between muted state and prior volume level. (…\nIncrease audio volume. (APPCOMMAND_VOLUME_UP, …\n`~ on a US keyboard. This is the 半角/全角/漢字 (…\nUsed for both the US | (on the 101-key layout) and also …\nBackspace or ⌫. Labelled Delete on Apple keyboards.\nThe Backspace key. This key value is also used for the key …\n[{ on a US keyboard.\n]} on a US keyboard.\nNon-standard code value supported by Chromium.\nThe Brightness Down key. Typically controls the display …\nNon-standard code value supported by Chromium.\nThe Brightness Up key. Typically controls the display …\nSome laptops place this key to the left of the ↑ key.\nNavigate to previous content or page in current history. (…\nOpen the list of browser favorites. (…\nSome laptops place this key to the right of the ↑ key.\nNavigate to next content or page in current history. (…\nGo to the user’s preferred home page. (…\nRefresh the current page or content. (…\nCall up the user’s preferred search page. (…\nStop loading the current page or content. (…\nThe Call key. (KEYCODE_CALL)\nThe Camera key. (KEYCODE_CAMERA)\nThe Camera focus key. (KEYCODE_FOCUS)\nThe Cancel key.\nCapsLock or ⇪\nThe Caps Lock (Capital) key. Toggle capital character lock …\nSelect next (numerically or logically) lower channel. (…\nSelect next (numerically or logically) higher channel. (…\nA key string that corresponds to the character typed by …\nRemove the currently selected input.\nClose the current document or message (Note: This …\nToggle the display of Closed Captions. (VK_CC, …\nCode is the physical position of a key.\nThe Code Input key, to initiate the Code Input mode to …\nGeneral purpose color-coded media function key, as index 0 …\nGeneral purpose color-coded media function key, as index 1 …\nGeneral purpose color-coded media function key, as index 2 …\nGeneral purpose color-coded media function key, as index 3 …\nGeneral purpose color-coded media function key, as index 4 …\nGeneral purpose color-coded media function key, as index 5 …\n,&lt; on a US keyboard.\nThe Compose key, also known as Multi_key on the X Window …\nThe application context menu key, which is typically found …\nShow the application’s context menu. This key is …\nThe Control or Ctrl key, to enable control modifier …\nControl or ⌃\nControl or ⌃\nJapanese: 変換 (henkan)\nThe Convert key, to convert the current input method …\nFound on Sun’s USB keyboard.\nCopy the current selection. (APPCOMMAND_COPY)\nThe Cursor Select (Crsel) key.\nFound on Sun’s USB keyboard.\nCut the current selection. (APPCOMMAND_CUT)\nSelect Digital Video Rrecorder. (KEYCODE_DVR)\nA dead key combining key. It may be any combining key from …\n⌦. The forward delete key. Note that on Apple keyboards, …\nThe Delete (Del) Key. This key value is also used for the …\n0) on a US keyboard.\n1! on a US keyboard.\n2@ on a US keyboard.\n3# on a US keyboard.\n4$ on a US keyboard.\n5% on a US keyboard.\n6^ on a US keyboard.\n7&amp; on a US keyboard.\n8* on a US keyboard.\n9( on a US keyboard.\nAdjust brightness of device, by toggling between or …\nSwap video sources. (VK_DISPLAY_SWAP)\nNon-standard code value supported by Chromium.\nThe Eisu key. This key may close the IME, but its purpose …\nEject or ⏏. This key is placed in the function section …\nToggle removable media to eject (open) and insert (close) …\nPage Down, End or ↘\nThe End key, used with keyboard entry to go to the end of …\nThe End Call key. (KEYCODE_ENDCALL)\nEnter or ↵. Labelled Return on Apple keyboards.\nThe Enter or ↵ key, to activate current selection or …\n=+ on a US keyboard.\nThe Erase to End of Field key. This key deletes all …\nEsc or ⎋\nThe Esc key. This key was originally used to initiate an …\nThe Extend Selection (Exsel) key.\nThe Execute key.\nExit the current application. (VK_EXIT)\nF1\nThe F1 key, a general purpose function key, as index 1.\nF10\nThe F10 key, a general purpose function key, as index 10.\nF11\nThe F11 key, a general purpose function key, as index 11.\nF12\nThe F12 key, a general purpose function key, as index 12.\nF13\nThe F13 key, a general purpose function key, as index 13.\nF14\nThe F14 key, a general purpose function key, as index 14.\nF15\nThe F15 key, a general purpose function key, as index 15.\nF16\nThe F16 key, a general purpose function key, as index 16.\nF17\nThe F17 key, a general purpose function key, as index 17.\nF18\nThe F18 key, a general purpose function key, as index 18.\nF19\nThe F19 key, a general purpose function key, as index 19.\nF2\nThe F2 key, a general purpose function key, as index 2.\nF20\nThe F20 key, a general purpose function key, as index 20.\nF21\nThe F21 key, a general purpose function key, as index 21.\nF22\nThe F22 key, a general purpose function key, as index 22.\nF23\nThe F23 key, a general purpose function key, as index 23.\nF24\nThe F24 key, a general purpose function key, as index 24.\nF3\nThe F3 key, a general purpose function key, as index 3.\nF4\nThe F4 key, a general purpose function key, as index 4.\nF5\nThe F5 key, a general purpose function key, as index 5.\nF6\nThe F6 key, a general purpose function key, as index 6.\nF7\nThe F7 key, a general purpose function key, as index 7.\nF8\nThe F8 key, a general purpose function key, as index 8.\nF9\nThe F9 key, a general purpose function key, as index 9.\nClear program or content stored as favorite 0. (…\nClear program or content stored as favorite 1. (…\nClear program or content stored as favorite 2. (…\nClear program or content stored as favorite 3. (…\nSelect (recall) program or content stored as favorite 0. (…\nSelect (recall) program or content stored as favorite 1. (…\nSelect (recall) program or content stored as favorite 2. (…\nSelect (recall) program or content stored as favorite 3. (…\nStore current program or content as favorite 0. (…\nStore current program or content as favorite 1. (…\nStore current program or content as favorite 2. (…\nStore current program or content as favorite 3. (…\nThe Final Mode Final key used on some Asian keyboards, to …\nFound on Sun’s USB keyboard.\nOpen the Find dialog. (APPCOMMAND_FIND)\nFn This is typically a hardware key that does not generate …\nThe Function switch Fn key. Activating this key …\nFLock or FnLock. Function Lock key. Found on the Microsoft …\nThe Function-Lock (FnLock or F-Lock) key. Activating this …\nThe Back key. (KEYCODE_BACK)\nThe Home key, which goes to the phone’s main screen. (…\nSwitch to the first character group. (ISO/IEC 9995)\nSwitch to the last character group. (ISO/IEC 9995)\nSwitch to the next character group. (ISO/IEC 9995)\nSwitch to the previous character group. (ISO/IEC 9995)\nToggle display of program or content guide. (VK_GUIDE, …\nIf guide is active and displayed, then display next …\nIf guide is active and displayed, then display previous …\nThe Hangul (Korean characters) Mode key, to toggle between …\nThe Hanja (Korean characters) Mode key.\nThe (Half-Width) Characters key.\nThe Headset Hook key. (KEYCODE_HEADSETHOOK)\nHelp. Not present on standard PC keyboards.\nOpen a help dialog or toggle display of help information. (…\nThe Hibernate key. This key saves the current state of the …\nUse for dedicated ひらがな key found on some Japanese …\nThe Hiragana (Japanese Kana characters) key.\nThe Hiragana/Katakana toggle key. (…\nHome or ↖\nThe Home key, used with keyboard entry, to go to start of …\nThe Hyper key.\nToggle display of information about currently selected …\nInsert or Ins. Not present on Apple keyboards.\nThe Insert (Ins) key, to toggle between text modes for …\nInserts an entry into the <code>Keymap</code>.\nToggle instant replay. (VK_INSTANT_REPLAY)\nLocated between the left Shift and Z keys. Labelled | on a …\nLocated between the / and right Shift keys. Labelled \\ろ (…\nLocated between the = and Backspace keys. Labelled ¥ (yen…\nThe Junja (Korean characters) Mode key.\nJapanese: カタカナ/ひらがな/ローマ字 (…\nThe Kana Mode (Kana Lock) key. This key is used to enter …\nThe Kanji (Japanese name for ideographic characters of …\nUse for dedicated カタカナ key found on some Japanese …\nThe Katakana (Japanese Kana characters) key.\nKey represents the meaning of a keypress.\nThe 11 key found on media numpads that have buttons from 1 …\nThe 12 key found on media numpads that have buttons from 1 …\na on a US keyboard. Labelled q on an AZERTY (e.g., French) …\nb on a US keyboard.\nc on a US keyboard.\nd on a US keyboard.\ne on a US keyboard.\nf on a US keyboard.\ng on a US keyboard.\nh on a US keyboard.\ni on a US keyboard.\nj on a US keyboard.\nk on a US keyboard.\nl on a US keyboard.\nm on a US keyboard.\nn on a US keyboard.\no on a US keyboard.\np on a US keyboard.\nq on a US keyboard. Labelled a on an AZERTY (e.g., French) …\nr on a US keyboard.\ns on a US keyboard.\nt on a US keyboard.\nu on a US keyboard.\nv on a US keyboard.\nw on a US keyboard. Labelled z on an AZERTY (e.g., French) …\nx on a US keyboard.\ny on a US keyboard. Labelled z on a QWERTZ (e.g., German) …\nz on a US keyboard. Labelled w on an AZERTY (e.g., French) …\nNon-standard code value supported by Chromium.\nA keymap that associates key chords with actions.\nAn entry inside of a <code>Keymap</code>.\nAn event used to interact with a <code>Keymap</code> at runtime.\nKorean: HangulMode 한/영 (han/yeong)Japanese (Mac …\nKorean: Hanja 한자 (hanja)Japanese (Mac keyboard): 英数…\nJapanese (word-processing keyboard): Katakana\nJapanese (word-processing keyboard): Hiragana\nJapanese (word-processing keyboard): Zenkaku/Hankaku\nThe Last Number Redial key.\nSometimes labelled My Computer on the keyboard\nSometimes labelled Calculator on the keyboard\nThe first generic “LaunchApplication” key. This is …\nThe second generic “LaunchApplication” key. This is …\nNon-standard code value supported by Chromium.\nThe “Calendar” key. (KEYCODE_CALENDAR)\nThe “Contacts” key. (KEYCODE_CONTACTS)\nNon-standard code value supported by Chromium.\nThe “Mail” key. (APPCOMMAND_LAUNCH_MAIL)\nThe “Media Player” key. (APPCOMMAND_LAUNCH_MEDIA_SELECT…\nThe “Music Player” key.\nThe “Phone” key.\nNon-standard code value supported by Chromium.\nThe “Screen Saver” key.\nThe “Spreadsheet” key.\nThe “Web Browser” key.\nThe “WebCam” key.\nThe “Word Processor” key.\nThe left mouse button.\nLaunch linked content, if available and appropriate. (…\nList the current program. (VK_LIST)\nToggle display listing of currently available live content …\nLock or unlock current content or program. (VK_LOCK)\nThe LogOff key.\nNon-standard code value supported by Chromium.\nOpen an editor to forward the current message. (…\nNon-standard code value supported by Chromium.\nOpen an editor to reply to the current message. (…\nNon-standard code value supported by Chromium.\nSend the current message. (APPCOMMAND_SEND_MAIL)\nToggle between manner mode state: silent, vibrate, ring, …\nShow a list of media applications: audio/video players and …\nAudio track key. (KEYCODE_MEDIA_AUDIO_TRACK)\nClose the current media, for example to close a CD or DVD …\nNon-standard code value supported by Chromium.\nInitiate or continue forward playback at faster than …\nSelect previously selected channel or media. (VK_LAST, …\nNon-standard code value supported by Chromium.\nPause the currently playing media. (APPCOMMAND_MEDIA_PAUSE…\nNon-standard code value supported by Chromium.\nInitiate or continue media playback at normal speed, if …\nToggle media between play and pause states. (…\nNon-standard code value supported by Chromium.\nInitiate or resume recording of currently selected media. (…\nNon-standard code value supported by Chromium.\nInitiate or continue reverse playback at faster than …\nSkip backward to next content or program. (…\nSkip forward to next content or program. (VK_SKIP, …\nStep backward to next content or program. (…\nStep forward to next content or program. (…\nStop media playing, pausing, forwarding, rewinding, or …\nMedia top menu. (KEYCODE_MEDIA_TOP_MENU)\nSeek to next media or program track. (…\nSeek to previous media or program track. (…\nThe Meta key, to enable meta modifier function for …\nThe Windows, ⌘, Command or other OS symbol key.\nThe Windows, ⌘, Command or other OS symbol key.\nNon-standard code value supported by Chromium.\nToggle the microphone on/off. (APPCOMMAND_MIC_ON_OFF_TOGGLE…\nDecrease microphone volume. (…\nMute the microphone. (APPCOMMAND_MICROPHONE_VOLUME_MUTE, …\nIncrease microphone volume. (…\nThe middle mouse button.\n-_ on a US keyboard.\nThe Mode Change key, to toggle between or cycle through …\nThe state of the modifier keys.\nA mouse button.\nData which describes the current state of a mouse button.\nThe current state of the mouse cursor and buttons.\nNavigate in. (KEYCODE_NAVIGATE_IN)\nNavigate to next key. (KEYCODE_NAVIGATE_NEXT)\nNavigate out. (KEYCODE_NAVIGATE_OUT)\nNavigate to previous key. (KEYCODE_NAVIGATE_PREVIOUS)\nOpen a new document or message. (APPCOMMAND_NEW)\nThe Next Candidate function key.\nCycle to next favorite channel (in favorites list). (…\nCycle to next user profile (if there are multiple user …\nJapanese: 無変換 (muhenkan)\nThe NonConvert (“Don’t Convert”) key, to accept …\nThe Notification key. (KEYCODE_NOTIFICATION)\nOn the Mac, the “NumLock” code should be used for the …\nThe NumLock or Number Lock key, to toggle numpad mode …\n0 Ins on a keyboard0 on a phone or remote control\n1 End on a keyboard1 or 1 QZ on a phone or remote control\n2 ↓ on a keyboard2 ABC on a phone or remote control\n3 PgDn on a keyboard3 DEF on a phone or remote control\n4 ← on a keyboard4 GHI on a phone or remote control\n5 on a keyboard5 JKL on a phone or remote control\n6 → on a keyboard6 MNO on a phone or remote control\n7 Home on a keyboard7 PQRS or 7 PRS on a phone or remote …\n8 ↑ on a keyboard8 TUV on a phone or remote control\n9 PgUp on a keyboard9 WXYZ or 9 WXY on a phone or remote …\n+\nFound on the Microsoft Natural Keyboard.\nC or AC (All Clear). Also for use with numpads that have a …\nCE (Clear Entry)\n, (thousands separator). For locales where the thousands …\n. Del. For locales where the decimal separator is “,” …\n/\n=\n# on a phone or remote control device. This key is …\nM+ Add current entry to the value stored in memory.\nMC Clear the value stored in memory.\nMR Replace the current entry with the value stored in …\nMS Replace the value stored in memory with the current …\nM- Subtract current entry from the value stored in memory.\n<em> on a keyboard. For use with numpads that provide </em>…\n( Found on the Microsoft Natural Keyboard.\n) Found on the Microsoft Natural Keyboard.\n<em> on a phone or remote control device. This key is </em>…\n-\nAccess on-demand content or programs. (VK_ON_DEMAND)\nFound on Sun’s USB keyboard.\nOpen an existing document or message. (APPCOMMAND_OPEN)\nAnother mouse button with the associated button number.\nPage Down, PgDn or ⇟\nThe Page Down key, to scroll down or display next page of …\nPage Up, PgUp or ⇞\nThe Page Up key, to scroll up or display previous page of …\nPairing key to pair devices. (KEYCODE_PAIRING)\nFound on Sun’s USB keyboard.\nThe Paste key. (APPCOMMAND_PASTE)\nPause Break\nPause the current state or application (as appropriate).\n.&gt; on a US keyboard.\nMove picture-in-picture window down. (VK_PINP_DOWN)\nMove picture-in-picture window. (VK_PINP_MOVE)\nToggle display of picture-in-picture window. (…\nMove picture-in-picture window up. (VK_PINP_UP)\nPlay or resume the current state or application (as …\nDecrease media playback speed. (VK_PLAY_SPEED_DOWN)\nReset playback to normal speed. (VK_PLAY_SPEED_RESET)\nIncrease media playback speed. (VK_PLAY_SPEED_UP)\nThis key is placed in the function section on some Apple …\nToggle power state. (KEYCODE_POWER)\nThe PowerOff key. Sometime called PowerDown.\nThe Previous Candidate function key.\nPrint the current document or message. (APPCOMMAND_PRINT)\nPrtScr SysRq or Print Screen\nThe Print Screen or SnapShot key, to initiate print-screen …\nNon-standard code value supported by Chromium.\nThe Process key.\nFound on Sun’s USB keyboard.\nThe properties (Props) key.\n’“ on a US keyboard.\nToggle random media or content shuffle mode. (…\nNot a physical key, but this key code is sent when the …\nToggle or cycle between media recording speeds. (…\nRedo the last action. (APPCOMMAND_REDO)\nRemoves an entry from the <code>Keymap</code>.\nToggle RF (radio frequency) input bypass mode (pass RF …\nThe right mouse button.\nThe Roman characters function key.\nSwitch the input mode on an external STB (set top box). (…\nToggle the power on an external STB (set top box). (…\nSave the current document or message. (APPCOMMAND_SAVE)\nToggle scan channels mode. (VK_SCAN_CHANNELS_TOGGLE)\nAdvance display screen mode to next available mode. (…\nScroll Lock\nThe Scroll Lock key, to toggle between scrolling and …\nFound on Sun’s USB keyboard.\nThe Select key.\nNon-standard code value supported by Chromium.\n;: on a US keyboard.\nToggle display of device settings screen. (VK_SETTINGS, …\nThe Shift key, to enable shift modifier function for …\nShift or ⇧\nShift or ⇧\nNon-standard code value supported by Chromium.\nThe Single Candidate function key.\n/? on a US keyboard.\nGeneral purpose virtual function key, as index 1.\nGeneral purpose virtual function key, as index 2.\nGeneral purpose virtual function key, as index 3.\nGeneral purpose virtual function key, as index 4.\n  (space)\nShow correction list when a word is incorrectly …\nToggle between dictation mode and command/control mode. (…\nSpellcheck the current document or selection. (…\nToggle split screen mode. (VK_SPLIT_SCREEN_TOGGLE)\nThe Standby key. This key turns off the display and places …\nToggle display of subtitles, if available. (VK_SUBTITLE)\nThe Super key.\nThe Symbol modifier key (used on some virtual keyboards).\nThe Symbol Lock key.\nSwitch to viewing TV. (KEYCODE_TV)\nTV 3D Mode. (KEYCODE_3D_MODE)\nToggle between antenna and cable input. (…\nAudio description. (KEYCODE_TV_AUDIO_DESCRIPTION)\nAudio description mixing volume down. (…\nAudio description mixing volume up. (…\nContents menu. (KEYCODE_TV_CONTENTS_MENU)\nContents menu. (KEYCODE_TV_DATA_SERVICE)\nSwitch the input mode on an external TV. (KEYCODE_TV_INPUT)\nSwitch to component input #1. (KEYCODE_TV_INPUT_COMPONENT_1…\nSwitch to component input #2. (KEYCODE_TV_INPUT_COMPONENT_2…\nSwitch to composite input #1. (KEYCODE_TV_INPUT_COMPOSITE_1…\nSwitch to composite input #2. (KEYCODE_TV_INPUT_COMPOSITE_2…\nSwitch to HDMI input #1. (KEYCODE_TV_INPUT_HDMI_1)\nSwitch to HDMI input #2. (KEYCODE_TV_INPUT_HDMI_2)\nSwitch to HDMI input #3. (KEYCODE_TV_INPUT_HDMI_3)\nSwitch to HDMI input #4. (KEYCODE_TV_INPUT_HDMI_4)\nSwitch to VGA input #1. (KEYCODE_TV_INPUT_VGA_1)\nMedia context menu. (KEYCODE_TV_MEDIA_CONTEXT_MENU)\nToggle network. (KEYCODE_TV_NETWORK)\nNumber entry. (KEYCODE_TV_NUMBER_ENTRY)\nToggle the power on an external TV. (KEYCODE_TV_POWER)\nRadio. (KEYCODE_TV_RADIO_SERVICE)\nSatellite. (KEYCODE_TV_SATELLITE)\nBroadcast Satellite. (KEYCODE_TV_SATELLITE_BS)\nCommunication Satellite. (KEYCODE_TV_SATELLITE_CS)\nToggle between available satellites. (…\nAnalog Terrestrial. (KEYCODE_TV_TERRESTRIAL_ANALOG)\nDigital Terrestrial. (KEYCODE_TV_TERRESTRIAL_DIGITAL)\nTimer programming. (KEYCODE_TV_TIMER_PROGRAMMING)\nTab or ⇥\nThe Horizontal Tabulation Tab key.\nToggle display of teletext, if available (VK_TELETEXT, …\nFound on Sun’s USB keyboard.\nUndo the last action. (APPCOMMAND_UNDO)\nThis value code should be used when no other value given …\nThis key value is used when an implementation is unable to …\nAdvance video mode to next available mode. (…\nThe Voice Dial key.\nThe WakeUp key. (KEYCODE_WAKEUP)\nCause device to identify itself in some manner, e.g., …\nThe Zenkaku (Full-Width) Characters key.\nThe Zenkaku/Hankaku (full-width/half-width) toggle key. (…\nThe ZoomIn key. (KEYCODE_ZOOM_IN)\nThe ZoomOut key. (KEYCODE_ZOOM_OUT)\nNon-standard code value supported by Chromium.\nToggle between full-screen and scaled content, or alter …\nReturns the action of the keymap entry.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReturns the delta of the mouse cursor position of the …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe horizontal mouse cursor position of the frame.\nThe vertical mouse cursor position of the frame.\nReturns the delta of the mouse cursor position of the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nExports all keymap entries and their associated key chords.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe state of the left mouse button.\nDetermine a <em>charCode</em> value for a key with a character …\nDetermine a <em>keyCode</em> value for a key.\nThe state of the middle mouse button.\nCreates a new keymap.\nCreates a new keymap entry.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nReturns the <code>on_action</code> callback function of the keymap …\nThe position of the mouse cursor when the mouse button was …\nThe position of the mouse cursor when the mouse button was …\nThe hovered entity when the mouse button was last pressed.\nReturns an iterator over every pressed keymap entry.\nThe horizontal mouse cursor position of the previous frame.\nThe vertical mouse cursor position of the previous frame.\nThe hovered entity when the mouse button was last released.\nThe intersection of a source flags value with the …\nThe state of the right mouse button.\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe state of the mouse button (pressed/released).\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nAutomatically determine the value.\nRepresents an axis-aligned bounding box.\nStack child elements vertically.\nBitflag representing whether the bounds of a view has …\nThe layout type determines how the nodes will position its …\nNode is positioned relative to parent and in-line with …\nA percentage of the parent dimension.\nA number of logical pixels.\nThe position type determines whether a node will be …\nStack child elements horizontally.\nNode is positioned relative to parent but ignores its …\nA factor of the remaining free space.\nUnits which describe spacing and size.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nBottom side of bounds.\nBottom left point of bounds.\nBottom right point of bounds.\nHorizontal and vertical center of bounds.\nBottom center of bounds.\nLeft center of bounds.\nRight center of bounds.\nTop center of bounds.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nExpands by some <code>amount</code> in both directions and returns a …\nExpands by some <code>amount</code> horizontally and returns a new …\nExpands by some <code>amount</code> vertically and returns a new …\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nConstruct a <code>BoundingBox</code> from checked minimum and maximum …\nGet a flags value with the bits of a flag with the given …\nBounds height equivalent to <code>h</code>.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nReturns true if the value is auto.\nWhether all bits in this flags value are unset.\nReturns true if the value is a percentage.\nReturns true if the value is in pixels.\nReturns true if the value is a stretch factor.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nLeft side of bounds equivalent to <code>x</code>.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nRight side of bounds.\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nShrinks by some <code>amount</code> in both directions and returns a …\nShrinks by some <code>amount</code> horizontally and returns a new …\nShrinks each side by the given separate amounts and …\nShrinks by some <code>amount</code> vertically and returns a new …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReturns the units converted to pixels or a provided …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nTop of bounds equivalent to <code>y</code>.\nTop left point of bounds.\nTop right point of bounds.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nBounds width equivalent to <code>w</code>.\nRepresents an axis-aligned bounding box.\nA type which formats a localized message with any number …\nAdd a variable argument binding to the Localized type.\nAdd a constant argument to the Localized type.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSets a mapping function to apply to the translated text.\nCreates a new Localized type with a given key.\nA trait implemented by application data in order to …\nBuild the model data into the application tree.\nRespond to events in order to mutate the model data.\nModifiers for changing the abilities of a view.\nModifiers for changing the accessibility properties of a …\nModifiers which add an action callback to a view.\nModifiers for changing the layout properties of a view.\nModifiers for changing the style properties of a view.\nModifiers for changing the text properties of a view.\nSets the backdrop filter for the view.\nSets the background color of the view.\nSets the border color of the view.\nSets the border color of the view.\nSets the border width of the view.\nSets the space on the bottom side of the view.\nSets the ext caret color of the view.\nSets whether the view can be checked.\nSets the checked state of the view.\nSets the space between the bottom side of the view and the …\nSets the space between the left side of the view and the …\nSets the space between the right side of the view and the …\nSets the space between the vew and its children.\nSets the space between the top side of the view and the …\nAdds a class name to the view.\nSets the clip path for the the view.\nSets the space between the views children in a horizontal …\nSets the text color of the view.\nSets the corner radius for the bottom-left corner of the …\nSets the corner corner shape for the bottom-left corner of …\nSets the corner smoothing for the bottom-left corner of …\nSets the corner radius for the bottom-right corner of the …\nSets the corner corner shape for the bottom-right corner …\nSets the corner smoothing for the bottom-right corner of …\nSets the corner radius for all four corners of the view.\nSets the corner shape for all four corners of the view.\nSets the corner smoothing for all four corners of the view.\nSets the corner radius for the top-left corner of the view.\nSets the corner corner shape for the top-left corner of …\nSets the corner smoothing for the top-left corner of the …\nSets the corner radius for the top-right corner of the …\nSets the corner corner shape for the top-right corner of …\nSets the corner smoothing for the top-right corner of the …\nSets the mouse cursor used when the view is hovered.\nSets the accessibility default action for the view.\nSets the view to be disabled.\nSets whether the view should be positioned and rendered.\nSets whether the view can be focused to receive keyboard …\nSets the focused state of the view.\nSets the font that should be used by the view.\nSets the font size of the view.\nSets the font style that should be used by the view.\nSets the font variation settings that should be used by …\nSets the font weight that should be used by the view.\nSets the font stretch that should be used by the view if …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSets the height of the view.\nSets whether the view should be hidden from accessibility.\nSets whether the view can be hovered by the mouse and …\nSets the ID name of the view.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the layout type of the view.\nSets the space on the left side of the view.\nSets the max number of .\nSets whether the view should act as an accessibility live …\nSets the maximum bottom space of the view.\nSets the maximum height of the view.\nSets the maximum left space of the view.\nSets the maximum right space of the view.\nSets the maximum width and maximum height of the view.\nSets the maximum space for all sides of the view.\nSets the maximum top space of the view.\nSets the maximum width of the view.\nSets the minimum bottom space of the view.\nSets the minimum height of the view.\nSets the minimum left space of the view.\nSets the minimum right space of the view.\nSets the minimum width and minimum height of the view.\nSets the minimum space for all sides of the view.\nSets the minimum top space of the view.\nSets the minimum width of the view.\nDerived lenses for <code>ModalModel</code>.\nSets the accessibility name of the view.\nSets whether the view can be navigated to, i.e. focused, …\nSets the accessibility numeric value for the view.\nAdds a callback which is performed when the the view …\nAdds a callback which is performed when the view gains …\nAdds a callback which is performed when the view loses …\nAdds a callback which is performed when the the view …\nAdds a callback which is performed when the mouse pointer …\nAdds a callback which is performed when the mouse pointer …\nAdds a callback which is performed when a mouse button is …\nAdds a callback which is performed when the mouse pointer …\nAdds a callback which is performed when a mouse button is …\nAdds a callback which is performed when the mouse pointer …\nAdds a callback which is performed when the mouse pointer …\nAdds a callback which is performed when the the view …\nAdds a callback which is performed when the the view …\nSets the opacity of the view.\nSets the outline color of the view.\nSets the outline offset of the view.\nSets the outline width of the view.\nSets the overflow behavior of the view in the horizontal …\nSets the overflow behavior of the view in the vertical …\nSets whether the view can be become the target of pointer …\nSets the position type of the view.\nSets the space on the right side of the view.\nSets the accessibility role of the view.\nSets the angle of rotation for the view.\nSets the space between the views children in a vertical …\nSets the scale of the view.\nSets the color used to highlight selected text within the …\nAdd a shadow to the view.\nSets the width and height of the view.\nSets the space for all sides of the view.\nSets the text content of the view.\nSets the horizontal alignment of text within the view.\nSets the max number of .\nSets the text overflow.\nSets the accessibility text value for the view.\nSets whether the text of the view should be allowed to …\nSets whether a view should have the given class name.\nSets the space on the top side of the view.\nSets the transform of the view with a list of transform …\nSets the transform origin of the the view.\nSets the translation offset of the view.\nSets whether the view should be rendered.\nSets the width of the view.\nSets the z-index of the view.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLens for the field <code>menu_visible</code> on <code>ModalModel</code>.\nCreates a new lens for the field <code>tooltip_visible</code> on …\nCreates a new lens for the field <code>menu_visible</code> on <code>ModalModel</code>…\nLens for the whole <code>ModalModel</code> struct.\nLens for the field <code>tooltip_visible</code> on <code>ModalModel</code>.\nAn ID used to reference images in the resource manager.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIndicates an alias or shortcut is to be created.\nIndicates something can be scrolled/panned in any …\nA value representing an angle expressed in degrees, …\nAn arrow which is usually also the default cursor icon.\nThe entity will receive pointer events unless its parent …\nThe bevel border corner shape.\n900\n700,\nThe keyword of a single border style.\nThe ‘bottom’ horizontal position keyword.\nIndicates the table cell or set of cells can be selected.\n<code>center</code>\n<code>center</code>\nThe inline contents are centered within the line box.\nCharacter unit.\nThe text is clipped and not accessible.\nCentimeters.\nIndicates a column can be resized horizontally.\nA color value.\nIndicates a context menu is available.\nIndicates something is to be copied.\nThe shape the default view drawing algorithm should use …\nIndicates selection.\nThe ‘currentcolor’ keyword.\nAn icon of a cursor.\nSpecifies a dashed border.\nA series of square-ended dashes.\nThe platform-dependent default cursor. Typically an arrow.\nAn angle expressed in degrees.\nDetermines whether an entity will be rendered and acted on …\nSpecifies a dotted border.\nA series of round dots.\nTwo parallel solid lines with some space between them.\nIndicates something can be resized or moved east.\nRenders an ellipsis (“…”) to represent the clipped …\nem.\nThe same as right if direction is left-to-right and left …\nIndicates something can be resized or moved horizontally.\nex.\n950\n800\n200\nThe entity will be rendered and acted on by the layout …\nA font size value.\nA font weight value.\nA font weight keyword corresponding to a specific font …\nA font stretch value.\nIndicates something can be grabbed and moved around.\nIndicates something is being grabbed and moved around.\nAn angle expressed in gradians.\nIndicates something clickable like a link.\nIndicates help information is available.\nThe overflow is clipped and the content can only be …\nThe entity will not rendered, but will still be acted upon …\nA horizontal position keyword.\nInches.\nThe inline contents are justified. Text should be spaced …\nThe ‘left’ horizontal position keyword.\nThe inline contents are aligned to the left edge of the …\n<code>&lt;length-percentage&gt;</code>\n<code>&lt;length-percentage&gt;</code>\nA length or a percentage value.\nA length value.\n300\nA 2D matrix.\nA 2D matrix transform.\n500\nMillimeters.\nIndicates something is to be moved.\nIndicates something can be resized or moved north.\nIndicates something can be resized or moved north-east.\nIndicates something can be resized or moved diagonally …\nIndicates an item may not be dropped at the current …\nSpecifies no border.\nNo cursor is rendered.\nThe entity will not be rendered and acted on by the layout …\nThe entity will not receive pointer events.\nIndicates the requested action will not be carried out.\nIndicates something can be resized or moved vertically.\nIndicates something can be resized or moved north-west.\nIndicates something can be resized or moved diagonally …\nAn opacity value in the range of 0 to 1.\nDetermines how to deal with content that overflows the …\nEach line of text has a line over it.\nThe amount of pixels per centimeter.\nThe amount of pixels per inch.\nThe amount of pixels per millimeter.\nThe amount of pixels per pica.\nThe amount of pixels per point.\nThe amount of pixels per quarter-millimeter.\nPicas.\nDetermines whether an entity will receive pointer events.\nIndicates the program is busy in the background, but the …\nPoints.\nPixels.\nQuarter.\nLayout system flag.\nA color with red, green, blue, and alpha components, in a …\nA RGBA color value.\nAn angle expressed in radians.\nRoot em.\nThe ‘right’ horizontal position keyword.\nThe inline contents are aligned to the right edge of the …\nA 2D rotation.\nThe round border corner shape.\nIndicates a row can be resized vertically.\nIndicates something can be resized or moved south.\nA scale defining a scale value on the x and the y axis.\nA 2D scale.\nA scale in the X direction.\nA scale in the Y direction.\nIndicates something can be resized or moved south-east.\n600\nA box shadow adding a shadow effect around an element’s …\n<code>&lt;side&gt; &lt;length-percentage&gt;?</code>\n<code>&lt;side&gt; &lt;length-percentage&gt;?</code>\nA 2D skew.\nA skew along the X axis.\nA skew along the Y axis.\nSpecifies a solid border.\nA single line segment.\nThe same as left if direction is left-to-right and right …\nEach line of text has a line through the middle.\nStores the style properties of all entities in the …\nIndicates something can be resized or moved south-west.\nIndicates the text can be selected.\nDetermines how overflowed content that is not displayed …\nDetermines how overflowed content that is not displayed …\n100\nThe ‘top’ horizontal position keyword.\nAn individual transform function.\nDefines a transition that allows to change property values …\nA translate defining a translate value on the x and the y …\nA 2D translation.\nA translation in the X direction.\nA translation in the Y direction.\nAn angle expressed in turns.\nEach line of text is underlined.\nA vertical position keyword.\nIndicates the vertical text can be selected.\nView height.\nDetermines whether an entity will be rendered.\nThe overflow is not clipped and renders outside of the …\nThe entity will be rendered.\nViewport maximum.\nViewport minimum.\nView width.\nIndicates something can be resized or moved west.\nIndicates the program is busy in the background and the …\nA wavy line.\nIndicates something can be zoomed in.\nIndicates something can be zoomed out.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nThe alpha component.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe blue component.\nThe blur radius used for making the box shadow bigger and …\nThe color of the box shadow.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nThe delay of the transition.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe duration of the transition.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nReturn a new RGBA from the Color\nThe green component.\nCreates a new RGBA from HSL values.\nCreates a new RGBA from HSLA values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nDetermines if the box shadow should be an outer shadow …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nFunction to convert logical points to physical pixels.\nCreates a new 2D matrix.\nCreates a new scale.\nCreates a new shadow.\nCreates a new transition.\nCreates a new translation.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nFunction to convert physical pixels to logical points.\nA list of properties affected by transition.\nThe red component.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nCreates a new RGBA from RGB values\nCreates a new RGBA from RGB values\nCreates a new RGBA from RGBA values\nCreates a new RGBA from RGBA values\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe spread radius used for expanding and growing the box …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReturns the amount of pixels of the length if …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe scale value on the x axis.\nThe translate value on the x axis.\nThe horizontal offset of the box shadow.\nThe scale value on the y axis.\nThe translate value on the y axis.\nThe vertical offset of the box shadow.\npixel with a half float for alpha\npixel with a little endian uint16_t for alpha\npixel with 4 bits for alpha, red, green, blue; in 16-bit …\npixel with alpha in 8-bit byte\nRepresents an arc along an oval boundary, or a closed …\npixel with 10 bits each for blue, green, red; in 32-bit …\npixel with 10 bits each for blue, green, red; in 32-bit …\npixel with 10 bits each for blue, green, red, alpha; in …\n10 bits for blue, green, red; 2 bits for alpha; in 32-bit …\npixel with 8 bits for blue, green, red, alpha; in 32-bit …\n<code>Bitmap</code> describes a two-dimensional raster pixel array. …\nBlender represents a custom blend function in the Skia …\nReflected across x-axis\nRotated 180\n<code>Canvas</code> provides an interface for drawing, and how the …\n<code>ColorTable</code> holds the lookup tables for each channel (ARGB) …\nSpecify <code>b</code> and <code>c</code> (each between 0…1) to create a shader …\nThese values match the orientation …\nTrait representing encoded text.\npixel with grayscale level in 8-bit byte\nWraps a native type that can be represented in Rust memory.\n<code>Image</code> describes a two dimensional array of pixels to draw. …\nRotated 90 CCW\nReflected across x-axis, Rotated 90 CCW\nThe maximum number of points an iterator will return for …\nMaskFilter is the base class for object that perform …\nRepresents a <code>Canvas</code> that is owned and dropped when it goes …\nImplement this trait to use a pixel type in …\npixel with a little endian uint16_t for red, green, blue …\npixel with a half float for red and green\npixel with a little endian uint16_t for red and green\npixel with a uint8_t for red and green\nA wrapper type represented by a reference counted pointer …\npixel with 10 bits each for red, green, blue; in 32-bit …\npixel with 5 bits red, 6 bits green, 5 bits blue, in …\npixel with 8 bits each for red, green, blue; in 32-bit word\n10 bits for red, green, blue; 2 bits for alpha; in 32-bit …\npixel with 10 used bits (most significant) followed by 6 …\npixel with 8 bits for red, green, blue, alpha; in 32-bit …\npixel with half floats for red, green, blue, alpha in …\npixel with half floats in <code>[0,1]</code> for red, green, blue, …\npixel using C float for red, green, blue, alpha; in …\nA wrapper type that represents a native type with a …\nReflected across x-axis, Rotated 90 CW\nRotated 90 CW\n<code>Surface</code> is responsible for managing the pixels that a …\nDefault\nReflected across y-axis\nuninitialized\nSpecifies the structure of planes for a YUV image with …\nYUVAInfo combined with per-plane ColorTypes and row bytes. …\nHelper to store Pixmap planes as described by a …\nAppends arc to <code>Path</code>, as the start of new contour. Arc …\nAdds circle centered at (x, y) of size radius to <code>Path</code>, …\nExperimental, subject to change or removal.\nAdds oval to <code>Path</code>, appending <code>Verb::Move</code>, four <code>Verb::Conic</code>, …\nAppends src to <code>Path</code>, offset by <code>(d.x, d.y)</code>.\nAppends src to <code>Path</code>, transformed by matrix. Transformed …\nAdds contour created from line array, adding <code>pts.len() - 1</code> …\nAdds a new contour to the path, defined by the rect, and …\nAppends <code>RRect</code> to <code>Path</code>, creating a new closed contour. <code>RRect</code>…\nAdds rrect to <code>Path</code>, creating a new closed contour. If dir …\nAll legal combinations of PlaneConfig and DataType are …\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nSets <code>ImageInfo</code> to width, height, and native color type; …\nAllocates pixel memory with HeapAllocator, and replaces …\nSets <code>ImageInfo</code> to info following the rules in <code>set_info()</code> …\nSets <code>ImageInfo</code> to info following the rules in <code>set_info()</code> …\nAllocate space for pixmaps’ pixels in the YUVAPixmaps.\nReturns <code>AlphaType</code>.\nReturns the approximate byte size of the <code>Path</code> in memory.\nReturns the approximate bounds that would result from …\nAppends arc to <code>Path</code>. Arc added is part of ellipse bounded …\nAppends arc to <code>Path</code>. Arc is implemented by one or more …\nAppends arc to <code>Path</code>, after appending line if needed. Arc …\n<code>arithmetic()</code>\nReturns a new image from the bitmap. If the bitmap is …\nTreat a <code>&amp;[u16]</code> as UTF16 encoded text.\nTreat a <code>&amp;[u32]</code> as UTF32 encoded text.\nRetrieves the back-end texture. If <code>Image</code> has no back-end …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\n<code>blur()</code>\nCreate a blur mask filter.\nThe y coordinate of the rectangle’s bottom edge.\nThe y coordinate of the rectangle’s bottom edge.\nReturns minimum and maximum axes values of <code>Point</code> array. …\nReturns <code>IRect { 0, 0, width(), height() }</code>.\nReturns <code>IRect</code> <code>{ 0, 0, width(), height() }</code>.\nAccess the underlying pixels as a byte array. This is a …\nReturns number of bytes per pixel required by <code>ColorType</code>.\nReturns <code>true</code> if the handle can be sent to another thread.\nReturns <code>Canvas</code> that draws into <code>Surface</code>. Subsequent calls …\nAppends <code>Verb::Close</code> to <code>Path</code>. A closed contour connects the …\n<code>color_filter()</code>\nReturns <code>ColorSpace</code>, the range of colors, associated with …\nReturns a smart pointer to <code>ColorSpace</code>, the range of …\nReturns <code>ColorType</code> if known; otherwise, returns …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\n<code>compose()</code>\nConstruct a color filter whose effect is to first apply …\nReturns minimum memory required for pixel storage. Does …\nReturns <code>true </code>if all pixels are opaque. <code>ColorType</code> …\nReturns minimum and maximum axes values of the lines and …\nDetermine size to allocate for all planes. Optionally …\nGiven a per-plane row bytes, determine size to allocate …\nAdds conic from last point towards (x1, y1), to (x2, y2), …\nReturns <code>true</code> if rect is contained by <code>Path</code>. May return <code>false</code>…\nReturns <code>true</code> if the point <code>(p.x, p.y)</code> is contained by <code>Path</code>, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nChecks if a given text blob contains colored font or bitmap\nChecks if a given text blob contains glyph with emoji\nApproximates conic with quad array. Conic is constructed …\nReturns the number of points in <code>Path</code>. <code>Point</code> count is …\nReturns the number of verbs: <code>Verb::Move</code>, <code>Verb::Line</code>, …\n<code>crop()</code>\nAdds cubic from last point towards (x1, y1), then towards …\nThe per-YUV<code>[A]</code> channel data type.\n1..31\n0..6, 0==Sunday\nCreates an empty <code>Canvas</code> with no backing device or pixels, …\nDefaults to nothing supported.\nSee <code>Self::new()</code>\nSee <code>Bitmap::new()</code>.\nReturns a copy of this path in the current state, and …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\n<code>dilate()</code>\nReturns <code>ISize { width(), height() }</code>.\nDimensions of the full resolution image (after planes have …\nReturns <code>ISize</code> <code>{ width(), height() }</code>.\nrust-skia helper, not in Skia\n<code>displacement_map()</code>\n<code>distant_lit_diffuse()</code>\n<code>distant_lit_specular()</code>\nDraws <code>Surface</code> contents to canvas, with its top-left corner …\nReturns <code>true</code> if <code>width()</code> or <code>height()</code> are zero, or if …\nDraws saved layers, if any. Frees up resources used by …\nSee <code>Path::dump_as_data()</code>\nWrites text representation of <code>Path</code> to <code>Data</code>. Set <code>dump_as_hex</code>…\nSee <code>Path::dump_as_data()</code>\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nUpdate to add support for pixmaps with <code>num_channels</code> …\nSee <code>Self::encode_to_data_with_quality</code>\nEncodes <code>Image</code> pixels, returning result as <code>Data</code>.\nEncodes <code>Image</code> pixels, returning result as <code>Data</code>.\nReturns encoded <code>Image</code> pixels as <code>Data</code>, if <code>Image</code> was created …\nReplaces pixel values inside area with c. interpreted as …\nReplaces pixel values inside area with c. interpreted as …\nReplaces pixel values with unpremultiplied color built …\nReplaces pixel values with <code>c</code>, interpreted as being in the …\nReplaces pixel values with <code>c</code>, interpreted as being in the …\n<code>erode()</code>\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nSets dst to alpha described by pixels. Returns <code>false</code> if <code>dst</code>…\nShares <code>PixelRef</code> with <code>dst</code>. Pixels are not copied; <code>Bitmap</code> …\nReturns <code>PathFillType</code>, the rule used to fill <code>Path</code>.\nConverts the src color (in src colorspace), into the dst …\nSee <code>Self::flush_with_info()</code>\nVersion of <code>flush()</code> that uses a default <code>gpu::FlushInfo</code>. …\nFlushes any pending uses of texture-backed images in the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates <code>Image</code> from <code>backend_texture</code> associated with …\nWraps a GPU-backed buffer into <code>Surface</code>. Caller must ensure …\nWraps a GPU-backed texture into <code>Surface</code>. Caller must …\nCreates <code>Image</code> from bitmap, sharing or copying bitmap …\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nUse storage in Data as backing store for pixmaps’ …\nLike above but uses …\nSee <code>Self::from_encoded_with_alpha_type()</code>\nReturn an image backed by the encoded data, but attempt to …\nUse passed in memory as backing store for pixmaps’ …\nWraps existing <code>Pixmap</code>s. The YUVAPixmaps will have no …\nCreate a new <code>Data</code> referencing the file with the specified …\nCreates <code>Image</code> from data returned by <code>image_generator</code>. …\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nSee <code>Self::from_picture_with_props()</code>\n<code>self::picture()</code>\nCreates <code>Image</code> from picture. Returned <code>Image</code> width and …\nCreates <code>Image</code> from <code>ImageInfo</code>, sharing pixels.\nAttempt to read size bytes into a <code>Data</code>. If the read …\nCreates <code>Image</code> from GPU texture associated with context. …\nCreates <code>Image</code> from <code>crate::YUVAPixmaps</code>.\nCreates an <code>Image</code> from <code>YUV[A]</code> planar textures. This …\nReturns a unique value corresponding to the pixels in …\n(See Skia bug 1762.) Returns a non-zero, globally unique …\nReturns unique value identifying the content of <code>Surface</code>. …\nReturns the visible text on the line (excluding a possible …\nReturns pixel address at <code>(x, y)</code>.\nLook up the pixel at <code>(x,y)</code> and return its alpha component, …\nRetrieves the back-end render target. If <code>Surface</code> has no …\nRetrieves the back-end texture. If <code>Surface</code> has no back-end …\nFinds the closest glyph cluster for a visual text position\nFinds the information associated with the closest glyph to …\nReturns pixel at <code>(x, y)</code> as unpremultiplied color. Returns …\nReturns pixel at <code>(x, y)</code> as unpremultiplied color. Returns …\nReturns the font that is used to shape the text at the …\nReturns the font used to shape the text at the given …\nReturns the information about all the fonts used to shape …\nFinds a glyph cluster for text index\nRetrieves the information associated with the glyph …\nReturns the index of the glyph that corresponds to the …\nReturns line metrics info for the line\nFinds the line number of the line that contains the given …\nFinds the line number of the line that contains the given …\nReturns path for a text blob\nReturns path for a given line\nReturns <code>Point</code> at index in <code>Point</code> array. Valid range for …\nReturns number of points in <code>Path</code>. Up to max points are …\nReturns a vector of bounding boxes that enclose all text …\nReturns the bounds of this bitmap, offset by its <code>PixelRef</code> …\nReturns the number of verbs in the path. Up to max verbs …\nFinds the first and last glyphs that define a word …\nPreserves <code>Canvas::save()</code> count. Optionally saves <code>Canvas</code> …\nReturns <code>true</code> if the image has mipmap levels.\nReturns pixel row count.\nReturns pixel row count; may be zero or greater.\nReturns pixel row count.\n0..23\nReturns iff this shader is backed by a single <code>Image</code>. If …\nReturns an <code>ImageInfo</code> describing the surface.\nReturns a <code>ImageInfo</code> describing the width, height, color …\nReturns <code>Image</code> capturing <code>Surface</code> contents. Subsequent …\nLike the no-parameter version, this returns an image of …\nGrows <code>Path</code> verb array and <code>Point</code> array to contain …\nGrows <code>Path</code> verb array and <code>Point</code> array to contain …\nReturns width, height, <code>AlphaType</code>, ColorType, and <code>ColorSpace</code>…\nTakes an allocation that is assumed to be at least […\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nSets <code>ImageInfo</code> to info following the rules in <code>set_info()</code>, …\nInterpolates between <code>Path</code> with <code>Point</code> array of equal size. …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nReturns <code>true</code> if <code>Image</code> pixels represent transparency only. …\nReturns <code>true</code> if the filter is guaranteed to never change …\nReturns <code>true</code> if path is representable as an oval arc. In …\nReturns <code>true</code> if the path is convex. If necessary, it will …\nTests if cubic is degenerate. Cubic with no length or that …\nReturns if <code>Path</code> is empty. Empty <code>Path</code> may have FillType but …\nReturns <code>true</code> if either <code>width()</code> or <code>height()</code> are zero.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nReturns <code>true</code> for finite <code>Point</code> array values between …\nReturns <code>true</code> if pixels can not change.\nReturns <code>true</code> if <code>Path</code> contain equal verbs and equal weights.\nReturns if FillType describes area outside <code>Path</code> geometry. …\nReturns if contour is closed. Contour is closed if <code>Path</code> …\nReturns <code>true</code> if <code>Image</code> is backed by an image-generator or …\nReturns <code>true</code> if <code>Path</code> contains only one line; <code>Verb</code> array …\nTests if line between <code>Point</code> pair is degenerate. Line with …\nReturns <code>true</code> if <code>PixelRef</code> is <code>None</code>.\nReturns <code>true</code> if <code>AlphaType</code> is set to hint that all pixels …\nReturns <code>true</code> if pixels ignore their alpha value and are …\nReturns <code>true</code> if the shader is guaranteed to produce only …\nReturns <code>true</code> if this path is recognized as an oval or …\nTests if quad is degenerate. Quad with no length or that …\nReturns <code>true</code> if <code>Bitmap</code> can be drawn.\nReturns <code>Some(Rect, bool, PathDirection)</code> if <code>Path</code> is …\nReturns <code>true</code> if path is representable as <code>RRect</code>. Returns …\nIs this valid and does it use color types allowed by the …\nReturns <code>true</code> if the contents of <code>Image</code> was created on or …\nReturns if <code>Path</code> data is consistent. Corrupt <code>Path</code> data is …\nReturns <code>true</code> if <code>Image</code> can be drawn on either raster …\nReturns <code>true</code> if the path is volatile; it will not be …\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nReturns last point on <code>Path</code>. Returns <code>None</code> if <code>Point</code> array is …\nThe x coordinate of the rectangle’s left edge.\nThe x coordinate of the rectangle’s left edge.\nAdds line from last point to (x, y). If <code>Path</code> is empty, or …\n<code>magnifier()</code>\nCreates <code>Image</code> in target <code>ColorSpace</code>. Returns <code>None</code> if <code>Image</code> …\nReturns raster image or lazy image. Copies <code>Image</code> backed by …\nReturns raster image. Copies <code>Image</code> backed by GPU texture …\nReturns subset of this image.\n<code>true</code> if the type matches the color type’s format.\n<code>matrix_convolution()</code>\n<code>merge()</code>\n0..59\nCreate a blender that implements the specified <code>BlendMode</code>.\n1..12\nAdds beginning of contour at <code>Point</code> (x, y).\nMacro to mark a Rust type as NativeTransmutable and test …\nConstructs a native Strings array from a slice of …\nInitializes the YUVAPixmapInfo from a YUVAInfo with …\nInitializes a YUVABackendTextureInfo to describe a set of …\n<code>dimensions</code> should specify the size of the full resolution …\nConstructs an empty <code>Path</code>. By default, <code>Path</code> has no verbs, …\nCreates an empty <code>Bitmap</code> without pixels, with …\nCreates a new <code>ColorTable</code> with ‘table’ used for all …\nConstructs Data from a given byte slice without copying it.\nSee <code>Self::new_color_space_with_context</code>\nCreates <code>Image</code> in target <code>ColorSpace</code>. Returns <code>None</code> if <code>Image</code> …\nCreates <code>Image</code> from pixmap. <code>Image</code> is uploaded to GPU …\nConstructs Data from a &amp;CStr by copying its contents.\nCreate a new path with the specified segments.\nReturns <code>Surface</code> without backing pixels. Drawing to <code>Canvas</code> …\nAllocates raster <code>Surface</code>. <code>Canvas</code> returned by <code>Surface</code> draws …\nAllocates raster <code>Surface</code>. <code>Canvas</code> returned by <code>Surface</code> draws …\nCreates a CPU-backed <code>Image</code> from compressed data.\nAllocates raster <code>Surface</code>. <code>Canvas</code> returned by <code>Surface</code> draws …\nReturns <code>Surface</code> on GPU indicated by context. Allocates …\nConstructs Data from a copy of a &amp;str.\nSee <code>Self::new_subset_with_context</code>\nReturns subset of this image.\nReturns a compatible <code>Surface</code>, or <code>None</code>. Returned <code>Surface</code> …\nCalls <code>Self::new_surface()</code> with the same <code>ImageInfo</code> as this …\nCreates a GPU-backed <code>Image</code> from compressed data.\nSee <code>Self::new_texture_image_budgeted</code>\nReturns <code>Image</code> backed by GPU texture associated with …\nCreates filtered <code>Image</code>. filter processes original <code>Image</code>, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nNotifies that <code>Surface</code> contents will be changed by code …\nMarks that pixels in <code>PixelRef</code> have changed. Subsequent …\nNumber of pixmap planes.\nThe number of Pixmap planes.\nThe number of crate::Pixmap planes.\nOffsets <code>Point</code> array by <code>(d.x, d.y)</code>. <code>Path</code> is replaced by …\n<code>offset()</code>\nBounds of oval containing the arc.\nCopies <code>Bitmap</code> pixel address, row bytes, and <code>ImageInfo</code> to …\nCopies <code>Image</code> pixel address, row bytes, and <code>ImageInfo</code> to …\nReturns <code>PixelRef</code>, which contains: pixel base address; its …\nReturns origin of pixels within <code>PixelRef</code>. <code>Bitmap</code> bounds is …\nAccess the underlying pixels. This is a rust-skia specific …\nReturns pixel address, the base address corresponding to …\nReturns a constant reference to the <code>Pixmap</code> holding the …\nGet the ith Pixmap plane. <code>Pixmap</code> will be default …\nReturns the dimensions for each plane. Dimensions are as …\nFormat of the ith plane, or <code>None</code> if <code>i &gt;= Self::num_planes()</code>\nAll plane formats.\nImage info for the ith plane, or <code>None</code> if <code>i</code> &gt;= …\nAn iterator of all planes’ image infos.\nAccess the Pixmap planes.\n<code>point_lit_diffuse()</code>\n<code>point_lit_specular()</code>\nThe number of points an iterator will return for the verb.\nReturns <code>SurfaceProps</code> for surface.\nAdds quad from last point towards (x1, y1), to (x2, y2). …\nAppends arc to <code>Path</code>, relative to last <code>Path</code> <code>Point</code>. Arc is …\nAdds conic from last point towards vector (dx1, dy1), to …\nAdds cubic from last point towards vector (dx1, dy1), then …\nAdds line from last point to vector (dx, dy). If <code>Path</code> is …\nAdds beginning of contour relative to last point. If <code>Path</code> …\nAdds quad from last point towards vector (dx1, dy1), to …\nCopies a <code>crate::Rect</code> of pixels from <code>Bitmap</code> to <code>dst_pixels</code>. …\nSee <code>Self::read_pixels_with_context()</code>\nCopies <code>crate::Rect</code> of pixels from <code>Canvas</code> into <code>dst_pixels</code>.\nCopies <code>crate::Rect</code> of pixels from <code>Surface</code> into bitmap.\nSee <code>Self::read_pixels_to_pixmap_with_context()</code>\nCopies <code>crate::Rect</code> of pixels to dst.\nCopies a <code>crate::Rect</code> of pixels from <code>Image</code> to dst. Copy …\nCopies <code>crate::Rect</code> of pixels from <code>Image</code> to <code>dst_pixels</code>. …\nReturns the recording context being used by the <code>Surface</code>.\nCreates a new <code>Image</code> identical to this one, but with a …\nNotify that the borrowed dependency is not referred to …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nIf the surface was made via <code>Self::from_backend_texture</code> …\nIf the surface was made via <code>Self::from_backend_texture()</code> …\nSets <code>Path</code> to its initial state. Removes verb array, <code>Point</code> …\nResets to its initial state; all fields are set to zero, …\nIf a surface is GPU texture backed, is being drawn with …\nAppends src to <code>Path</code>, from back to front. Reversed src …\nSets <code>Path</code> to its initial state, preserving internal …\nThe x coordinate of the rectangle’s right edge.\nThe x coordinate of the rectangle’s right edge.\nReturns row bytes, the interval from one pixel row to the …\nRow bytes for the ith plane. Returns <code>None</code> if <code>i</code> &gt;= …\nReturns number of pixels that fit on row. Should be …\nRow bytes for all planes.\nCopies <code>Image</code> to dst, scaling pixels to fit <code>dst.width()</code> and …\n0..59\nReturns a mask, where each set bit corresponds to a …\nWrites <code>Path</code> to buffer, returning the buffer written to, …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nSets <code>AlphaType</code>, if <code>alpha_type</code> is compatible with <code>ColorType</code>…\nSets the <code>ColorSpace</code> associated with this <code>Bitmap</code>.\nSets FillType, the rule used to fill <code>Path</code>. While there is …\nThe contents of the <code>crate::FontArguments</code> will be copied …\nSets internal flag to mark <code>Bitmap</code> as immutable. Once set, …\nSets width, height, <code>AlphaType</code>, ColorType, <code>ColorSpace</code>, and …\nSpecifies whether <code>Path</code> is volatile; whether it will be …\nSets the last point on the path. If <code>Point</code> array is empty, …\nReplaces <code>pixel_ref</code> and origin in <code>Bitmap</code>. <code>offset</code> specifies …\nReturns bit shift converting row bytes to row pixels.\nReturns a copy of this path in the current state.\n<code>spot_lit_diffuse()</code>\n<code>spot_lit_specular()</code>\nAngle in degrees where the arc begins. Zero means …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nChecks whether there is a supported combination of color …\nSwaps the fields of the two bitmaps.\nExchanges the verb array, <code>Point</code> array, weights, and …\nReturn <code>true</code> if the encoded origin includes a 90 degree …\nSweep angle in degrees; positive is clockwise.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReturns an approximation of the amount of texture memory …\n<code>tile()</code>\nThe number of minutes that this is ahead of or behind UTC.\nIf the filter can be represented by a 5x4 matrix, this …\nIf the filter can be represented by a source color plus …\nGiven an width and height of the source data, returns a …\nReturns raster image or lazy image. Copies <code>Image</code> backed by …\nReturns raster image. Copies <code>Image</code> backed by GPU texture …\n<code>to_raw_shader</code> functions like <code>to_shader</code>, but for images …\nMake a shader with the specified tiling, matrix and …\nMake a shader with the specified tiling and mipmap …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReplaces FillType with its inverse. The inverse of …\nThe y coordinate of the rectangle’s top edge.\nThe y coordinate of the rectangle’s top edge.\nTransforms verb array, <code>Point</code> array, and weight by matrix. …\nTransforms verb array, <code>Point</code> array, and weight by matrix. …\nSets <code>ImageInfo</code> to width, height, and native color type; …\nAllocates pixel memory with HeapAllocator, and replaces …\nSets <code>ImageInfo</code> to info following the rules in <code>set_info()</code> …\nSets <code>ImageInfo</code> to info following the rules in <code>set_info()</code> …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nReturns value unique to image. <code>Image</code> contents cannot …\nThis function will return the number of unresolved glyphs …\nMacro that implements Send and Sync.\nUpdates internal bounds so that subsequent calls to …\nMacro that verifies a variant name at compile time.\nReturns pixel count in each row. Should be equal or less …\nReturns pixel count in each row; may be zero or greater.\nReturns pixel count in each row.\nCreate a new shader that produces the same colors as …\nReturns an image with the same “base” pixels as the …\nReturns a YUVAInfo that is identical to this one but with …\nReturn a shader that will apply the specified <code>local_matrix</code> …\nOffsets <code>Point</code> array by <code>(d.x, d.y)</code>.\nReturns a YUVAInfo that is identical to this one but with …\nTransforms verb array, <code>Point</code> array, and weight by matrix. …\nTransforms verb array, <code>Point</code> array, and weight by matrix. …\nReturn a shader that will compute this shader in a …\nReturn a color filter that will compute this filter in a …\nWrap the handle in a type that can be sent to another …\nFFI interoperability for skia-safe’s wrapper types.\nCopies <code>crate::Rect</code> of pixels from the src <code>Bitmap</code> to the …\nCopies <code>crate::Rect</code> of pixels from the src <code>Pixmap</code> to the …\ne.g. 2005\nRepresents an arc along an oval boundary, or a closed …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBounds of oval containing the arc.\nAngle in degrees where the arc begins. Zero means …\nSweep angle in degrees; positive is clockwise.\nCreate a blender that implements the following: …\nStack helper class calls <code>Canvas::restore_to_count()</code> when …\n<code>Canvas</code> provides an interface for drawing, and how the …\nUsed to pass either a slice of <code>Point</code> or <code>RSXform</code> to …\ninitializes with previous contents\n<code>Lattice</code> divides <code>crate::Bitmap</code> or <code>crate::Image</code> into a …\nRepresents a <code>Canvas</code> that is owned and dropped when it goes …\n<code>SaveLayerFlags</code> provides options that may be used in any …\n<code>SaveLayerRec</code> contains the state used to create the layer.\nProvides access to Canvas’s pixels.\nReturns the pixel base address, <code>ImageInfo</code>, <code>row_bytes</code>, and …\nGet a flags value with all known bits set.\nIf not <code>None</code>, this triggers the same initialization …\nGets the size of the base or root layer in global canvas …\nReturns the <code>SurfaceProps</code> associated with the canvas (i.e., …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nHints at layer size limit\nsource bounds to draw from\nFills clip with color <code>color</code> using <code>BlendMode::Src</code>. This has …\nReplaces clip with the intersection or difference of clip …\nReplaces clip with the intersection or difference of clip …\nReplaces clip with the intersection or difference of clip …\nReplaces clip with the intersection or difference of clip …\nIf not <code>None</code>, this triggers a color space conversion when …\narray of colors\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nReplaces <code>Matrix</code> with matrix premultiplied with existing …\nWhether all set bits in a source flags value are also set …\nSets <code>Self::bounds</code>, <code>Self::paint</code>, and <code>Self::backdrop</code> to <code>None</code>…\nReturns <code>IRect</code> bounds of clip, unaffected by <code>Matrix</code>. If …\nThe intersection of a source flags value with the …\nReturns the <code>gpu::DirectContext</code>. This is a rust-skia helper …\nMakes <code>Canvas</code> contents undefined. Subsequent calls that …\nAssociates <code>Rect</code> on <code>Canvas</code> when an annotation; a key-value …\nDraws arc using clip, <code>Matrix</code>, and <code>Paint</code> paint.\nDraws arc using clip, <code>Matrix</code>, and <code>Paint</code> paint.\nDraws a set of sprites from atlas, using clip, <code>Matrix</code>, and …\nDraws circle at center with radius using clip, <code>Matrix</code>, and …\nFills clip with color <code>color</code>. <code>mode</code> determines how ARGB is …\nDraws <code>Drawable</code> drawable using clip and <code>Matrix</code>, …\nDraws <code>Drawable</code> drawable using clip and <code>Matrix</code>, offset by …\nDraws <code>RRect</code> outer and inner using clip, <code>Matrix</code>, and <code>Paint</code> …\nDraws <code>count</code> glyphs, at positions relative to <code>origin</code> styled …\nDraws glyphs at positions relative to <code>origin</code> styled with …\nDraws <code>Image</code> <code>image</code> stretched proportionally to fit into <code>Rect</code>…\nDraws <code>Image</code> <code>image</code> stretched proportionally to fit into <code>Rect</code>…\nDraws <code>IRect</code> rect using clip, <code>Matrix</code>, and <code>Paint</code> <code>paint</code>. In …\nDraws line segment from <code>p1</code> to <code>p2</code> using clip, <code>Matrix</code>, and …\nDraws oval oval using clip, <code>Matrix</code>, and <code>Paint</code>. In <code>paint</code>: …\nFills clip with <code>Paint</code> <code>paint</code>. <code>Paint</code> components, <code>Shader</code>, …\nDraws a Coons patch: the interpolation of four cubics with …\nDraws <code>Path</code> path using clip, <code>Matrix</code>, and <code>Paint</code> <code>paint</code>. <code>Path</code> …\nDraws <code>Picture</code> picture, using clip and <code>Matrix</code>; transforming …\nDraws point <code>p</code> using clip, <code>Matrix</code> and <code>Paint</code> paint.\nDraws <code>pts</code> using clip, <code>Matrix</code> and <code>Paint</code> <code>pain</code>. if the number …\nDraws <code>Rect</code> rect using clip, <code>Matrix</code>, and <code>Paint</code> <code>paint</code>. In …\nDraws <code>Region</code> region using clip, <code>Matrix</code>, and <code>Paint</code> <code>paint</code>. …\nDraws <code>RRect</code> bounded by <code>Rect</code> rect, with corner radii …\nDraws <code>RRect</code> rrect using clip, <code>Matrix</code>, and <code>Paint</code> <code>paint</code>. In …\nDraws <code>String</code>, with origin at <code>(origin.x, origin.y)</code>, using …\nDraws <code>TextBlob</code> blob at <code>(origin.x, origin.y)</code>, using clip, …\nDraws <code>Vertices</code> vertices, a triangle mesh, using clip and …\nRestores <code>Canvas</code> to saved state. Drop is called when …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nPreserves LCD text, creates with prior layer contents\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstructs a canvas that draws into bitmap. Use props to …\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nAllocates raster <code>Canvas</code> that will draw directly into …\nAllocates raster <code>Canvas</code> specified by inline image …\nReturns <code>ImageInfo</code> for <code>Canvas</code>. If <code>Canvas</code> is not associated …\nWritable pixels’ <code>ImageInfo</code>\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nReturns <code>true</code> if clip is empty; that is, nothing will draw.\nReturns <code>true</code> if clip is <code>Rect</code> and not empty. Returns <code>false</code> …\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nReturns bounds of clip, transformed by inverse of <code>Matrix</code>. …\nReturns the current transform from local coordinates to …\nThrows away the 3rd row and column in the matrix, so be …\nCreates <code>Canvas</code> of the specified dimensions without a …\nCreates <code>Surface</code> matching info and props, and associates it …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\n<code>Canvas</code> top layer origin, its top-left corner\nModifies overlay\nReturns <code>true</code> if <code>Canvas</code> has direct access to its pixels.\nAddress of pixels\nCopies <code>SurfaceProps</code>, if <code>Canvas</code> is associated with raster …\nReturns <code>true</code> if <code>Rect</code> <code>rect</code>, transformed by <code>Matrix</code>, can be …\nReturns <code>true</code> if <code>path</code>, transformed by <code>Matrix</code>, can be …\nCopies <code>Rect</code> of pixels from <code>Canvas</code> into <code>dst_pixels</code>. <code>Matrix</code> …\nCopies <code>Rect</code> of pixels from <code>Canvas</code> into bitmap. <code>Matrix</code> and …\nCopies <code>Rect</code> of pixels from <code>Canvas</code> into pixmap. <code>Matrix</code> and …\nReturns Ganesh context of the GPU surface associated with …\narray of fill types\nThe intersection of a source flags value with the …\nSets <code>Matrix</code> to the identity matrix. Any prior matrix state …\nRemoves changes to <code>Matrix</code> and clip since <code>Canvas</code> state was …\nRestores <code>Canvas</code> to saved state immediately. Subsequent …\nRestores state to <code>Matrix</code> and clip values when <code>Self::save()</code>…\nRotates <code>Matrix</code> by degrees about a point at <code>(p.x, p.y)</code>. …\nWritable pixels’ row bytes\nSaves <code>Matrix</code> and clip. Calling <code>Self::restore()</code> discards …\nReturns the number of saved states, each containing: <code>Matrix</code>…\nSaves <code>Matrix</code> and clip, and allocates <code>Surface</code> for …\nHelper that accepts an int between 0 and 255, and divides …\nSaves <code>Matrix</code> and clip, and allocates <code>Surface</code> for …\nScales <code>Matrix</code> by <code>sx</code> on the x-axis and <code>sy</code> on the y-axis.\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nDEPRECATED – use <code>M44</code> version\nDEPRECATED – use <code>M44</code> version\nReplaces <code>Matrix</code> with <code>matrix</code>. Unlike <code>Self::concat()</code>, any …\nSkews <code>Matrix</code> by <code>sx</code> on the x-axis and <code>sy</code> on the y-axis. A …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nSometimes a canvas is owned by a surface. If it is, …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReturns the <code>SurfaceProps</code> associated with the canvas that …\nDEPRECATED Legacy version of <code>Self::local_to_device()</code>, …\nTranslates <code>Matrix</code> by <code>d</code>.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nCopies <code>Rect</code> from pixels to <code>Canvas</code>. <code>Matrix</code> and clip are …\nCopies <code>Rect</code> from pixels to <code>Canvas</code>. <code>Matrix</code> and clip are …\nx-axis values dividing bitmap\ny-axis values dividing bitmap\n<code>Lattice</code> divides <code>crate::Bitmap</code> or <code>crate::Image</code> into a …\nsource bounds to draw from\narray of colors\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\narray of fill types\nx-axis values dividing bitmap\ny-axis values dividing bitmap\nReflected across x-axis\nRotated 180\nThese values match the orientation …\nRotated 90 CCW\nReflected across x-axis, Rotated 90 CCW\nReflected across x-axis, Rotated 90 CW\nRotated 90 CW\nDefault\nReflected across y-axis\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCopy the pixels in src into dst, applying the orientation …\nReturn a copy of the provided ImageInfo with the width and …\nBlends between the constant color (src) and input color …\nSee <code>hsla_matrix_of_color_matrix()</code>\nCreate a color filter that multiplies the RGB channels by …\nCreate a table color filter, copying the table into the …\nCreate a table color filter, with a different table for …\nCreate a table color filter that holds a ref to the shared …\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nBorrows the canvas for the current page on the document.\nClose the document and return the encoded representation.\nEnds the page.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe current page we are currently drawing on.\nThe number of pages in this document.\nDocument is currently on a page and can be drawn onto.\nDocument is currently open. May contain several pages.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nWrapper type of a font weight.\nWrapper type for the width of a font.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA description of a set BackendTextures that hold the …\nA set of BackendTextures that hold the planar data for an …\nIf <code>true</code>, then allow to enable MSAA on new Intel GPUs.\nCan the glyph atlas use multiple textures. If allowed, the …\nIf <code>true</code> this allows path mask textures to be cached. This …\nCurrently on ARM Android we disable the use of GL …\nBugs on certain drivers cause stencil buffers to leak. …\nThe threshold in bytes above which we will use a buffer …\nDisables the use of coverage counting shortcuts to render …\nDisables distance field rendering for paths. Distance …\nDisables correctness workarounds that are enabled for …\nIf <code>true</code>, the GPU will not be used to perform YUV -&gt; RGB …\nIf <code>true</code>, the TessellationPathRenderer will not be used for …\nConstruct mipmaps manually, via repeated downsampling …\nIf <code>true</code>, and if supported, enables hardware tessellation …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe maximum size of cache textures used for Skia’s Glyph …\nAbove this threshold size in device space glyphs are drawn …\nSpecifies the number of samples Ganesh should use when …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIn Skia’s vulkan backend a single <code>Context</code> submit equates …\nOverrides: These options override feature detection using …\nBelow this threshold size in device space distance field …\nDefault minimum size to use when allocating buffers for …\nSome ES3 contexts report the ES2 external image extension, …\nAllow Ganesh to more aggressively reorder operations to …\nUses a reduced variety of shaders. May perform less …\nMaximum number of GPU programs or pipelines to keep active …\nThis affects the usage of the PersistentCache. We can …\nControls whether we check for GL errors after functions …\nIf <code>true</code>, then add 1 pixel padding to all glyph masks in …\nIf <code>true</code>, the caps will never support mipmaps.\nEnables driver workaround to use draws instead of HW …\nIf <code>true</code>, then allow to enable MSAA on new Intel GPUs.\nCan the glyph atlas use multiple textures. If allowed, the …\nIf <code>true</code> this allows path mask textures to be cached. This …\nCurrently on ARM Android we disable the use of GL …\nBugs on certain drivers cause stencil buffers to leak. …\nThe threshold in bytes above which we will use a buffer …\nDisables the use of coverage counting shortcuts to render …\nDisables distance field rendering for paths. Distance …\nDisables correctness workarounds that are enabled for …\nIf <code>true</code>, the GPU will not be used to perform YUV -&gt; RGB …\nIf <code>true</code>, the TessellationPathRenderer will not be used for …\nConstruct mipmaps manually, via repeated downsampling …\nIf <code>true</code>, and if supported, enables hardware tessellation …\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe maximum size of cache textures used for Skia’s Glyph …\nAbove this threshold size in device space glyphs are drawn …\nSpecifies the number of samples Ganesh should use when …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIn Skia’s vulkan backend a single <code>Context</code> submit equates …\nOverrides: These options override feature detection using …\nBelow this threshold size in device space distance field …\nDefault minimum size to use when allocating buffers for …\nSome ES3 contexts report the ES2 external image extension, …\nAllow Ganesh to more aggressively reorder operations to …\nUses a reduced variety of shaders. May perform less …\nMaximum number of GPU programs or pipelines to keep active …\nThis affects the usage of the PersistentCache. We can …\nControls whether we check for GL errors after functions …\nIf <code>true</code>, then add 1 pixel padding to all glyph masks in …\nIf <code>true</code>, the caps will never support mipmaps.\nEnables driver workaround to use draws instead of HW …\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nCreates GPU-backed <code>Image</code> from <code>backend_texture</code> associated …\nCreates GPU-backed <code>Image</code> from the provided GPU texture …\nCreates a GPU-backed <code>Image</code> from pixmap. It is uploaded to …\nRetrieves the existing backend texture. If <code>Image</code> is not a …\nReturns subset of this image as a texture-backed image.\nCreates a GPU-backed <code>Image</code> from compressed data. This …\nReturns <code>Image</code> backed by GPU texture associated with …\nCreates a GPU-backed <code>Image</code> from <code>YUVAPixmaps</code>. The image …\nCreates a GPU-backed <code>Image</code> from <code>YUV[A]</code> planar textures. …\nRetrieves the back-end render target. If <code>Surface</code> has no …\nRetrieves the back-end texture. If <code>Surface</code> has no back-end …\nReturns <code>Surface</code> on GPU indicated by context. Allocates …\nIf a surface is a Ganesh-backed surface, is being drawn …\nWraps a GPU-backed buffer into <code>Surface</code>. Caller must ensure …\nWraps a GPU-backed texture into <code>Surface</code>. Caller must …\nType that represents either a slice of <code>Color</code>, or a slice …\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.")