(function() {var type_impls = {
"vizia":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CSize%3E-for-Point\" class=\"impl\"><a href=\"#impl-Add%3CSize%3E-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"struct\" href=\"vizia/vg/struct.Size.html\" title=\"struct vizia::vg::Size\">Size</a>&gt; for <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: <a class=\"struct\" href=\"vizia/vg/struct.Size.html\" title=\"struct vizia::vg::Size\">Size</a>) -&gt; <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<Size>","vizia::vg::Vector"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-Point\" class=\"impl\"><a href=\"#impl-Add-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a>) -&gt; <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","vizia::vg::Vector"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3CSize%3E-for-Point\" class=\"impl\"><a href=\"#impl-AddAssign%3CSize%3E-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;<a class=\"struct\" href=\"vizia/vg/struct.Size.html\" title=\"struct vizia::vg::Size\">Size</a>&gt; for <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"vizia/vg/struct.Size.html\" title=\"struct vizia::vg::Size\">Size</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<Size>","vizia::vg::Vector"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-Point\" class=\"impl\"><a href=\"#impl-AddAssign-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","vizia::vg::Vector"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Point\" class=\"impl\"><a href=\"#impl-Clone-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/clone.rs.html#172\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","vizia::vg::Vector"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Point\" class=\"impl\"><a href=\"#impl-Debug-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","vizia::vg::Vector"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Point\" class=\"impl\"><a href=\"#impl-Default-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","vizia::vg::Vector"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3Cf32%3E-for-Point\" class=\"impl\"><a href=\"#impl-Div%3Cf32%3E-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>&gt; for <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<f32>","vizia::vg::Vector"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3Cf32%3E-for-Point\" class=\"impl\"><a href=\"#impl-DivAssign%3Cf32%3E-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>&gt; for <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<f32>","vizia::vg::Vector"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(f32,+f32)%3E-for-Point\" class=\"impl\"><a href=\"#impl-From%3C(f32,+f32)%3E-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>)&gt; for <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(source: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>)) -&gt; <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(f32, f32)>","vizia::vg::Vector"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(i32,+i32)%3E-for-Point\" class=\"impl\"><a href=\"#impl-From%3C(i32,+i32)%3E-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.i32.html\">i32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.i32.html\">i32</a>)&gt; for <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(source: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.i32.html\">i32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.i32.html\">i32</a>)) -&gt; <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(i32, i32)>","vizia::vg::Vector"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CIPoint%3E-for-Point\" class=\"impl\"><a href=\"#impl-From%3CIPoint%3E-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"vizia/vg/struct.IVector.html\" title=\"struct vizia::vg::IVector\">IPoint</a>&gt; for <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(source: <a class=\"struct\" href=\"vizia/vg/struct.IVector.html\" title=\"struct vizia::vg::IVector\">IPoint</a>) -&gt; <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<IPoint>","vizia::vg::Vector"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3Cf32%3E-for-Point\" class=\"impl\"><a href=\"#impl-Mul%3Cf32%3E-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>&gt; for <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<f32>","vizia::vg::Vector"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3Cf32%3E-for-Point\" class=\"impl\"><a href=\"#impl-MulAssign%3Cf32%3E-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>&gt; for <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<f32>","vizia::vg::Vector"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-Point\" class=\"impl\"><a href=\"#impl-Neg-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; &lt;<a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a> as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" title=\"type core::ops::arith::Neg::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","vizia::vg::Vector"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Point\" class=\"impl\"><a href=\"#impl-PartialEq-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#262\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","vizia::vg::Vector"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Point\" class=\"impl\"><a href=\"#impl-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub const fn <a href=\"vizia/vg/struct.Point.html#tymethod.new\" class=\"fn\">new</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>, y: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h4></section><section id=\"method.is_zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vizia/vg/struct.Point.html#tymethod.is_zero\" class=\"fn\">is_zero</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.set\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vizia/vg/struct.Point.html#tymethod.set\" class=\"fn\">set</a>(&amp;mut self, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>, y: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>)</h4></section><section id=\"method.iset\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vizia/vg/struct.Point.html#tymethod.iset\" class=\"fn\">iset</a>(&amp;mut self, p: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"vizia/vg/struct.IVector.html\" title=\"struct vizia::vg::IVector\">IPoint</a>&gt;)</h4></section><section id=\"method.set_abs\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vizia/vg/struct.Point.html#tymethod.set_abs\" class=\"fn\">set_abs</a>(&amp;mut self, p: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a>&gt;)</h4></section><section id=\"method.offset_points\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vizia/vg/struct.Point.html#tymethod.offset_points\" class=\"fn\">offset_points</a>(points: &amp;mut [<a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a>], offset: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a>&gt;)</h4></section><section id=\"method.offset\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vizia/vg/struct.Point.html#tymethod.offset\" class=\"fn\">offset</a>(&amp;mut self, d: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a>&gt;)</h4></section><section id=\"method.length\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vizia/vg/struct.Point.html#tymethod.length\" class=\"fn\">length</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.distance_to_origin\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vizia/vg/struct.Point.html#tymethod.distance_to_origin\" class=\"fn\">distance_to_origin</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.normalize\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vizia/vg/struct.Point.html#tymethod.normalize\" class=\"fn\">normalize</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.set_normalize\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vizia/vg/struct.Point.html#tymethod.set_normalize\" class=\"fn\">set_normalize</a>(&amp;mut self, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>, y: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.set_length\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vizia/vg/struct.Point.html#tymethod.set_length\" class=\"fn\">set_length</a>(&amp;mut self, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.set_length_xy\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vizia/vg/struct.Point.html#tymethod.set_length_xy\" class=\"fn\">set_length_xy</a>(&amp;mut self, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>, y: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>, length: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.scaled\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vizia/vg/struct.Point.html#tymethod.scaled\" class=\"fn\">scaled</a>(self, scale: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h4></section><section id=\"method.scale\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vizia/vg/struct.Point.html#tymethod.scale\" class=\"fn\">scale</a>(&amp;mut self, scale: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>)</h4></section><section id=\"method.negate\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vizia/vg/struct.Point.html#tymethod.negate\" class=\"fn\">negate</a>(&amp;mut self)</h4></section><section id=\"method.is_finite\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vizia/vg/struct.Point.html#tymethod.is_finite\" class=\"fn\">is_finite</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.equals\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vizia/vg/struct.Point.html#tymethod.equals\" class=\"fn\">equals</a>(self, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>, y: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section><section id=\"method.length_xy\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vizia/vg/struct.Point.html#tymethod.length_xy\" class=\"fn\">length_xy</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>, y: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.normalize_vector\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vizia/vg/struct.Point.html#tymethod.normalize_vector\" class=\"fn\">normalize_vector</a>(v: &amp;mut <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.distance\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vizia/vg/struct.Point.html#tymethod.distance\" class=\"fn\">distance</a>(a: <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a>, b: <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.dot_product\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vizia/vg/struct.Point.html#tymethod.dot_product\" class=\"fn\">dot_product</a>(a: <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a>, b: <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.cross_product\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vizia/vg/struct.Point.html#tymethod.cross_product\" class=\"fn\">cross_product</a>(a: <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a>, b: <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.cross\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vizia/vg/struct.Point.html#tymethod.cross\" class=\"fn\">cross</a>(self, vec: <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.dot\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"vizia/vg/struct.Point.html#tymethod.dot\" class=\"fn\">dot</a>(self, vec: <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a></h4></section></div></details>",0,"vizia::vg::Vector"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CSize%3E-for-Point\" class=\"impl\"><a href=\"#impl-Sub%3CSize%3E-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"vizia/vg/struct.Size.html\" title=\"struct vizia::vg::Size\">Size</a>&gt; for <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"vizia/vg/struct.Size.html\" title=\"struct vizia::vg::Size\">Size</a>) -&gt; <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<Size>","vizia::vg::Vector"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-Point\" class=\"impl\"><a href=\"#impl-Sub-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a>) -&gt; <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","vizia::vg::Vector"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3CSize%3E-for-Point\" class=\"impl\"><a href=\"#impl-SubAssign%3CSize%3E-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;<a class=\"struct\" href=\"vizia/vg/struct.Size.html\" title=\"struct vizia::vg::Size\">Size</a>&gt; for <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"vizia/vg/struct.Size.html\" title=\"struct vizia::vg::Size\">Size</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<Size>","vizia::vg::Vector"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-Point\" class=\"impl\"><a href=\"#impl-SubAssign-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a>)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","vizia::vg::Vector"],["<section id=\"impl-Copy-for-Point\" class=\"impl\"><a href=\"#impl-Copy-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h3></section>","Copy","vizia::vg::Vector"],["<section id=\"impl-StructuralPartialEq-for-Point\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"vizia/vg/struct.Point.html\" title=\"struct vizia::vg::Point\">Point</a></h3></section>","StructuralPartialEq","vizia::vg::Vector"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()