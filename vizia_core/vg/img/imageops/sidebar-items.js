window.SIDEBAR_ITEMS = {"enum":[["FilterType","Available Sampling Filters."]],"fn":[["blur","Performs a Gaussian blur on the supplied image. `sigma` is a measure of how much to blur by."],["brighten","Brighten the supplied image. `value` is the amount to brighten each pixel by. Negative values decrease the brightness and positive values increase it."],["contrast","Adjust the contrast of the supplied image. `contrast` is the amount to adjust the contrast by. Negative values decrease the contrast and positive values increase the contrast."],["crop","Return a mutable view into an image The coordinates set the position of the top left corner of the crop."],["crop_imm","Return an immutable view into an image The coordinates set the position of the top left corner of the crop."],["dither","Reduces the colors of the image using the supplied `color_map` while applying Floyd-Steinberg dithering to improve the visual conception"],["filter3x3","Perform a 3x3 box filter on the supplied image. `kernel` is an array of the filter weights of length 9."],["flip_horizontal","Flip an image horizontally"],["flip_horizontal_in","Flip an image horizontally and put the result into the destination [`ImageBuffer`]."],["flip_horizontal_in_place","Flip an image horizontally in place."],["flip_vertical","Flip an image vertically"],["flip_vertical_in","Flip an image vertically and put the result into the destination [`ImageBuffer`]."],["flip_vertical_in_place","Flip an image vertically in place."],["grayscale","Convert the supplied image to grayscale. Alpha channel is discarded."],["grayscale_alpha","Convert the supplied image to grayscale. Alpha channel is preserved."],["grayscale_with_type","Convert the supplied image to a grayscale image with the specified pixel type. Alpha channel is discarded."],["grayscale_with_type_alpha","Convert the supplied image to a grayscale image with the specified pixel type. Alpha channel is preserved."],["horizontal_gradient","Fill the image with a linear horizontal gradient"],["huerotate","Hue rotate the supplied image. `value` is the degrees to rotate each pixel by. 0 and 360 do nothing, the rest rotates by the given degree value. just like the css webkit filter hue-rotate(180)"],["index_colors","Reduces the colors using the supplied `color_map` and returns an image of the indices"],["invert","Invert each pixel within the supplied image. This function operates in place."],["overlay","Overlay an image at a given coordinate (x, y)"],["overlay_bounds","Calculate the region that can be copied from top to bottom."],["replace","Replace the contents of an image at a given coordinate (x, y)"],["resize","Resize the supplied image to the specified dimensions. `nwidth` and `nheight` are the new dimensions. `filter` is the sampling filter to use."],["rotate180","Rotate an image 180 degrees clockwise."],["rotate180_in","Rotate an image 180 degrees clockwise and put the result into the destination [`ImageBuffer`]."],["rotate180_in_place","Rotate an image 180 degrees clockwise in place."],["rotate270","Rotate an image 270 degrees clockwise."],["rotate270_in","Rotate an image 270 degrees clockwise and put the result into the destination [`ImageBuffer`]."],["rotate90","Rotate an image 90 degrees clockwise."],["rotate90_in","Rotate an image 90 degrees clockwise and put the result into the destination [`ImageBuffer`]."],["thumbnail","Resize the supplied image to the specific dimensions."],["tile","Tile an image by repeating it multiple times"],["unsharpen","Performs an unsharpen mask on the supplied image. `sigma` is the amount to blur the image by. `threshold` is the threshold for minimal brightness change that will be sharpened."],["vertical_gradient","Fill the image with a linear vertical gradient"]],"mod":[["colorops","Functions for altering and converting the color of pixelbufs"]],"struct":[["BiLevel","A bi-level color map"]],"trait":[["ColorMap","A color map"]]};